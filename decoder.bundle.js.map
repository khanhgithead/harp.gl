{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"THREE\"","webpack:///../@here/harp-datasource-protocol/lib/Expr.ts","webpack:///../@here/harp-utils/index.web.ts","webpack:///../@here/harp-geoutils/index.ts","webpack:///../@here/harp-datasource-protocol/index.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinates.ts","webpack:///../@here/harp-geoutils/lib/math/MathUtils.ts","webpack:///../node_modules/protobufjs/src/util/minimal.js","webpack:///../@here/harp-geoutils/lib/math/Box3Like.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3Like.ts","webpack:///../@here/harp-geoutils/lib/projection/Projection.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedPropertyDefs.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoBox.ts","webpack:///../@here/harp-geoutils/lib/projection/EarthConstants.ts","webpack:///../@here/harp-geoutils/lib/tiling/TilingScheme.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoderDefs.ts","webpack:///../@here/harp-datasource-protocol/lib/ColorUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/Env.ts","webpack:///../@here/harp-geoutils/lib/projection/MercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKey.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerService.ts","webpack:///../@here/harp-omv-datasource/lib/OmvUtils.ts","webpack:///../@here/harp-omv-datasource/lib/OmvDecoder.ts","webpack:///../@here/harp-utils/lib/Logger/ILogger.ts","webpack:///../@here/harp-utils/lib/UrlUtils.ts","webpack:///../@here/harp-datasource-protocol/lib/StringEncodedNumeral.ts","webpack:///../@here/harp-datasource-protocol/lib/Theme.ts","webpack:///../@here/harp-datasource-protocol/lib/Techniques.ts","webpack:///../@here/harp-datasource-protocol/index-decoder.ts","webpack:///../@here/harp-utils/lib/Logger/ConsoleChannel.ts","webpack:///../@here/harp-utils/lib/Logger/Logger.ts","webpack:///../@here/harp-utils/lib/Logger/WorkerChannel.ts","webpack:///../@here/harp-datasource-protocol/lib/InterpolatedProperty.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueParams.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueDescriptor.ts","webpack:///../@here/harp-datasource-protocol/lib/DecodedTile.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoCoordinatesLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/GeoPointLike.ts","webpack:///../@here/harp-geoutils/lib/coordinates/LatLngLike.ts","webpack:///../@here/harp-geoutils/lib/projection/EquirectangularProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/TransverseMercatorProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/FlatTileBoundingBoxGenerator.ts","webpack:///../@here/harp-geoutils/lib/tiling/HalfQuadTreeSubdivisionScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/SubTiles.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileKeyUtils.ts","webpack:///../@here/harp-geoutils/lib/tiling/TileTreeTraverse.ts","webpack:///../@here/harp-datasource-protocol/lib/StyleSetEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/TechniqueAttr.ts","webpack:///../@here/harp-mapview-decoder/index-worker.ts","webpack:///../@here/harp-mapview-decoder/lib/GeoJsonTiler.ts","webpack:///../@here/harp-omv-datasource/lib/VTJsonDataAdapter.ts","webpack:///../node_modules/protobufjs/src/writer.js","webpack:///../node_modules/protobufjs/src/reader.js","webpack:///../@here/harp-omv-datasource/lib/OmvDataFilter.ts","webpack:///../@here/harp-geometry/lib/SubdivisionModifier.ts","webpack:///./src/decoder.ts","webpack:///../@here/harp-omv-datasource/index-worker.ts","webpack:///../@here/harp-utils/index-common.ts","webpack:///../@here/harp-utils/lib/GroupedPriorityList.ts","webpack:///../@here/harp-utils/lib/Logger/index.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManager.ts","webpack:///../@here/harp-utils/lib/Logger/LoggerManagerImpl.ts","webpack:///../@here/harp-utils/lib/Logger/MultiChannel.ts","webpack:///../@here/harp-utils/lib/Math2D.ts","webpack:///../@here/harp-utils/lib/MathUtils.ts","webpack:///../@here/harp-utils/lib/Mixins.ts","webpack:///../@here/harp-utils/lib/assert.ts","webpack:///../@here/harp-utils/lib/ContextLogger.ts","webpack:///../@here/harp-utils/lib/PerformanceTimer.ts","webpack:///../@here/harp-utils/lib/ObjectUtils.ts","webpack:///../@here/harp-utils/lib/OptionsUtils.ts","webpack:///../@here/harp-utils/lib/UriResolver.ts","webpack:///../@here/harp-utils/lib/Functions.ts","webpack:///../@here/harp-utils/lib/SampleBilinear.ts","webpack:///../@here/harp-utils/lib/UrlPlatformUtils.web.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprEvaluator.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ArrayOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/CastOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ColorOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ComparisonOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FeatureOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/FlowOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/InterpolationOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExponentialInterpolant.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MapOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MathOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/MiscOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/ObjectOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/StringOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/operators/TypeOperators.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprInstantiator.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprParser.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerServiceProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerTilerProtocol.ts","webpack:///../@here/harp-datasource-protocol/lib/WorkerDecoderProtocol.ts","webpack:///../@here/harp-geoutils/lib/projection/IdentityProjection.ts","webpack:///../@here/harp-geoutils/lib/projection/SphereProjection.ts","webpack:///../@here/harp-geoutils/lib/tiling/QuadTree.ts","webpack:///../@here/harp-geoutils/lib/tiling/HereTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/WebMercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/MercatorTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/tiling/PolarTilingScheme.ts","webpack:///../@here/harp-geoutils/lib/math/Vector3Like.ts","webpack:///../@here/harp-geoutils/lib/math/TransformLike.ts","webpack:///../@here/harp-geoutils/lib/math/OrientedBox3.ts","webpack:///../@here/harp-datasource-protocol/lib/TileInfo.ts","webpack:///../@here/harp-datasource-protocol/lib/ExprPool.ts","webpack:///../@here/harp-datasource-protocol/lib/ThemeVisitor.ts","webpack:///../@here/harp-mapview-decoder/lib/ThemedTileDecoder.ts","webpack:///../@here/harp-datasource-protocol/lib/Extruder.ts","webpack:///../@here/harp-datasource-protocol/lib/Outliner.ts","webpack:///../@here/harp-datasource-protocol/lib/ThreeBufferUtils.ts","webpack:///../@here/harp-mapview-decoder/lib/TileDecoderService.ts","webpack:///../@here/harp-mapview-decoder/lib/TilerService.ts","webpack:///../@here/harp-mapview-decoder/lib/WorkerServiceManager.ts","webpack:///../@here/harp-omv-datasource/lib/OmvData.ts","webpack:///../node_modules/long/src/long.js","webpack:///../@here/harp-omv-datasource/lib/proto/vector_tile.js","webpack:///../node_modules/protobufjs/minimal.js","webpack:///../node_modules/protobufjs/src/index-minimal.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/@protobufjs/aspromise/index.js","webpack:///../node_modules/@protobufjs/base64/index.js","webpack:///../node_modules/@protobufjs/eventemitter/index.js","webpack:///../node_modules/@protobufjs/float/index.js","webpack:///../node_modules/@protobufjs/inquire/index.js","webpack:///../node_modules/@protobufjs/utf8/index.js","webpack:///../node_modules/@protobufjs/pool/index.js","webpack:///../node_modules/protobufjs/src/util/longbits.js","webpack:///../node_modules/protobufjs/src/writer_buffer.js","webpack:///../node_modules/protobufjs/src/reader_buffer.js","webpack:///../node_modules/protobufjs/src/rpc.js","webpack:///../node_modules/protobufjs/src/rpc/service.js","webpack:///../node_modules/protobufjs/src/roots.js","webpack:///../@here/harp-omv-datasource/lib/OmvDecodedTileEmitter.ts","webpack:///../@here/harp-lines/lib/Lines.ts","webpack:///../@here/harp-lines/lib/TriangulateLines.ts","webpack:///../node_modules/earcut/src/earcut.js","webpack:///../@here/harp-geometry/lib/ClipPolygon.ts","webpack:///../@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier.ts","webpack:///../@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier.ts","webpack:///../@here/harp-materials/lib/MapMeshMaterialsDefs.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTileInfoEmitter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTomTomFeatureModifier.ts","webpack:///../@here/harp-omv-datasource/lib/StyleSetDataFilter.ts","webpack:///../@here/harp-omv-datasource/lib/OmvTiler.ts","webpack:///../node_modules/geojson-vt/src/simplify.js","webpack:///../node_modules/geojson-vt/src/feature.js","webpack:///../node_modules/geojson-vt/src/convert.js","webpack:///../node_modules/geojson-vt/src/clip.js","webpack:///../node_modules/geojson-vt/src/wrap.js","webpack:///../node_modules/geojson-vt/src/transform.js","webpack:///../node_modules/geojson-vt/src/tile.js","webpack:///../node_modules/geojson-vt/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","THREE","exprEvaluator","ExprEvaluator","exprInstantiator","ExprInstantiator","ExprDependencies","properties","Set","ComputeExprDependencies","expr","dependencies","accept","this","instance","context","add","args","forEach","childExpr","op","featureState","branches","_","branch","fallback","condition","isJsonExpr","v","Array","isArray","length","ExprScope","Expr","code","ExprParser","parse","node","definitions","definitionExprCache","parseNode","undefined","lockedNames","cache","Map","env","scope","Value","ExprEvaluatorContext","m_dependencies","of","pool","ExprSerializer","serialize","m_isDynamic","exprIsDynamic","VarExpr","super","visitor","visitVarExpr","LiteralExpr","BooleanLiteralExpr","NumberLiteralExpr","StringLiteralExpr","NullLiteralExpr","ObjectLiteralExpr","Error","visitNullLiteralExpr","visitBooleanLiteralExpr","visitNumberLiteralExpr","visitStringLiteralExpr","visitObjectLiteralExpr","HasAttributeExpr","visitHasAttributeExpr","CallExpr","visitCallExpr","descriptor","getOperator","isDynamicOperator","some","e","isDynamic","MatchExpr","elementTy","every","visitMatchExpr","CaseExpr","visitCaseExpr","cond","map","label","body","push","referenceResolverState","parseCall","slice","has","cachedEntry","result","definitionEntry","isLiteralDefinition","fromJSON","isBoxedDefinition","isInterpolatedPropertyDefinition","interpolatedPropertyDefinitionToJsonExpr","delete","set","resolveReference","makeCallExpr","parseGetExpr","parseHasExpr","obj","parseLiteralExpr","conditions","isValidMatchLabel","JSON","stringify","parseMatchExpr","caseFallback","parseCaseExpr","GeoCoordinates","latitude","longitude","altitude","MathUtils","radToDeg","latLng","lat","lng","geoPoint","isGeoPointLike","fromGeoPoint","isGeoCoordinatesLike","fromDegrees","isLatLngLike","degToRad","isNaN","wrapped","sign","Math","other","normalizeAngleDeg","a","angleDistanceDeg","b","newEmptyBox3","min","x","Infinity","y","z","max","newVector3","clamp","interpolateAnglesDeg","p0","p1","util","merge","dst","src","ifNotSet","keys","newError","CustomError","message","captureStackTrace","stack","constructor","toString","asPromise","base64","EventEmitter","float","inquire","utf8","LongBits","global","window","self","emptyArray","freeze","emptyObject","isNode","Boolean","process","versions","isInteger","Number","isFinite","floor","isString","String","isObject","isset","isSet","prop","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Uint8Array","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","from","toHash","zeroHash","longFromHash","hash","unsigned","bits","fromHash","fromBits","lo","hi","toNumber","lcFirst","str","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","size","box3","obb","position","xAxis","yAxis","zAxis","extents","ProjectionType","unitScale","projectPoint","sourceProjection","worldPos","unprojectPoint","InterpolationMode","interpolationMode","values","zoomLevels","interpolation","step","exponent","GeoBox","southWest","northEast","south","north","west","east","minAltitude","altitudeSpan","latitudeSpan","longitudeSpan","maxAltitude","width","point","containsHelper","isFlat","isSameAltitude","isWithinAltitudeRange","EarthConstants","EQUATORIAL_CIRCUMFERENCE","EQUATORIAL_RADIUS","MIN_ELEVATION","MAX_ELEVATION","MAX_BUILDING_HEIGHT","subdivisionScheme","projection","boundingBoxGenerator","FlatTileBoundingBoxGenerator","tileTreeTraverse","TileTreeTraverse","tileKey","subTiles","level","TileKeyUtils","geoCoordinatesToTileKey","geoBox","geoRectangleToTileKeys","getGeoBox","getWorldBox","FeatureModifierId","OmvFilterString","StringMatch","matchString","filterString","match","Any","Match","StartsWith","startsWith","EndsWith","endsWith","indexOf","OmvGeometryType","OMV_TILE_DECODER_SERVICE_TYPE","OMV_TILER_SERVICE_TYPE","tmpColor","Color","ColorUtils","getHexFromRgba","g","assert","getHexFromRgb","getHexFromHsl","h","setHSL","getHex","getRgbaFromHex","hex","hasAlphaInHex","getAlphaFromHex","removeAlphaFromHex","Env","_name","entries","parent","lookup","unmap","MercatorProjection","Projection","type","Planar","val","MercatorConstants","MAXIMUM_LATITUDE","log","tan","PI","latitudeProject","latitudeClamp","atan","exp","worldPoint","cosh","Box3","geoPointLike","latitudeClampProject","latitudeInRadians","fromRadians","unprojectLatitude","worldCenter","center","worldNorth","worldSouth","worldYCenter","isBox3Like","isOrientedBox3Like","EPSILON","worldBox","minGeo","maxGeo","fromCoordinates","_worldPoint","normal","webMercatorProjection","mercatorProjection","reprojectPoint","sy","sin","projectBox","maxY","quadTreeSubdivisionScheme","powerOfTwo","TileKey","row","column","quadkey","mask","parseInt","fromRowColumnLevel","quadKey64","quadKey","m_mortonCode","quadkey64","fromMortonCode","m_hereTile","pow","coordX","coordY","totalWidth","totalHeight","rowsAtLevel","columnsAtLevel","mortonCode","delta","changedLevelBy","col","qnr","sub","subQuad","fromQuadKey","child","fromHereTile","msb","logger","LoggerManager","enabled","serviceId","m_pendingRequests","onMessage","data","service","WorkerServiceProtocol","isRequestMessage","request","requestEntry","messageId","responseSent","tryHandleRequest","then","response","doSendResponse","ServiceMessageName","Response","transferList","catch","error","errorMessage","errorStack","tryHandleMessage","err","addEventListener","isInitializedMessage","Initialized","postMessage","cancelAllPendingRequests","removeEventListener","handleMessage","handleRequest","Promise","reject","lat2tile","zoom","func","cos","createWorldTileTransformationCookie","decodeInfo","N","log2","scale","top","adapterId","VTJsonDataAdapterId","round","left","tile2world","flipY","target","worldTileProjectionCookie","R","SharedArrayBuffer","ArrayBuffer","tempWorldPos","Vector2","webMercatorTile2TargetWorld","targetProjection","vertexStride","contour","winding","area","points","stride","q","OmvDecoder","m_projection","m_styleSetEvaluator","m_showMissingTechniques","m_dataFilter","m_featureModifier","m_gatherFeatureAttributes","m_createTileInfo","m_gatherRoadSegments","m_skipShortLabels","m_storageLevelOffset","m_enableElevationOverlay","m_languages","m_dataAdapters","styleSetDataFilter","StyleSetDataFilter","dataPreFilter","ComposedDataFilter","OmvProtobufDataAdapter","VTJsonDataAdapter","dataAdapter","adapter","canProcess","techniques","geometries","resetTechniques","tileSizeOnScreen","estimatedTileSizeOnScreen","DecodeInfo","id","m_decodedTileEmitter","OmvDecodedTileEmitter","storeExtendedTags","m_infoTileEmitter","OmvTileInfoEmitter","decodedTile","getDecodedTile","tileInfo","getTileInfo","ExtendedTileInfo","layer","geometry","storageLevel","doProcessPointFeature","applyKindFilter","getMatchingTechniques","GeometryKind","Label","zoomLevel","getZoomLevel","cachedExprResults","expressionEvaluatorCache","featureId","processPointFeature","doProcessLineFeature","Line","processLineFeature","doProcessPolygonFeature","Area","processPolygonFeature","defaultKind","hasKindFilter","filter","technique","kind","wantsKind","projectedBoundingBox","OrientedBox3","tileBounds","tileSize","Vector3","tilingScheme","getCenter","getSize","webMercatorTilingScheme","OmvTileDecoder","ThemedTileDecoder","resolve","styleSetEvaluator","startTime","PerformanceTimer","now","m_featureFilter","languages","decodeTime","setupTime","styleSet","options","configure","omvOptions","showMissingTechniques","filterDescription","OmvGenericFeatureFilter","createFeatureModifier","featureModifierId","gatherFeatureAttributes","createTileInfo","gatherRoadSegments","skipShortLabels","enableElevationOverlay","tomTom","OmvTomTomFeatureModifier","OmvGenericFeatureModifier","OmvTileDecoderService","WorkerServiceManager","getInstance","register","serviceType","factory","TileDecoderService","start","warn","LogLevel","parentUri","childUri","absoluteUrlWithOriginRe","test","getUrlOrigin","substr","baseUrl","RegExp","url","idx","lastIndexOf","parsed","getUrlHostAndProtocol","protocol","host","urlOriginRe","StringEncodedNumeralType","StringEncodedMeters","Meters","regExp","decoder","encodedValue","exec","StringEncodedPixels","Pixels","StringEncodedHex","Hex","StringEncodedRGB","RGB","channels","StringEncodedRGBA","RGBA","parseFloat","StringEncodedHSL","HSL","StringEncodedMetricFormats","StringEncodedMetricFormatMaxSize","reduce","StringEncodedColorFormats","StringEncodedColorFormatMaxSize","StringEncodedNumeralFormats","StringEncodedNumeralFormatMaxSize","tmpBuffer","numeral","pixelToMeters","format","color","matchedFormat","formats","find","def","bdef","styleDef","TEXTURE_PROPERTY_KEYS","TRANSPARENCY_PROPERTY_KEYS","techniqueDescriptors","baseTechniqueParamsDescriptor","attrTransparencyColor","attrScopes","renderOrder","AttrScope","TechniqueGeometry","FeatureGeometry","transient","fadeFar","TechniqueRendering","fadeNear","pointTechniquePropTypes","mergeTechniqueDescriptor","texture","enablePicking","transparent","opacity","squaresTechniquePropTypes","squares","circlesTechniquePropTypes","circles","lineMarkerTechniquePropTypes","text","useAbbreviation","useIsoCode","priority","textMinZoomLevel","textMaxZoomLevel","iconMinZoomLevel","iconMaxZoomLevel","distanceScale","textMayOverlap","iconMayOverlap","textReserveSpace","iconReserveSpace","renderTextDuringMovements","alwaysOnTop","textIsOptional","showOnMap","stackMode","minDistance","iconIsOptional","iconFadeTime","textFadeTime","xOffset","yOffset","iconXOffset","iconYOffset","iconScale","screenHeight","screenWidth","poiTable","poiName","poiNameField","imageTexture","imageTextureField","imageTexturePrefix","imageTexturePostfix","style","fontName","fontStyle","fontVariant","rotation","tracking","leading","maxLines","lineWidth","canvasRotation","lineRotation","wrappingMode","hAlignment","vAlignment","backgroundColor","backgroundSize","backgroundOpacity","polygonalTechniqueDescriptor","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","lineColor","lineFadeFar","lineFadeNear","solidLineTechniqueDescriptor","clipping","secondaryRenderOrder","secondaryWidth","secondaryColor","dashSize","gapSize","lineTechniqueDescriptor","line","fillTechniqueDescriptor","fill","standardTechniqueDescriptor","vertexColors","wireframe","roughness","metalness","alphaTest","depthTest","emissive","emissiveIntensity","refractionRatio","mapProperties","normalMap","normalMapProperties","displacementMap","displacementMapProperties","roughnessMap","roughnessMapProperties","emissiveMap","emissiveMapProperties","bumpMap","bumpMapProperties","metalnessMap","metalnessMapProperties","alphaMap","alphaMapProperties","standard","extrudedPolygonTechniqueDescriptor","height","floorHeight","defaultColor","defaultHeight","constantHeight","boundaryWalls","footprint","maxSlope","enableDepthPrePass","animateExtrusionDuration","animateExtrusion","lineColorMix","textTechniqueDescriptor","minZoomLevel","maxZoomLevel","mayOverlap","reserveSpace","shaderTechniqueDescriptor","primitive","params","isExtrudedLineTechnique","isStandardExtrudedLineTechnique","shading","isFillTechnique","isExtrudedPolygonTechnique","isStandardTechnique","isTerrainTechnique","shader","dashes","textureCoordinateType","texturePropertyKey","textureProperty","isTextureBuffer","buffer","imageName","textureName","optionalParams","console","debug","info","trace","m_channel","Trace","update","prefix","Debug","Info","Log","Warn","WORKERCHANNEL_MSG_TYPE","workerMessage","interpolants","DiscreteInterpolant","LinearInterpolant","CubicInterpolant","ExponentialInterpolant","getInterpolatedMetric","nChannels","interpolant","Exponential","evaluate","_stringEncodedNumeralDynamicMask","resultBuffer","maskInterpolant","Float32Array","isExpr","Dynamic","parseStringEncodedNumeral","_stringEncodedNumeralType","getInterpolatedColor","isCubic","findIndex","abs","splice","removeDuplicatePropertyValues","Discrete","firstValue","needsMask","propValues","maskValues","baseFormat","allowedValueFormats","valueIdx","matched","valueFormat","procesStringEnocodedNumeralInterpolatedProperty","StandardGeometryKind","GeometryKindSet","subset","elem","hasIntersection","TextureCoordinateType","PoiStackMode","descriptors","attr","Uint16Array","Uint32Array","Int8Array","Int16Array","Int32Array","GeometryType","projectionName","sphereProjection","normalizedEquirectangularProjection","equirectangularProjection","attributeMap","$id","EquirectangularProjection","geoToWorldScale","worldToGeoScale","latitudeSpanInRadians","longitudeSpanInRadians","sizeX","sizeY","TransverseMercatorProjection","m_phi0","m_lambda0","_unitScale","lon","TransverseMercatorUtils","POLE_RADIUS","rsq","POLE_RADIUS_SQ","nearestQuarter","deltaLon","deltaLat","distanceToPoleSq","distanceToPole","sqrt","dir","offsetLon","clamped","clampGeoPoint","normalLon","offset","phi","lambda","B","atanh","atan2","outScale","tau","nx","ny","D","asin","sinh","pointsToCheck","E","POLE_EDGE_DEG","containsEastCut","containsCenterX","containsCenterY","alignLatitude","projected","vx","vy","vz","minX","minY","minZ","maxX","maxZ","lowerQ","upperQ","containsLowerQY","containsUpperQY","geoPoints","alignLongitude","latitudes","longitudes","altitudes","referencePoint","bad","good","POLE_EDGE","transverseMercatorProjection","minElevation","maxElevation","m_tilingScheme","m_worldBox","worldExtent","m_worldDimensions","levelDimensionX","getLevelDimensionX","levelDimensionY","getLevelDimensionY","originX","originY","unprojectBox","halfQuadTreeSubdivisionScheme","SubTiles","iterator","ZCurveIterator","RowColumnIterator","parentKey","worldCoordinatesToTileKey","cx","cy","worldSizeX","worldSizeY","wrap","lower","upper","minVal","maxVal","southWestLongitude","longitudeInRadians","southWestLatitude","northEastLongitude","northEastLatitude","minTileKey","maxTileKey","columnCount","minColumn","maxColumn","minRow","maxRow","m_subdivisionScheme","divX","getSubdivisionX","divY","getSubdivisionY","emptyTechniqueDescriptor","StyleConditionClassifier","_whenExpr","savedStyle","switchStyle","_style","enclosingExpr","children","matchVarStringComparison","_geometryType","right","saved","OptimizedSubSetKey","geometryType","keyUpdateNeeded","envLayer","envGeometryType","updateKey","cachedStyleSet","makeDecodedTechnique","attrName","attrValue","toJSON","m_techniques","m_exprPool","ExprPool","m_cachedResults","m_styleConditionClassifier","m_subStyleSetCache","m_definitionExprCache","m_tmpOptimizedSubSetKey","m_emptyEnv","m_featureDependencies","m_definitions","resolveStyleReferences","isJsonExprReference","definitionName","isActualSelectorDefinition","resolveReferences","techniqueRenderOrder","styleSetIndex","_styleSetIndex","computeDefaultRenderOrder","compileStyleSet","m_previousResult","m_previousEnv","clear","optimizedSubSetKey","m_layer","m_geometryType","m_zoomLevel","searchedStyleSet","getOptimizedStyleSet","currStyle","processStyle","techinque","_index","subSetKey","optimizedStyleSet","createPreFilteredStyleSet","compileStyle","checkStyleDynamicAttributes","when","classify","intern","deps","includes","_minZoomLevelExpr","_maxZoomLevelExpr","checkZoomLevel","Condition","getTechniqueForStyleMatch","final","_dynamicTechniques","dynamicAttributes","evaluateTechniqueProperties","getDynamicTechniqueKey","createTechnique","_staticTechnique","dynamicAttrKey","_attrName","join","_dynamicTechniqueAttributes","_dynamicFeatureAttributes","_dynamicForwardedAttributes","_staticAttributes","dynamicFeatureAttributes","dynamicTechniqueAttributes","dynamicForwardedAttributes","targetStaticAttributes","techniqueDescriptor","processAttribute","_usesFeatureState","attrScope","category","secondaryCategory","labelProperty","instantiationContext","attrExpr","instantiate","dynamicAttrs","_styleSet","defaultValue","evaluated","geojsonvtExport","geojsonvt","default","indexes","indexId","input","updateIndex","URL","fetch","href","ok","statusText","index","maxZoom","indexMaxZoom","indexMaxPoints","tolerance","extent","lineMetrics","promoteId","generateId","geojson","tile","getTile","feature","features","originalGeometry","getOriginalGeometry","VTJsonGeometryType","m_processor","m_logger","dataFilter","isArrayBufferLike","source","MapEnv","$layer","$geometryType","convertGeometryType","$level","$zoom","storageLevelOffset","tags","Point","pointGeometry","LineString","untiledPositions","coordinates","lineGeometry","positions","Polygon","polygon","rings","outline","ring","currX","currY","Unknown","Writer","BufferWriter","Op","fn","len","next","noop","State","writer","head","tail","states","writeByte","buf","pos","VarintOp","writeVarint64","writeFixed32","alloc","subarray","_push","uint32","int32","fromNumber","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","decode","string","write","fork","reset","ldelim","finish","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","readLongVarint","readFixed32_end","end","readFixed64","isBuffer","_slice","readFloatLE","readDoubleLE","read","skip","skipType","wireType","BufferReader_","zzDecode","m_processLayersDefault","m_processPointsDefault","m_processLinesDefault","m_processPolygonsDefault","m_layersToProcess","m_layersToIgnore","m_pointsToProcess","m_ignoredPoints","m_linesToProcess","m_linesToIgnore","m_polygonsToProcess","m_polygonsToIgnore","m_kindsToProcess","m_kindsToIgnore","processLayersDefault","processPointsDefault","processLinesDefault","processPolygonsDefault","minLevel","maxLevel","addItem","addItems","enabledKinds","concat","disabledKinds","layersToProcess","layersToIgnore","pointsToProcess","pointsToIgnore","linesToProcess","linesToIgnore","polygonsToProcess","polygonsToIgnore","kindsToProcess","kindsToIgnore","items","item","layerName","matchLayer","geometryTypes","geomType","classes","featureClass","matchClass","featureAttribute","geomTypes","featureClasses","description","layerItems","layerItem","wantsFeature","hasOrIntersects","itemsToProcess","itemsToIgnore","defaultResult","filters","wantsLayer","wantsPointFeature","wantsLineFeature","wantsPolygonFeature","doProcessFeature","featureClassThing","matchItems","matchAttribute","tmpVectorA","tmpVectorB","tmpVectorC","positionAttr","getAttribute","array","uvAttr","uv","edgeAttr","edge","wallAttr","wall","indexAttr","getIndex","indices","middleVertex","j","lerpVectors","toArray","newIndices","v0","shift","v1","v2","shouldSplitTriangle","v3","count","itemSize","needsUpdate","setIndex","importScripts","PriorityListGroup","elements","element","foundIndex","GroupedPriorityList","groups","getGroup","group","findGroup","remove","otherGroup","clone","fun","normalizedPriority","m_instance","LoggerManagerImpl","m_loggers","channel","document","ConsoleChannel","WorkerChannel","loggerName","m_levelSetForAll","Logger","found","config","Math2D","distSquared","ax","ay","bx","by","Box","w","xmax","ymax","contains","computeSquaredLineLength","squaredLineLength","xDiff","yDiff","distToSegmentSquared","px","py","l0x","l0y","l1x","l1y","lineLengthSuared","lerp","edge0","edge1","factor","smoothStep","smootherStep","inMin","inMax","outMin","outMax","min2","max2","isClamped","lowerBound","upperBound","easeInOutCubic","startValue","endValue","time","derivedCtor","baseCtors","baseCtor","getOwnPropertyNames","getOwnPropertyDescriptor","headerMessage","m_headerLogged","createLogMethod","pop","severity","rest","nowFunc","performance","Date","getTime","getNowFunc","cloneInternal","cached","flags","candidate","parameters","optionValue","uri","resolveReferenceUri","resolvers","resolveUri","originalUrl","resolver","f1","f2","apply","u","maxXIndex","maxYIndex","xIndex","xIndexFloor","yIndex","yIndexFloor","swIndex","seIndex","nwIndex","neIndex","swElevation","seElevation","nwElevation","neElevation","xFrac","xFracInverse","yFrac","yFracInverse","location","operatorDescriptors","evaluator","m_partialEvaluation","previousEvaluationMode","fromValue","builtin","builtins","defineOperator","defineOperators","CastOperators","ComparisonOperators","MathOperators","StringOperators","ColorOperators","TypeOperators","MiscOperators","FlowOperators","ArrayOperators","InterpolationOperators","ObjectOperators","FeatureOperators","MapOperators","operators","at","arg","alpha","parseStringEncodedColor","rgba","rgbaToHex","rgb","rgbToHex","hsl","euclideanModulo","hslToHex","compare","strict","state","isEnv","conditionalCast","all","any","none","boolean","number","interpolate","_interpolatedProperty","_mode","interpolatorType","base","stops","isConstantInterpolation","stop","createInterpolatedProperty","_exponent","_stops","prepareInterpolateCallExpr","interpolatedProperty","evaluateInterpolatedProperty","_inputIsZoom","classifyStepCallExpr","first","last","mid","MIN_SAFE_INTEGER","hasConstantValues","literal","prepareStepCallExpr","Interpolant","i1","t0","t1","sampleValues","valueSize","offset1","offset0","weight1","weight0","pixels","scaleFactor","ppi","acos","ceil","ln","ln2","log10","pi","coalesce","LookupMode","lookupMember","lookupMode","memberName","in","downcase","toLocaleLowerCase","upcase","toLocaleUpperCase","typeof","emptyEnv","_context","preserve","changed","newBranch","newCondition","instantiatedBranch","Character","Token","isSpace","codepoint","Tab","Lf","Cr","Space","isNumber","_0","_9","isLetter","A","Z","isIdentChar","isLetterOrNumber","Dollar","Dot","LBracket","RBracket","tokenSpell","token","Eof","Identifier","Comma","LParen","RParen","Exclaim","TildeEqual","CaretEqual","DollarEqual","EqualEqual","ExclaimEqual","Less","Greater","LessEqual","GreaterEqual","BarBar","AmpAmp","Lexer","m_token","m_index","m_char","m_text","yylex","codePointAt","yyinp","ch","SingleQuote","DoubleQuote","Equal","Caret","Tilde","Bar","Amp","getEqualityOp","getRelationalOp","lex","parseLogicalOr","yyexpect","hasAttribute","parseLiteral","parseUnary","parsePrimary","parseRelational","parseEquality","expressions","parseLogicalAnd","Requests","WORKER_SERVICE_MANAGER_SERVICE_ID","isUnknownServiceError","Request","isResponseMessage","WorkerTilerProtocol","isRegisterIndexRequest","RegisterIndex","isUpdateIndexRequest","UpdateIndex","isTileRequest","TileRequest","abortController","AbortController","signal","abort","WorkerDecoderProtocol","DecoderMessageName","isConfigurationMessage","Configuration","isDecodeTileRequest","DecodeTileRequest","isTileInfoRequest","TileInfoRequest","IdentityProjection","identityProjection","getLongitudeQuadrant","oneOverPI","quadrantIndex","lengthOfVector3","makeBox3","halfEquatorialRadius","minLongitude","maxLongitude","minLongitudeQuadrant","maxLongitudeQuadrant","xMin","xMax","yMin","yMax","cosMaxLongitude","sinMaxLongitude","xCenter","xExtent","yCenter","yExtent","minLatitude","maxLatutide","zMax","zMin","zCenter","zExtent","SphereProjection","Spherical","_minElevation","radius","worldpoint","cosLatitude","project","parallelRadiusSq","parallelRadius","bounds","midX","midY","cosSouth","sinSouth","cosWest","sinWest","cosNorth","sinNorth","cosEast","sinEast","cosMidX","sinMidX","cosMidY","sinMidY","rMax","rMin","_worldBox","mx","my","gx","gy","cosLongitude","sinLongitude","sinLatitude","visitTileKey","subTileKey","getSubTileKeys","hereTilingScheme","TilingScheme","mercatorTilingScheme","polarTilingScheme","transform","intersectsSlab","rayDir","axis","dot","f","finv","t2","tmpVec","tmpT","rotationMatrix","copy","extractBasis","newBox","multiplyScalar","matrix","Matrix4","makeBasis","frustumOrPlanes","planes","plane","distanceToPoint","ray","origin","direction","dx","dy","dz","distanceToPointSquared","subVectors","lengths","getComponent","dd","FeatureGroupType","FeatureGroup","startSize","featureIds","numFeatures","numPositions","techniqueIndex","textIndex","positionIndex","layerIndex","classIndex","typeIndex","LineFeatureGroup","userData","getNumBytes","segmentIds","segmentStartOffsets","segmentEndOffsets","PolygonFeatureGroup","groupNumRings","outerRingStartIndex","innerRingIsOuterContour","innerRingStartIndex","textCatalog","techniqueCatalog","numBytes","pointGroup","lineGroup","polygonGroup","layerCatalog","classCatalog","typeCatalog","finishFeatureGroup","featureGroup","featureGroupFinished","getFeatureName","abbreviation","isoCode","lang","featureGroupSize","tileInfoFinished","getFeatureText","isTextTechnique","isPoiTechnique","isLineMarkerTechnique","evaluateTechniqueAttr","attributeName","techniqueIndexMap","stringMap","layerMap","classMap","typeMap","infoTileTechniqueIndex","decodedTechnique","featureText","featureGroupType","stringIndex","addText","addLayer","addClass","addType","segmentId","startOffset","endOffset","isOuterRing","addStringValue","catalog","ExtendedTileInfoVisitor","handler","visitAllPointFeatures","visitAllLineFeatures","visitAllPolygonFeatures","numFeaturesFound","numPointFeatures","pointFeatures","visitPointFeature","numLineFeatures","lineFeatures","visitLineFeature","numPolygonFeatures","polygonsFeatures","visitPolygonFeature","featureIndex","acceptPoint","getTag","lines","positionsStart","numPointValues","acceptLine","acceptPolygon","polygons","ringStart","numRings","polygonAccessor","setup","ringIndex","pointsStart","m_booleanLiterals","m_numberLiterals","m_stringLiterals","m_objectLiterals","m_arrayLiterals","m_varExprs","m_hasAttributeExprs","m_matchExprs","m_caseExprs","m_callExprs","branchesMatching","calls","theme","visitFunc","visit","styles","styleSetName","decodeThemedTile","StyleSetEvaluator","indexBuffer","vertexOffset","contourEdges","nSegments","vFootprint0","vRoof0","vFootprint1","vRoof1","currEdgeStart","currEdgeGoal","prevEdgeStart","prevEdgeGoal","polygonContour","polygonContourEdges","isExtruded","addFootprintEdges","wallEdgeSlope","prevEdgeIdx","v0x","v0y","v1x","v1y","normalize","vFoot0","ThreeBufferUtils","getBufferElementType","fromThreeBufferAttribute","bufferAttribute","itemCount","normalized","fromThreeInterleavedBufferAttribute","fromThreeBufferGeometry","bufferGeometry","vertexAttributes","attributeNames","attributes","vertexAttribute","posAttr","Unspecified","WorkerService","m_decoder","connect","handleDecodeTileRequest","handleTileInfoRequest","handleConfigurationMessage","getProjection","decodeTile","transferBufferAttribute","attribute","byteLength","geom","interleavedVertexAttributes","edgeIndex","objInfos","attachments","attachment","addBuffersToTransferList","TilerService","tiler","GeoJsonTiler","handleRegisterIndexRequest","handleUpdateIndexRequest","handleTileRequest","registerIndex","m_factories","m_services","m_service","workerServiceDescriptor","CreateService","targetServiceId","targetServiceType","DestroyService","destroy","CommandKind","isMoveToCommand","command","MoveTo","isLineToCommand","LineTo","isClosePathCommand","ClosePath","visitOmv","vectorTile","layers","visitLayer","visitOmvLayer","endVisitLayer","com","mapbox","pb","Tile","GeomType","UNKNOWN","POINT","LINESTRING","POLYGON","FeatureAttributes","visitAttribute","GeometryCommands","geometryCount","xCoords","yCoords","commands","cmdIndex","xx","yy","visitCommand","propertyCategories","readAttributes","defaultAttributes","attrs","replaceReservedName","isLong","simplifiedValue","createFeatureEnv","greaterThan","MAX_SAFE_INTEGER","decodeFeatureId","asGeometryType","processor","m_geometryCommands","payload","proto","m_tileKey","layerExtents","currentPolygon","currentRing","wasm","WebAssembly","Instance","Module","low","high","__isLong__","INT_CACHE","UINT_CACHE","fromInt","cachedObj","UZERO","ZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","radix","radixToPower","power","mul","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","isZero","isNegative","eq","radixLong","div","rem1","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","equals","notEquals","neq","ne","lessThan","comp","lt","lessThanOrEqual","lte","le","gt","greaterThanOrEqual","gte","ge","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","LN2","approxRes","approxRem","modulo","rem_u","rem_s","mod","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","$protobuf","$Reader","$util","$root","roots","valuesById","tag","Layer","decodeDelimited","fromObject","TypeError","toObject","arrays","defaults","stringValue","floatValue","doubleValue","intValue","uintValue","sintValue","boolValue","long","Feature","end2","version","protobuf","build","rpc","Function","ctx","arguments","pending","b64","s64","encode","parts","chunk","fromCharCode","charCodeAt","_listeners","on","evt","off","listeners","emit","f32","f8b","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","readFloatBE","writeFloat_ieee754","writeUint","readFloat_ieee754","readUint","uint","mantissa","NaN","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","eval","replace","c1","c2","SIZE","MAX","slab","zero","toLong","part0","part1","part2","writeBytesBuffer","writeStringBuffer","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","callback","setTimeout","endedByRPC","tempTileOrigin","tempVertOrigin","tempVertNormal","tempFootDisp","tempRoofDisp","tmpV2","tmpV2r","tmpV3","tmpV3r","tmpV4","tempP0","tempP1","tempPreviousTangent","tmpPointA","tmpPointB","tmpPointC","tmpPointD","tmpPointE","tmpLine","Line3","MAX_CORNER_ANGLE","createIndexBufferAttribute","maxValue","MeshBuffers","normals","textureCoordinates","colors","extrusionAxis","edgeIndices","texts","pathLengths","stringCatalog","imageTextures","featureStarts","LineType","m_decodeInfo","m_meshBuffers","m_geometries","m_textGeometries","m_textPathGeometries","m_pathGeometries","m_poiGeometries","m_simpleLines","m_solidLines","m_sources","m_maxGeometryHeight","processFeatureCommon","meshBuffers","findOrCreateMeshBuffers","shouldCreateTextGeometries","wantsPoi","poiTechnique","imageTextureValue","composeTechniqueTextureName","textTechnique","webMercatorTile2TargetTile","getFeatureId","localLines","worldLines","uvs","offsets","localLineSegments","tileWidth","tileHeight","tileSizeWorld","computeTexCoords","texCoordinateType","hasUntiledLines","hasIndividualLineSegments","hasContinuousLineSegments","otherTexCoordType","getTextureCoordinateType","getComputeTexCoordsFunc","isSpecialDashesLineTechnique","polyline","untiledLine","lineDist","distanceTo","lineLength","pointCount","lastSegmentOffset","localLine","worldLine","lineUvs","segmentOffsets","pos1","pos2","findRelativePositionInLine","segmentLength","segOffsets","offs","lineOffsets","wantCircle","techniqueName","isLineTechnique","isSolidLineTechnique","lineType","Simple","Complex","applyLineTechnique","validLines","worldUnitsPerPixel","minEstimatedLabelLength","minEstimatedLabelLengthSqr","splitJaggyLines","path","pathLengthSqr","lineMarkerTechnique","aLine","isLabelRejectionLineTechnique","worldPath","fromArray","ExtrudedLine","techniqueCaps","caps","addCircle","triangulateLine","isFilled","isStandard","isPolygon","clipRing","ringContour","coords","clipPolygon","coord","Ring","isLine","applyPolygonTechnique","needIndividualLineSegments","ringLength","nextIdx","nextX","nextY","isOutline","createGeometries","processSimpleLines","processLines","decodedTechniques","textGeometries","poiGeometries","textPathGeometries","pathGeometries","copyrightHolderIds","maxGeometryHeight","maxCornerAngle","computeBoundingBoxSizeSqr","startIndex","endIndex","pathsToCheck","splitIndex","tangent","theta","firstPathLengthSqr","secondPathLengthSqr","TileSpace","texCoordType","tilePos","tileExtents","divideScalar","EquirectangularSpace","linesGeometry","featureAttributes","lineGroupGeometries","hasNormalsAndUvs","LineGroup","SolidLine","ExtrudedPolygon","extrudedPolygonTechnique","fillTechnique","featureHeight","styleSetDefaultHeight","featureMinHeight","ExtrusionFeatureDefs","MIN_BUILDING_HEIGHT","styleSetConstantHeight","getOptionValue","featureStride","isSpherical","hasEdges","colorValue","featureColor","isColorStringValid","startIndexCount","vertices","polygonBaseVertex","insideExtents","holes","hole","triangles","originalVertexCount","BufferGeometry","positionArray","uvArray","edgeArray","wallArray","BufferAttribute","setAttribute","Uint32BufferAttribute","Uint16BufferAttribute","subdivision","EdgeLengthGeometrySubdivisionModifier","SubdivisionMode","NoDiagonals","modify","SphericalGeometrySubdivisionModifier","world2tile","geomIndex","getScaleFactor","i0","i2","addEdges","addWalls","techniqueIdx","positionElements","positionCount","texCoordCount","linesArray","buffers","featureBaseVertex","featureVertexCount","hasFootprint","tmpEdgeA","tmpEdgeB","firstRingVertex","prevRingVertex","currRingVertex","maxRingVertex","nextRingVertex","prevPos","currPos","nextPos","lineOffset","closestPointToPoint","dist","tmpV","tmpNormal","tmpTangent0","tmpTangent1","tmpBitangent","LINE_VERTEX_ATTRIBUTES","NORMAL_UV_VERTEX_ATTRIBUTES","LINE_VERTEX_ATTRIBUTES_NUV","HP_LINE_VERTEX_ATTRIBUTES","HP_LINE_VERTEX_ATTRIBUTES_NUV","LineGeometry","getVertexDescriptor","highPrecision","createLineGeometry","segments","tangents","baseVertex","hasSegmentOffsets","hasTexCoords","sum","sqrLength","lineCoverage","isClosed","tmpVertices","addVertexPair","T1","T2","segment","extrusionCoord","highComp","fround","lowComp","setComponent","surfaceNormal","angle","bt","cross","computeBitangent","createSimpleLineGeometry","isSimple","m_geometry","vertexDescriptor","InterleavedBuffer","descr","InterleavedBufferAttribute","createGeometry","UNIT_Z","POINTS","BEVEL_POINTS","STEP","lineAngle","SECTORS_IN_CIRCLE","startWithCircle","endWithCircle","angleVec","prevBt","averageBt","p2","p3","useBevel","angleTo","inclineWidth","inBuffer","outBuffer","xd","yd","zd","earcut","holeIndices","dim","invSize","hasHoles","outerLen","outerNode","linkedList","prev","list","queue","steiner","getLeftmost","sort","compareX","eliminateHole","filterPoints","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","again","ear","pass","zOrder","prevZ","nextZ","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","intersects","locallyInside","isValidDiagonal","splitPolygon","hx","hy","qx","tanMin","sectorContainsSector","findHoleBridge","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","a2","Node","b2","an","bp","deviation","polygonArea","trianglesArea","flatten","dimensions","holeIndex","tmpBA","tmpQP","tmpA","tmpB","computeIntersection","clip","outputList","inputList","currentPoint","prevPoint","VERTEX_POSITION_CACHE","SubdivisionModifier","subdivisionMode","All","m_projectedBox","m_maxLengthX","m_maxLengthY","m_maxLength","shouldSplitAB","shouldSplitEdge","shouldSplitBC","shouldSplitCA","ab","bc","ca","maxDistance","aa","bb","cc","beta","gamma","DEFAULT_RATIO_MIN","DEFAULT_RATIO_MAX","m_storeExtendedTags","m_tileInfo","m_tileInfoWriter","ExtendedTileInfoWriter","tileInfoWriter","addTechnique","addFeature","addFeaturePoint","addFeaturePoints","addRoadSegments","outerRingWinding","aRing","addRingPoints","rewriteEnvironment","isWood","updateEnvironment","isHospital","isCemetery","isIndustrial","isPark","isBuiltup","isWater","isRoadLabel","isRoadPath","isRoadStreet","isRoadPrimary","isRoadSecondary","isRailway","isFerry","isAeroway","isBorder","isCountryLabel","isCountyLabel","isRegionLabel","isStateLabel","isPlaceLabel","isWaterLabel","isMarineLabel","isPoiLabel","isBuilding","extrude","min_height","isTunnel","structure","isBridge","newClass","class","getSqSegDist","createFeature","calcLineBBox","calcBBox","convertFeature","convertPoint","convertLine","convertLines","out","projectX","projectY","x0","y0","simplify","sqTolerance","maxSqDist","minPosToMid","posToMid","y2","k1","k2","minAll","maxAll","clipped","newGeometry","clipPoints","clipLine","clipLines","newGeom","trackMetrics","segLen","newSlice","intersect","intersectX","intersectY","az","exited","addPoint","shiftFeatureCoords","newFeatures","shiftCoords","newPolygon","k","newPoints","transformTile","transformed","z2","tx","ty","transformPoint","createTile","numPoints","numSimplified","simplified","addLine","tileFeature","isOuter","rewind","GeoJSONVT","dest","extend","convert","tiles","tileCoords","timeEnd","stats","total","merged","splitTile","toID","cz","tl","bl","tr","br","k3","k4","z0"],"mappings":"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","file":"decoder.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 56);\n","module.exports = THREE;","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, Value } from \"./Env\";\nimport { ExprEvaluator, ExprEvaluatorContext, OperatorDescriptor } from \"./ExprEvaluator\";\nimport { ExprInstantiator, InstantiationContext } from \"./ExprInstantiator\";\nimport { ExprParser } from \"./ExprParser\";\nimport { ExprPool } from \"./ExprPool\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { Definitions, isBoxedDefinition, isLiteralDefinition } from \"./Theme\";\n\nexport * from \"./Env\";\n\nconst exprEvaluator = new ExprEvaluator();\n\nconst exprInstantiator = new ExprInstantiator();\n\nexport interface ExprVisitor<Result, Context> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: Context): Result;\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: Context): Result;\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: Context): Result;\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: Context): Result;\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: Context): Result;\n    visitVarExpr(expr: VarExpr, context: Context): Result;\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: Context): Result;\n    visitCallExpr(expr: CallExpr, context: Context): Result;\n    visitMatchExpr(expr: MatchExpr, context: Context): Result;\n    visitCaseExpr(expr: CaseExpr, context: Context): Result;\n}\n\n/**\n * The dependencies of an [[Expr]].\n */\nexport class ExprDependencies {\n    /**\n     * The properties needed to evaluate the [[Expr]].\n     */\n    readonly properties = new Set<string>();\n\n    /**\n     * `true` if the expression depends on the feature state.\n     */\n    featureState?: boolean;\n}\n\nclass ComputeExprDependencies implements ExprVisitor<void, ExprDependencies> {\n    static instance = new ComputeExprDependencies();\n\n    /**\n     * Gets the dependencies of an [[Expr]].\n     *\n     * @param expr The [[Expr]] to process.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param dependencies The output [[Set]] of dependency names.\n     */\n    static of(expr: Expr) {\n        const dependencies = new ExprDependencies();\n        expr.accept(this.instance, dependencies);\n        return dependencies;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprDependencies): void {\n        // nothing to do\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprDependencies): void {\n        context.properties.add(expr.name);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprDependencies): void {\n        expr.args.forEach(childExpr => childExpr.accept(this, context));\n\n        switch (expr.op) {\n            case \"feature-state\":\n                context.featureState = true;\n                context.properties.add(\"$state\");\n                break;\n            case \"id\":\n                context.properties.add(\"$id\");\n                break;\n            case \"geometry-type\":\n                context.properties.add(\"$geometryType\");\n                break;\n            default:\n                break;\n        }\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: ExprDependencies): void {\n        expr.value.accept(this, context);\n        expr.branches.forEach(([_, branch]) => branch.accept(this, context));\n        expr.fallback.accept(this, context);\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: ExprDependencies): void {\n        expr.branches.forEach(([condition, branch]) => {\n            condition.accept(this, context);\n            branch.accept(this, context);\n        });\n        expr.fallback.accept(this, context);\n    }\n}\n\n/**\n * A type represeting JSON values.\n */\nexport type JsonValue = null | boolean | number | string | JsonObject | JsonArray;\n\n/**\n * A type representing JSON arrays.\n */\nexport interface JsonArray extends Array<JsonValue> {}\n\n/**\n * A type representing JSON objects.\n */\nexport interface JsonObject {\n    [name: string]: JsonValue;\n}\n\n/**\n * The JSON representation of an [[Expr]] object.\n */\nexport type JsonExpr = JsonArray;\n\nexport function isJsonExpr(v: any): v is JsonExpr {\n    return Array.isArray(v) && v.length > 0 && typeof v[0] === \"string\";\n}\n\n/**\n * Internal state needed by [[Expr.fromJSON]] to resolve `\"ref\"` expressions.\n * @hidden\n */\ninterface ReferenceResolverState {\n    definitions: Definitions;\n    lockedNames: Set<string>;\n    cache: Map<string, Expr>;\n}\n\n/**\n * The evaluation scope of an [[Expr]].\n */\nexport enum ExprScope {\n    /**\n     * The scope of an [[Expr]] used as value of an attribute.\n     */\n    Value,\n\n    /**\n     * The scope of an [[Expr]] used in a [[Technique]] `when` condition.\n     */\n    Condition,\n\n    /**\n     * The scope of an [[Expr]] used as dynamic property attribute value.\n     */\n    Dynamic\n}\n\n/**\n * Abstract class defining a shape of a [[Theme]]'s expression\n */\nexport abstract class Expr {\n    /**\n     * Tests of given value is an [[Expr]].\n     *\n     * @param value The object to test.\n     */\n    static isExpr(value: any): value is Expr {\n        return value instanceof Expr;\n    }\n\n    /**\n     * Creates an expression from the given `code`.\n     *\n     * @param code The code to parse.\n     * @returns The parsed [[Expr]].\n     * @deprecated\n     */\n    static parse(code: string): Expr | never {\n        const parser = new ExprParser(code);\n        const expr = parser.parse();\n        return expr;\n    }\n\n    /**\n     * Parse expression in JSON form.\n     *\n     * If `definitions` are defined, then references (`['ref', name]`) are resolved.\n     *\n     * Pass `definitionExprCache` to reuse `Expr` instances created from definitions across\n     * many `fromJSON` calls.\n     *\n     * @param node expression in JSON format to parse\n     * @param definitions optional set of definitions needed definition resolved by `ref` operator\n     * @param definitionExprCache optional cache of `Expr` instances derived from `definitions`\n     */\n    static fromJSON(\n        node: JsonValue,\n        definitions?: Definitions,\n        definitionExprCache?: Map<string, Expr>\n    ) {\n        const referenceResolverState: ReferenceResolverState | undefined =\n            definitions !== undefined\n                ? {\n                      definitions,\n                      lockedNames: new Set(),\n                      cache: definitionExprCache || new Map<string, Expr>()\n                  }\n                : undefined;\n\n        return parseNode(node, referenceResolverState);\n    }\n\n    private m_dependencies?: ExprDependencies;\n    private m_isDynamic?: boolean;\n\n    /**\n     * Evaluate an expression returning a [[Value]] object.\n     *\n     * @param env The [[Env]] used to lookup symbols.\n     * @param scope The evaluation scope. Defaults to [[ExprScope.Value]].\n     * @param cache A cache of previously computed results.\n     */\n    evaluate(\n        env: Env,\n        scope: ExprScope = ExprScope.Value,\n        cache?: Map<Expr, Value>\n    ): Value | never {\n        return this.accept(\n            exprEvaluator,\n            new ExprEvaluatorContext(exprEvaluator, env, scope, cache)\n        );\n    }\n\n    /**\n     * Instantiates this [[Expr]] by resolving references to the `get` and\n     * `has` operator using the given instantiation context.\n     *\n     * @param context The [[InstantationContext]] used to resolve names.\n     */\n    instantiate(context: InstantiationContext): Expr {\n        return this.accept(exprInstantiator, context);\n    }\n\n    /**\n     * Gets the dependencies of this [[Expr]].\n     */\n    dependencies(): ExprDependencies {\n        if (!this.m_dependencies) {\n            this.m_dependencies = ComputeExprDependencies.of(this);\n        }\n        return this.m_dependencies;\n    }\n\n    /**\n     * Create a unique object that is structurally equivalent to this [[Expr]].\n     *\n     * @param pool The [[ExprPool]] used to create a unique\n     * equivalent object of this [[Expr]].\n     */\n    intern(pool: ExprPool): Expr {\n        return pool.add(this);\n    }\n\n    toJSON(): JsonValue {\n        return new ExprSerializer().serialize(this);\n    }\n\n    /**\n     * Returns `true` if a dynamic execution context is required to evaluate this [[Expr]].\n     */\n    isDynamic(): boolean {\n        if (this.m_isDynamic === undefined) {\n            this.m_isDynamic = this.exprIsDynamic();\n        }\n        return this.m_isDynamic;\n    }\n\n    abstract accept<Result, Context>(\n        visitor: ExprVisitor<Result, Context>,\n        context: Context\n    ): Result;\n\n    /**\n     * Update the dynamic state of this [[Expr]].\n     *\n     * [[exprIsDynamic]] must never be called directly.\n     *\n     * @hidden\n     */\n    protected abstract exprIsDynamic(): boolean;\n}\n\n/**\n * @hidden\n */\nexport type RelationalOp = \"<\" | \">\" | \"<=\" | \">=\";\n\n/**\n * @hidden\n */\nexport type EqualityOp = \"~=\" | \"^=\" | \"$=\" | \"==\" | \"!=\";\n\n/**\n * @hidden\n */\nexport type BinaryOp = RelationalOp | EqualityOp;\n\n/**\n * Var expression.\n * @hidden\n */\nexport class VarExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitVarExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\nexport abstract class LiteralExpr extends Expr {\n    /**\n     * Create a [[LiteralExpr]] from the given value.\n     *\n     * @param value A constant value.\n     */\n    static fromValue(value: Value): Expr {\n        switch (typeof value) {\n            case \"boolean\":\n                return new BooleanLiteralExpr(value);\n            case \"number\":\n                return new NumberLiteralExpr(value);\n            case \"string\":\n                return new StringLiteralExpr(value);\n            case \"object\":\n                return value === null ? NullLiteralExpr.instance : new ObjectLiteralExpr(value);\n            default:\n                throw new Error(`failed to create a literal from '${value}'`);\n        } // switch\n    }\n\n    abstract get value(): Value;\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Null literal expression.\n * @hidden\n */\nexport class NullLiteralExpr extends LiteralExpr {\n    static instance = new NullLiteralExpr();\n    /** @override */\n    readonly value: Value = null;\n\n    protected constructor() {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNullLiteralExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * Boolean literal expression.\n * @hidden\n */\nexport class BooleanLiteralExpr extends LiteralExpr {\n    constructor(readonly value: boolean) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitBooleanLiteralExpr(this, context);\n    }\n}\n\n/**\n * Number literal expression.\n * @hidden\n */\nexport class NumberLiteralExpr extends LiteralExpr {\n    constructor(readonly value: number) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitNumberLiteralExpr(this, context);\n    }\n}\n\n/**\n * String literal expression.\n * @hidden\n */\nexport class StringLiteralExpr extends LiteralExpr {\n    constructor(readonly value: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitStringLiteralExpr(this, context);\n    }\n}\n\n/**\n * Object literal expression.\n * @hidden\n */\nexport class ObjectLiteralExpr extends LiteralExpr {\n    constructor(readonly value: object) {\n        super();\n    }\n\n    get isArrayLiteral() {\n        return Array.isArray(this.value);\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitObjectLiteralExpr(this, context);\n    }\n}\n\n/**\n * A has expression with an attribute, for example `has(ref)`.\n * @hidden\n */\nexport class HasAttributeExpr extends Expr {\n    constructor(readonly name: string) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitHasAttributeExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return false;\n    }\n}\n\n/**\n * @hidden\n */\nexport class CallExpr extends Expr {\n    descriptor?: OperatorDescriptor;\n\n    constructor(readonly op: string, readonly args: Expr[]) {\n        super();\n    }\n\n    /**\n     * Returns the child nodes of this [[Expr]].\n     * @deprecated\n     */\n    get children() {\n        return this.args;\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCallExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        const descriptor = this.descriptor || ExprEvaluator.getOperator(this.op);\n\n        if (descriptor && descriptor.isDynamicOperator && descriptor.isDynamicOperator(this)) {\n            return true;\n        }\n\n        return this.args.some(e => e.isDynamic());\n    }\n}\n\n/**\n * @hidden\n */\nexport type MatchLabel = number | string | number[] | string[];\n\n/**\n * @hidden\n */\nexport class MatchExpr extends Expr {\n    /**\n     * Tests if the given JSON node is a valid label for the `\"match\"` operator.\n     *\n     * @param node A JSON value.\n     */\n    static isValidMatchLabel(node: JsonValue): node is MatchLabel {\n        switch (typeof node) {\n            case \"number\":\n            case \"string\":\n                return true;\n            case \"object\":\n                if (!Array.isArray(node) || node.length === 0) {\n                    return false;\n                }\n                const elementTy = typeof node[0];\n                if (elementTy === \"number\" || elementTy === \"string\") {\n                    return node.every(t => typeof t === elementTy);\n                }\n                return false;\n            default:\n                return false;\n        } // switch\n    }\n\n    constructor(\n        readonly value: Expr,\n        readonly branches: Array<[MatchLabel, Expr]>,\n        readonly fallback: Expr\n    ) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitMatchExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.value.isDynamic() ||\n            this.branches.some(([_, branch]) => branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nexport class CaseExpr extends Expr {\n    constructor(readonly branches: Array<[Expr, Expr]>, readonly fallback: Expr) {\n        super();\n    }\n\n    /** @override */\n    accept<Result, Context>(visitor: ExprVisitor<Result, Context>, context: Context): Result {\n        return visitor.visitCaseExpr(this, context);\n    }\n\n    /** @override */\n    protected exprIsDynamic() {\n        return (\n            this.branches.some(([cond, branch]) => cond.isDynamic() || branch.isDynamic()) ||\n            this.fallback.isDynamic()\n        );\n    }\n}\n\n/**\n * @hidden\n */\nclass ExprSerializer implements ExprVisitor<JsonValue, void> {\n    serialize(expr: Expr): JsonValue {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): JsonValue {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): JsonValue {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): JsonValue {\n        return [\"literal\", expr.value as JsonObject];\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): JsonValue {\n        return [\"get\", expr.name];\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): JsonValue {\n        return [\"has\", expr.name];\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): JsonValue {\n        return [expr.op, ...expr.args.map(childExpr => this.serialize(childExpr))];\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [label, body] of expr.branches) {\n            branches.push(label, this.serialize(body));\n        }\n        return [\"match\", this.serialize(expr.value), ...branches, this.serialize(expr.fallback)];\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): JsonValue {\n        const branches: JsonValue[] = [];\n        for (const [condition, body] of expr.branches) {\n            branches.push(this.serialize(condition), this.serialize(body));\n        }\n        return [\"case\", ...branches, this.serialize(expr.fallback)];\n    }\n}\n\nfunction parseNode(\n    node: JsonValue,\n    referenceResolverState: ReferenceResolverState | undefined\n): Expr {\n    if (Array.isArray(node)) {\n        return parseCall(node, referenceResolverState);\n    } else if (node === null) {\n        return NullLiteralExpr.instance;\n    } else if (typeof node === \"boolean\") {\n        return new BooleanLiteralExpr(node);\n    } else if (typeof node === \"number\") {\n        return new NumberLiteralExpr(node);\n    } else if (typeof node === \"string\") {\n        return new StringLiteralExpr(node);\n    }\n    throw new Error(`failed to create expression from: ${JSON.stringify(node)}`);\n}\n\nfunction parseCall(node: JsonArray, referenceResolverState?: ReferenceResolverState): Expr {\n    const op = node[0];\n\n    if (typeof op !== \"string\") {\n        throw new Error(\"expected a builtin function name\");\n    }\n\n    switch (op) {\n        case \"!has\":\n        case \"!in\":\n            return new CallExpr(\"!\", [parseCall([op.slice(1), ...node.slice(1)])]);\n\n        case \"ref\":\n            return resolveReference(node, referenceResolverState);\n\n        case \"get\":\n            return parseGetExpr(node, referenceResolverState);\n\n        case \"has\":\n            return parseHasExpr(node, referenceResolverState);\n\n        case \"literal\":\n            return parseLiteralExpr(node);\n\n        case \"match\":\n            return parseMatchExpr(node, referenceResolverState);\n\n        case \"case\":\n            return parseCaseExpr(node, referenceResolverState);\n\n        default:\n            return makeCallExpr(op, node, referenceResolverState);\n    } // switch\n}\n\nfunction parseGetExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"get\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new VarExpr(name);\n}\n\nfunction parseHasExpr(node: JsonArray, referenceResolverState: ReferenceResolverState | undefined) {\n    if (node[2] !== undefined) {\n        return makeCallExpr(\"has\", node, referenceResolverState);\n    }\n    const name = node[1];\n    if (typeof name !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    return new HasAttributeExpr(name);\n}\n\nfunction parseLiteralExpr(node: JsonArray) {\n    const obj = node[1];\n    if (obj === null || typeof obj !== \"object\") {\n        throw new Error(\"expected an object or array literal\");\n    }\n    return new ObjectLiteralExpr(obj);\n}\n\nfunction parseMatchExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 4) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (!(node.length % 2)) {\n        throw new Error(\"fallback is missing in 'match' expression\");\n    }\n    const value = parseNode(node[1], referenceResolverState);\n    const conditions: Array<[MatchLabel, Expr]> = [];\n    for (let i = 2; i < node.length - 1; i += 2) {\n        const label = node[i];\n        if (!MatchExpr.isValidMatchLabel(label)) {\n            throw new Error(`'${JSON.stringify(label)}' is not a valid label for 'match'`);\n        }\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        conditions.push([label, expr]);\n    }\n    const fallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new MatchExpr(value, conditions, fallback);\n}\n\nfunction parseCaseExpr(\n    node: JsonArray,\n    referenceResolverState: ReferenceResolverState | undefined\n) {\n    if (node.length < 3) {\n        throw new Error(\"not enough arguments\");\n    }\n    if (node.length % 2) {\n        throw new Error(\"fallback is missing in 'case' expression\");\n    }\n    const branches: Array<[Expr, Expr]> = [];\n    for (let i = 1; i < node.length - 1; i += 2) {\n        const condition = parseNode(node[i], referenceResolverState);\n        const expr = parseNode(node[i + 1], referenceResolverState);\n        branches.push([condition, expr]);\n    }\n    const caseFallback = parseNode(node[node.length - 1], referenceResolverState);\n    return new CaseExpr(branches, caseFallback);\n}\n\nfunction makeCallExpr(\n    op: string,\n    node: any[],\n    referenceResolverState?: ReferenceResolverState\n): Expr {\n    return new CallExpr(\n        op,\n        node.slice(1).map(childExpr => parseNode(childExpr, referenceResolverState))\n    );\n}\n\nfunction resolveReference(node: JsonArray, referenceResolverState?: ReferenceResolverState) {\n    if (typeof node[1] !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n    if (referenceResolverState === undefined) {\n        throw new Error(`ref used with no definitions`);\n    }\n    const name = node[1] as string;\n\n    if (referenceResolverState.lockedNames.has(name)) {\n        throw new Error(`circular referene to '${name}'`);\n    }\n\n    if (!(name in referenceResolverState.definitions)) {\n        throw new Error(`definition '${name}' not found`);\n    }\n\n    const cachedEntry = referenceResolverState.cache.get(name);\n    if (cachedEntry !== undefined) {\n        return cachedEntry;\n    }\n    let definitionEntry = referenceResolverState.definitions[name] as any;\n    let result: Expr;\n    if (isLiteralDefinition(definitionEntry)) {\n        return Expr.fromJSON(definitionEntry);\n    } else if (isBoxedDefinition(definitionEntry)) {\n        if (isInterpolatedPropertyDefinition(definitionEntry.value)) {\n            // found a reference to an interpolation using\n            // the deprecated object-like syntax.\n            return Expr.fromJSON(interpolatedPropertyDefinitionToJsonExpr(definitionEntry.value));\n        } else if (isJsonExpr(definitionEntry.value)) {\n            definitionEntry = definitionEntry.value;\n        } else {\n            return Expr.fromJSON(definitionEntry.value);\n        }\n    }\n\n    if (isJsonExpr(definitionEntry)) {\n        referenceResolverState.lockedNames.add(name);\n        try {\n            result = parseNode(definitionEntry, referenceResolverState);\n        } finally {\n            referenceResolverState.lockedNames.delete(name);\n        }\n    } else {\n        throw new Error(`unsupported definition ${name}`);\n    }\n    referenceResolverState.cache.set(name, result);\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./index-common\";\nexport * from \"./lib/UrlPlatformUtils.web\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/coordinates/GeoBox\";\nexport * from \"./lib/coordinates/GeoCoordinatesLike\";\nexport * from \"./lib/coordinates/GeoCoordinates\";\nexport * from \"./lib/coordinates/GeoPointLike\";\nexport * from \"./lib/coordinates/LatLngLike\";\nexport * from \"./lib/projection/EarthConstants\";\nexport * from \"./lib/projection/EquirectangularProjection\";\nexport * from \"./lib/projection/IdentityProjection\";\nexport * from \"./lib/projection/Projection\";\nexport * from \"./lib/projection/MercatorProjection\";\nexport * from \"./lib/projection/TransverseMercatorProjection\";\nexport * from \"./lib/projection/SphereProjection\";\nexport * from \"./lib/tiling/FlatTileBoundingBoxGenerator\";\nexport * from \"./lib/tiling/HalfQuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTreeSubdivisionScheme\";\nexport * from \"./lib/tiling/QuadTree\";\nexport * from \"./lib/tiling/SubTiles\";\nexport * from \"./lib/tiling/SubdivisionScheme\";\nexport * from \"./lib/tiling/TileKey\";\nexport * from \"./lib/tiling/TileKeyUtils\";\nexport * from \"./lib/tiling/TileTreeTraverse\";\nexport * from \"./lib/tiling/TilingScheme\";\nexport * from \"./lib/tiling/HereTilingScheme\";\nexport * from \"./lib/tiling/WebMercatorTilingScheme\";\nexport * from \"./lib/tiling/MercatorTilingScheme\";\nexport * from \"./lib/tiling/PolarTilingScheme\";\nexport * from \"./lib/math/Vector3Like\";\nexport * from \"./lib/math/Box3Like\";\nexport * from \"./lib/math/OrientedBox3Like\";\nexport * from \"./lib/math/MathUtils\";\nexport * from \"./lib/math/TransformLike\";\nexport * from \"./lib/math/OrientedBox3\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ColorUtils\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/Techniques\";\nexport * from \"./lib/TechniqueParams\";\nexport * from \"./lib/Theme\";\nexport * from \"./lib/PostEffects\";\nexport * from \"./lib/InterpolatedProperty\";\nexport * from \"./lib/InterpolatedPropertyDefs\";\nexport * from \"./lib/WorkerServiceProtocol\";\nexport * from \"./lib/WorkerTilerProtocol\";\nexport * from \"./lib/WorkerDecoderProtocol\";\nexport * from \"./lib/ITileDecoder\";\nexport * from \"./lib/ITiler\";\nexport * from \"./lib/DecodedTile\";\nexport * from \"./lib/TileInfo\";\nexport * from \"./lib/GeoJsonDataType\";\nexport * from \"./lib/ThemeVisitor\";\nexport * from \"./lib/StringEncodedNumeral\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinatesLike, isGeoCoordinatesLike } from \"./GeoCoordinatesLike\";\nimport { GeoPointLike, isGeoPointLike } from \"./GeoPointLike\";\nimport { isLatLngLike, LatLngLike } from \"./LatLngLike\";\n\nimport * as THREE from \"three\";\n\n/**\n * Represents an object in different geo coordinate formats\n */\nexport type GeoCoordLike = GeoPointLike | GeoCoordinatesLike | LatLngLike;\n\n/**\n * `GeoCoordinates` is used to represent geo positions.\n */\nexport class GeoCoordinates implements GeoCoordinatesLike {\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    static fromDegrees(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in radians.\n     * @param longitude Longitude in radians.\n     * @param altitude Altitude in meters.\n     */\n    static fromRadians(latitude: number, longitude: number, altitude?: number): GeoCoordinates {\n        return new GeoCoordinates(\n            THREE.MathUtils.radToDeg(latitude),\n            THREE.MathUtils.radToDeg(longitude),\n            altitude\n        );\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[LatLngLike]] literal.\n     * ```typescript\n     * const center = { lat: 53.3, lng: 13.4 };\n     * mapView.geoCenter = GeoCoordinates.fromLatLng(center);\n     * ```\n     * @param latLng A [[LatLngLike]] object literal.\n     */\n    static fromLatLng(latLng: LatLngLike) {\n        return new GeoCoordinates(latLng.lat, latLng.lng);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from a [[GeoPointLike]] tuple.\n     *\n     * Example:\n     * ```typescript\n     * mapView.geoCenter = GeoCoordinates.fromGeoPoint([longitude, latitude]);\n     *\n     * let geoCoords: number[] = ...;\n     *\n     * if (isGeoPointLike(geoCoords)) {\n     *     const p = GeoCoordinates.fromGeoPoint(geoCoords);\n     * }\n     * ```\n     * @param geoPoint An [[Array]] of at least two elements following the order\n     * longitude, latitude, altitude.\n     */\n    static fromGeoPoint(geoPoint: GeoPointLike): GeoCoordinates {\n        return new GeoCoordinates(geoPoint[1], geoPoint[0], geoPoint[2]);\n    }\n\n    /**\n     * Creates a [[GeoCoordinates]] from different types of geo coordinate objects.\n     *\n     * Example:\n     * ```typescript\n     * const fromGeoPointLike = GeoCoordinates.fromObject([longitude, latitude]);\n     * const fromGeoCoordinateLike = GeoCoordinates.fromObject({ longitude, latitude });\n     * const fromGeoCoordinate = GeoCoordinates.fromObject(new GeoCoordinates(latitude, longitude));\n     * const fromLatLngLike = GeoCoordinates.fromObject({ lat: latitude , lng: longitude });\n     * ```\n     *\n     * @param geoPoint Either [[GeoPointLike]], [[GeoCoordinatesLike]]\n     * or [[LatLngLike]] object literal.\n     */\n    static fromObject(geoPoint: GeoCoordLike): GeoCoordinates {\n        if (isGeoPointLike(geoPoint)) {\n            return GeoCoordinates.fromGeoPoint(geoPoint);\n        } else if (isGeoCoordinatesLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(\n                geoPoint.latitude,\n                geoPoint.longitude,\n                geoPoint.altitude\n            );\n        } else if (isLatLngLike(geoPoint)) {\n            return GeoCoordinates.fromDegrees(geoPoint.lat, geoPoint.lng);\n        }\n\n        throw new Error(\"Invalid input coordinate format.\");\n    }\n\n    /**\n     * Creates a `GeoCoordinates` from the given latitude, longitude, and optional altitude.\n     *\n     * @param latitude Latitude in degrees.\n     * @param longitude Longitude in degrees.\n     * @param altitude Altitude in meters.\n     */\n    constructor(public latitude: number, public longitude: number, public altitude?: number) {}\n\n    /**\n     * Returns the latitude in radians.\n     */\n    get latitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitude);\n    }\n\n    /**\n     * Returns the longitude in radians.\n     */\n    get longitudeInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitude);\n    }\n\n    /**\n     * Returns the latitude in degrees.\n     * @deprecated Use the [[latitude]] property instead.\n     */\n    get latitudeInDegrees(): number {\n        return this.latitude;\n    } // compat api\n\n    /**\n     * Returns the longitude in degrees.\n     * @deprecated Use the [[longitude]] property instead.\n     */\n    get longitudeInDegrees(): number {\n        return this.longitude;\n    } // compat api\n\n    /**\n     * The latitude in the degrees.\n     */\n    get lat() {\n        return this.latitude;\n    }\n\n    /**\n     * The longitude in the degrees.\n     */\n    get lng() {\n        return this.longitude;\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is valid; returns `false` otherwise.\n     */\n    isValid(): boolean {\n        return !isNaN(this.latitude) && !isNaN(this.longitude);\n    }\n\n    /**\n     * Returns the normalized `GeoCoordinates`.\n     */\n    normalized(): GeoCoordinates {\n        let { latitude, longitude } = this;\n\n        if (isNaN(latitude) || isNaN(longitude)) {\n            return this;\n        }\n\n        if (latitude > 90) {\n            let wrapped = (latitude + 90) % 360;\n            if (wrapped >= 180) {\n                longitude += 180;\n                wrapped = 360 - wrapped;\n            }\n\n            latitude = wrapped - 90;\n        }\n\n        if (latitude < -90) {\n            let wrapped = (latitude - 90) % 360;\n            if (wrapped <= -180) {\n                longitude += 180;\n                wrapped = -360 - wrapped;\n            }\n\n            latitude = wrapped + 90;\n        }\n\n        if (longitude < -180 || longitude > 180) {\n            const sign = Math.sign(longitude);\n            longitude = (((longitude % 360) + 180 * sign) % 360) - 180 * sign;\n        }\n\n        if (latitude === this.latitude && longitude === this.longitude) {\n            return this;\n        }\n\n        return new GeoCoordinates(latitude, longitude, this.altitude);\n    }\n\n    /**\n     * Returns `true` if this `GeoCoordinates` is equal to the other.\n     *\n     * @param other GeoCoordinatesLike to compare to.\n     */\n    equals(other: GeoCoordinatesLike): boolean {\n        return (\n            this.latitude === other.latitude &&\n            this.longitude === other.longitude &&\n            this.altitude === other.altitude\n        );\n    }\n\n    /**\n     * Copy values from the other.\n     *\n     * @param other GeoCoordinatesLike to copy all values from.\n     */\n    copy(other: GeoCoordinatesLike): GeoCoordinates {\n        this.latitude = other.latitude;\n        this.longitude = other.longitude;\n        this.altitude = other.altitude;\n        return this;\n    }\n\n    /**\n     * Clones this `GeoCoordinates`.\n     */\n    clone(): GeoCoordinates {\n        return new GeoCoordinates(this.latitude, this.longitude, this.altitude);\n    }\n\n    /**\n     * Returns this [[GeoCoordinates]] as [[LatLngLike]] literal.\n     */\n    toLatLng(): LatLngLike {\n        return { lat: this.latitude, lng: this.longitude };\n    }\n\n    /**\n     * Converts this [[GeoCoordinates]] to a [[GeoPointLike]].\n     */\n    toGeoPoint(): GeoPointLike {\n        return this.altitude !== undefined\n            ? [this.longitude, this.latitude, this.altitude]\n            : [this.longitude, this.latitude];\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like } from \"./Box3Like\";\nimport { Vector3Like } from \"./Vector3Like\";\n\nimport * as THREE from \"three\";\n\nexport namespace MathUtils {\n    /**\n     * Creates a new empty bounding box.\n     * @deprecated\n     */\n    export function newEmptyBox3(): Box3Like {\n        return {\n            min: { x: Infinity, y: Infinity, z: Infinity },\n            max: { x: -Infinity, y: -Infinity, z: -Infinity }\n        };\n    }\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     */\n    export function newVector3(x: number, y: number, z: number): Vector3Like;\n\n    /**\n     * Creates a new [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The resulting [Vector3Like] instance.\n     */\n    export function newVector3<Vector extends Vector3Like>(\n        x: number,\n        y: number,\n        z: number,\n        v: Vector\n    ): Vector;\n\n    /**\n     * Set the components of the given [Vector3Like] instance.\n     *\n     * @param x The x component.\n     * @param y The y component.\n     * @param z The z component.\n     * @param v The [Vector3Like]\n     */\n    export function newVector3(x: number, y: number, z: number, v?: Vector3Like): Vector3Like {\n        if (v === undefined) {\n            return { x, y, z };\n        }\n        v.x = x;\n        v.y = y;\n        v.z = z;\n        return v;\n    }\n\n    /**\n     * Converts an angle measured in degrees to an equivalent value in radians.\n     *\n     * @param degrees Value in degrees.\n     * @returns Value in radians.\n     * @deprecated use THREE.MathUtils.degToRad instead\n     */\n    export const degToRad = THREE.MathUtils.degToRad;\n\n    /**\n     * Converts an angle measured in radians to an equivalent value in degrees.\n     *\n     * @param degrees Value in radians.\n     * @returns Value in degrees.\n     * @deprecated\n     */\n    export const radToDeg = THREE.MathUtils.radToDeg;\n\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     * @returns Clamped value.\n     * @deprecated\n     */\n    export const clamp = THREE.MathUtils.clamp;\n\n    /**\n     * Normalize angle in degrees to range `[0, 360)`.\n     *\n     * @param a Angle in degrees.\n     * @returns Angle in degrees in range `[0, 360)`.\n     */\n    export function normalizeAngleDeg(a: number): number {\n        a = a % 360;\n        if (a < 0) {\n            a = a + 360;\n        }\n        return a;\n    }\n\n    /**\n     * Return the minimal delta between angles `a` and `b` given in degrees.\n     *\n     * Equivalent to `a - b` in coordinate space with exception vector direction can be reversed\n     * that if `abs(a-b) > 180` because trip is shorter in 'other' direction.\n     *\n     * Useful when interpolating between `b` and `a` in angle space.\n     *\n     * @param a Start angle in degrees.\n     * @param b End angle in degrees.\n     * @returns Angle that that satisfies condition `a - b - d = 0` in angle space.\n     */\n    export function angleDistanceDeg(a: number, b: number): number {\n        a = normalizeAngleDeg(a);\n        b = normalizeAngleDeg(b);\n\n        const d = a - b;\n        if (d > 180) {\n            return d - 360;\n        } else if (d <= -180) {\n            return d + 360;\n        } else {\n            return d;\n        }\n    }\n\n    /**\n     * Interpolate linearly between two angles given in degrees.\n     *\n     * @param p0 Angle from in degrees\n     * @param p1 Angle to in degrees\n     * @param t Interpolation factor (alpha), in range `0-1`.\n     */\n    export function interpolateAnglesDeg(p0: number, p1: number, t: number): number {\n        // hand crafted version,\n        // see stack for maybe better versions:\n        //    https://stackoverflow.com/questions/2708476/rotation-interpolation\n\n        const d = angleDistanceDeg(p1, p0);\n        const r = (p0 + d * t) % 360;\n        return r;\n    }\n}\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * An interface representing bounding box in world coordinates.\n */\nexport interface Box3Like {\n    /**\n     * The minimum position in world coordinates of this bounding box.\n     */\n    readonly min: Vector3Like;\n\n    /**\n     * The maximum position in world coordinates of this bounding box.\n     */\n    readonly max: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the [[Box3Like]] interface.\n *\n * @param object A valid object.\n */\nexport function isBox3Like(object: {}): object is Box3Like {\n    const box3 = object as Partial<Box3Like>;\n    return box3.min !== undefined && box3.max !== undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TransformLike } from \"./TransformLike\";\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[OrientedBox3Like]] is used to represent oriented bounding box.\n */\nexport interface OrientedBox3Like extends TransformLike {\n    /**\n     * The extents of this bounding box.\n     */\n    readonly extents: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[OrientedBox3Like]].\n *\n * @param object The object.\n */\nexport function isOrientedBox3Like(object: {}): object is OrientedBox3Like {\n    const obb = object as Partial<OrientedBox3Like>;\n    return (\n        obb.position !== undefined &&\n        obb.xAxis !== undefined &&\n        obb.yAxis !== undefined &&\n        obb.zAxis !== undefined &&\n        obb.extents !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\n\n/**\n * The type of projection.\n */\nexport enum ProjectionType {\n    /**\n     * A type of [Projection] with zero curvature.\n     */\n    Planar,\n\n    /**\n     * A spherical [Projection].\n     */\n    Spherical\n}\n\n/**\n * `Projection` is used to convert positions from geo coordinates to world coordinates and vice\n * versa.\n */\nexport abstract class Projection {\n    /**\n     * The type of this [Projection].\n     */\n    abstract get type(): ProjectionType;\n\n    /**\n     * Constructs the Projection\n     *\n     * @param unitScale How to transform the projected coordinates to world units.\n     */\n    constructor(readonly unitScale: number) {\n        //Prevent empty constructor error.\n    }\n\n    /**\n     * Returns the world extents in world coordinates.\n     *\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     * @param result The optional object that will be used to create the resulting bounding box.\n     */\n    abstract worldExtent<Bounds extends Box3Like>(\n        minElevation: number,\n        maxElevation: number,\n        result?: Bounds\n    ): Bounds;\n\n    /**\n     * Projects a point from geo coordinates (latitude, longitude, altitude) to world coordinates\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const worldPos = new THREE.Vector3();\n     * projection.projectPoint(geoPos, worldPos);\n     * ```\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param result The optional object used to store the resulting world position, result must\n     * implement [[Vector3Like]].\n     */\n    abstract projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates;\n\n    /**\n     * Gets the [[TransformLike]] of the local tangent space at the given geo coordinates.\n     *\n     * @param geoPoint The geo coordinates.\n     * @param result The [[TransformLike]].\n     */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, 1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, 1, result.zAxis);\n        return result;\n    }\n\n    /**\n     * Returns the geo coordinates (latitude, longitude, altitude) from the given world position\n     * (x,y,z).\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectPoint(worldPoint: Vector3Like): GeoCoordinates;\n\n    /**\n     * Returns the altitude at the given world position (x,y,z) in meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract unprojectAltitude(worldPoint: Vector3Like): number;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox);\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     */\n    abstract projectBox(geoBox: GeoBox): Box3Like;\n\n    /**\n     * Projects bounds in geo coordinates to a bounding box in world coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const bounds = projection.projectBox(geoBox, new THREE.Box3());\n     * console.log(bounds.min, bounds.max);\n     * ```\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param result The resulting [[OrientedBox3Like]].\n     */\n    abstract projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: WorldBoundingBox\n    ): WorldBoundingBox;\n\n    /**\n     * Converts a bounding box in world coordinates to a bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = projection.unprojectPoint(worldPos);\n     * console.log(geoPos.latitude, geoPos.longitude, geoPos.altitude);\n     * ```\n     *\n     * @param worldBox The bounding box in world coordinates.\n     */\n    abstract unprojectBox(worldBox: Box3Like): GeoBox;\n\n    /**\n     * Returns the scaling factor that must be used to convert the units used by `worldPoint` to\n     * meters.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract getScaleFactor(worldPoint: Vector3Like): number;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract surfaceNormal(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Returns the surface normal at the given world position.\n     *\n     * @param worldPoint The position in world coordinates.\n     * @returns The resulting normal vector.\n     */\n    abstract surfaceNormal<Normal extends Vector3Like>(\n        worldPoint: Vector3Like,\n        result: Normal\n    ): Normal;\n\n    /**\n     * Returns the signed distance between the given coordinates and\n     * the closest point on the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract groundDistance(worldPoint: Vector3Like): number;\n\n    /**\n     * Scales the given world coordinates to the surface.\n     *\n     * @param worldPoint The position in world coordinates.\n     */\n    abstract scalePointToSurface(worldPoint: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid world position for the given source projection.\n     * @returns The world position reprojected using this [[Projection]].\n     */\n    reprojectPoint(sourceProjection: Projection, worldPos: Vector3Like): Vector3Like;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     */\n    reprojectPoint<WorldCoordinates extends Vector3Like>(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result: WorldCoordinates\n    ): typeof result;\n\n    /**\n     * Reproject a world position from the given source [[Projection]].\n     * Implementations should be aware of worldPos and result may be one object\n     *\n     * @param sourceProjection The source projection.\n     * @param worldPos A valid position in the world space defined by the source projection.\n     * @param result The resulting position reprojected using this [[Projection]].\n     * @hidden\n     */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === this) {\n            if (result === undefined) {\n                return { x: worldPos.x, y: worldPos.y, z: worldPos.z };\n            }\n            result.x = worldPos.x;\n            result.y = worldPos.y;\n            result.z = worldPos.z;\n            return result;\n        }\n        return this.projectPoint(sourceProjection.unprojectPoint(worldPos), result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\n\n/**\n * Interpolation mode used when computing a [[InterpolatedProperty]] value for a given zoom level.\n */\nexport enum InterpolationMode {\n    Discrete,\n    Linear,\n    Cubic,\n    Exponential\n}\n\n/**\n * Interpolated property could have its value (some initial value should be provided) changed\n * according to an interpolation type.\n *\n * Here is an example of an interpolated property from a map style:\n * \"lineWidth\": {\n *  \"interpolation\": \"Linear\",\n *  \"zoomLevels\": [13, 14, 15],\n *  \"values\": [ 1.5, 1.2, 0.9]\n * }\n */\nexport interface InterpolatedPropertyDefinition<T> {\n    interpolation?: \"Discrete\" | \"Linear\" | \"Cubic\" | \"Exponential\";\n    zoomLevels: number[];\n    values: T[];\n    exponent?: number;\n}\n\n/**\n * Checks if a property is interpolated.\n * @param p property to be checked\n */\nexport function isInterpolatedPropertyDefinition<T>(\n    p: any\n): p is InterpolatedPropertyDefinition<T> {\n    if (\n        p &&\n        p.interpolationMode === undefined &&\n        Array.isArray(p.values) &&\n        p.values.length > 0 &&\n        p.values[0] !== undefined &&\n        Array.isArray(p.zoomLevels) &&\n        p.zoomLevels.length > 0 &&\n        p.zoomLevels[0] !== undefined &&\n        p.values.length === p.zoomLevels.length\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Converts an [[InterpolatedPropertyDefinition]] to a [[JsonExpr]].\n *\n * @param property A valid [[InterpolatedPropertyDefinition]]\n */\nexport function interpolatedPropertyDefinitionToJsonExpr(\n    property: InterpolatedPropertyDefinition<any>\n): JsonExpr {\n    if (property.interpolation === undefined || property.interpolation === \"Discrete\") {\n        const step: JsonExpr = [\"step\", [\"zoom\"], property.values[0]];\n        for (let i = 1; i < property.zoomLevels.length; ++i) {\n            step.push(property.zoomLevels[i], property.values[i]);\n        }\n        return step;\n    }\n    const interpolation: JsonExpr = [\"interpolate\"];\n    switch (property.interpolation) {\n        case \"Linear\":\n            interpolation.push([\"linear\"]);\n            break;\n        case \"Cubic\":\n            interpolation.push([\"cubic\"]);\n            break;\n        case \"Exponential\":\n            interpolation.push([\n                \"exponential\",\n                property.exponent !== undefined ? property.exponent : 2\n            ]);\n            break;\n        default:\n            throw new Error(`interpolation mode '${property.interpolation}' is not supported`);\n    } //switch\n    interpolation.push([\"zoom\"]);\n    for (let i = 0; i < property.zoomLevels.length; ++i) {\n        interpolation.push(property.zoomLevels[i], property.values[i]);\n    }\n    return interpolation;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoCoordinates } from \"./GeoCoordinates\";\n\nimport * as THREE from \"three\";\n\n/**\n * `GeoBox` is used to represent a bounding box in geo coordinates.\n */\nexport class GeoBox {\n    /**\n     * Returns a `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    static fromCoordinates(southWest: GeoCoordinates, northEast: GeoCoordinates): GeoBox {\n        return new GeoBox(southWest, northEast);\n    }\n\n    /**\n     * Constructs a new `GeoBox` with the given geo coordinates.\n     *\n     * @param southWest The south west position in geo coordinates.\n     * @param northEast The north east position in geo coordinates.\n     */\n    constructor(readonly southWest: GeoCoordinates, readonly northEast: GeoCoordinates) {}\n\n    /**\n     * Returns the minimum altitude or `undefined`.\n     */\n    get minAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.min(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the maximum altitude or `undefined`.\n     */\n    get maxAltitude(): number | undefined {\n        if (this.southWest.altitude === undefined || this.northEast.altitude === undefined) {\n            return undefined;\n        }\n        return Math.max(this.southWest.altitude, this.northEast.altitude);\n    }\n\n    /**\n     * Returns the south latitude in degrees of this `GeoBox`.\n     */\n    get south(): number {\n        return this.southWest.latitude;\n    }\n\n    /**\n     * Returns the north altitude in degrees of this `GeoBox`.\n     */\n    get north(): number {\n        return this.northEast.latitude;\n    }\n\n    /**\n     * Returns the west longitude in degrees of this `GeoBox`.\n     */\n    get west(): number {\n        return this.southWest.longitude;\n    }\n\n    /**\n     * Returns the east longitude in degrees of this `GeoBox`.\n     */\n    get east(): number {\n        return this.northEast.longitude;\n    }\n\n    /**\n     * Returns the center of this `GeoBox`.\n     */\n    get center(): GeoCoordinates {\n        const latitude = (this.south + this.north) * 0.5;\n        const { west, east } = this;\n        const { minAltitude, altitudeSpan } = this;\n\n        let altitude: number | undefined;\n\n        if (minAltitude !== undefined && altitudeSpan !== undefined) {\n            altitude = minAltitude + altitudeSpan * 0.5;\n        }\n\n        if (west < east) {\n            return new GeoCoordinates(latitude, (west + east) * 0.5, altitude);\n        }\n\n        let longitude = (360 + east + west) * 0.5;\n\n        if (longitude > 360) {\n            longitude -= 360;\n        }\n\n        return new GeoCoordinates(latitude, longitude, altitude);\n    }\n\n    /**\n     * Returns the latitude span in radians.\n     */\n    get latitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.latitudeSpan);\n    }\n\n    /**\n     * Returns the longitude span in radians.\n     */\n    get longitudeSpanInRadians(): number {\n        return THREE.MathUtils.degToRad(this.longitudeSpan);\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     */\n    get latitudeSpan(): number {\n        return this.north - this.south;\n    }\n\n    get altitudeSpan(): number | undefined {\n        if (this.maxAltitude === undefined || this.minAltitude === undefined) {\n            return undefined;\n        }\n        return this.maxAltitude - this.minAltitude;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     */\n    get longitudeSpan(): number {\n        let width = this.northEast.longitude - this.southWest.longitude;\n\n        if (width < 0) {\n            width += 360;\n        }\n\n        return width;\n    }\n\n    /**\n     * Returns the latitude span in degrees.\n     * @deprecated Use [[latitudeSpan]] instead.\n     */\n    get latitudeSpanInDegrees(): number {\n        return this.latitudeSpan;\n    }\n\n    /**\n     * Returns the longitude span in degrees.\n     * @deprecated Use [[longitudeSpan]] instead.\n     */\n    get longitudeSpanInDegrees(): number {\n        return this.longitudeSpan;\n    }\n\n    /**\n     * Returns `true` if the given geo coordinates are contained in this `GeoBox`.\n     *\n     * @param point The geo coordinates.\n     */\n    contains(point: GeoCoordinates): boolean {\n        if (\n            point.altitude === undefined ||\n            this.minAltitude === undefined ||\n            this.maxAltitude === undefined\n        ) {\n            return this.containsHelper(point);\n        }\n\n        const isFlat = this.minAltitude === this.maxAltitude;\n        const isSameAltitude = this.minAltitude === point.altitude;\n        const isWithinAltitudeRange =\n            this.minAltitude <= point.altitude && this.maxAltitude > point.altitude;\n\n        // If box is flat, we should check the altitude and containment,\n        // otherwise we should check also altitude difference where we consider\n        // point to be inside if alt is from [m_minAltitude, m_maxAltitude) range!\n        if (isFlat ? isSameAltitude : isWithinAltitudeRange) {\n            return this.containsHelper(point);\n        }\n\n        return false;\n    }\n\n    /**\n     * Clones this `GeoBox` instance.\n     */\n    clone(): GeoBox {\n        return new GeoBox(this.southWest, this.northEast);\n    }\n\n    /**\n     * Update the bounding box by considering a given point.\n     *\n     * @param point The point that may expand the bounding box.\n     */\n    growToContain(point: GeoCoordinates) {\n        this.southWest.latitude = Math.min(this.southWest.latitude, point.latitude);\n        this.southWest.longitude = Math.min(this.southWest.longitude, point.longitude);\n        this.southWest.altitude =\n            this.southWest.altitude !== undefined && point.altitude !== undefined\n                ? Math.min(this.southWest.altitude, point.altitude)\n                : this.southWest.altitude !== undefined\n                ? this.southWest.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n\n        this.northEast.latitude = Math.max(this.northEast.latitude, point.latitude);\n        this.northEast.longitude = Math.max(this.northEast.longitude, point.longitude);\n        this.northEast.altitude =\n            this.northEast.altitude !== undefined && point.altitude !== undefined\n                ? Math.max(this.northEast.altitude, point.altitude)\n                : this.northEast.altitude !== undefined\n                ? this.northEast.altitude\n                : point.altitude !== undefined\n                ? point.altitude\n                : undefined;\n    }\n\n    private containsHelper(point: GeoCoordinates): boolean {\n        if (point.latitude < this.southWest.latitude || point.latitude >= this.northEast.latitude) {\n            return false;\n        }\n\n        const { west, east } = this;\n\n        if (east > west) {\n            return point.longitude >= west && point.longitude < east;\n        }\n\n        return point.longitude > east || point.longitude <= west;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport class EarthConstants {\n    /** The equatorial circumference in meters. */\n    static EQUATORIAL_CIRCUMFERENCE: number = 40075016.6855784861531768177614;\n\n    /** The equatorial radius in meters. */\n    static EQUATORIAL_RADIUS: number = 6378137.0;\n\n    /** The lowest point on earth (Dead Sea) in meters. */\n    static MIN_ELEVATION: number = -433.0;\n\n    /** The highest point on earth (Mt. Everest) in meters. */\n    static MAX_ELEVATION: number = 8848.0;\n\n    /** The highest artificial structure (building) on earth, Burj Khalifa tower in Dubai */\n    static MAX_BUILDING_HEIGHT: number = 828;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { FlatTileBoundingBoxGenerator } from \"./FlatTileBoundingBoxGenerator\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TileKeyUtils } from \"./TileKeyUtils\";\nimport { TileTreeTraverse } from \"./TileTreeTraverse\";\n\n/**\n * The `TilingScheme` represents how the data is tiled.\n */\nexport class TilingScheme {\n    readonly boundingBoxGenerator: FlatTileBoundingBoxGenerator;\n    readonly tileTreeTraverse: TileTreeTraverse;\n\n    /**\n     * Constructs a new `TilingScheme` with the given subdivision scheme and projection.\n     *\n     * @param subdivisionScheme The subdivision scheme used by this `TilingScheme`.\n     * @param projection The projection used by this `TilingScheme`.\n     */\n    constructor(readonly subdivisionScheme: SubdivisionScheme, readonly projection: Projection) {\n        this.boundingBoxGenerator = new FlatTileBoundingBoxGenerator(this);\n        this.tileTreeTraverse = new TileTreeTraverse(subdivisionScheme);\n    }\n\n    /**\n     * Returns the sub tile keys of the given tile.\n     *\n     * @param tileKey The [[TileKey]].\n     * @returns The list of the sub tile keys.\n     */\n    getSubTileKeys(tileKey: TileKey): Iterable<TileKey> {\n        return this.tileTreeTraverse.subTiles(tileKey);\n    }\n\n    /**\n     * Gets the [[TileKey]] from the given geo position and level.\n     *\n     * @param geoPoint The position in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKey(geoPoint: GeoCoordinatesLike, level: number): TileKey | null {\n        return TileKeyUtils.geoCoordinatesToTileKey(this, geoPoint, level);\n    }\n\n    /**\n     * Gets the list of [[TileKey]]s contained in the given [[GeoBox]].\n     *\n     * @param geoBox The bounding box in geo coordinates.\n     * @param level The level of the resulting `TileKey`.\n     */\n    getTileKeys(geoBox: GeoBox, level: number): TileKey[] {\n        return TileKeyUtils.geoRectangleToTileKeys(this, geoBox, level);\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * @param tileKey The `TileKey`.\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        return this.boundingBoxGenerator.getGeoBox(tileKey);\n    }\n\n    /**\n     * Returns the bounding box in world coordinates.\n     *\n     * @param tileKey The `TileKey`.\n     * @param result The optional object that will contain the resulting bounding box.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        return this.boundingBoxGenerator.getWorldBox(tileKey, result);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { Value } from \"@here/harp-datasource-protocol/index-decoder\";\n\n/**\n * Feature Modifier ids to choose which OmvFeatureModifer should be used in OmvDecoder.\n */\nexport enum FeatureModifierId {\n    /**\n     * Identifier to use the OmvTomTomFeatureModifier in the OmvDecoder.\n     */\n    tomTom\n}\n\n/**\n * Definition of a filter.\n */\nexport interface OmvFilterString {\n    /**  String value */\n    value: string;\n    /** Match condition */\n    match: OmvFilterString.StringMatch;\n}\n\n/**\n * Adding the match condition type and the matching function to the namespace of `OmvFilterString`.\n */\nexport namespace OmvFilterString {\n    /**\n     * Match condition.\n     */\n    export enum StringMatch {\n        /** Matches any. */\n        Any,\n        /** Exact match. */\n        Match,\n        /** Matches if a test string starts with a filter string. */\n        StartsWith,\n        /** Matches if a test string contains a filter string. */\n        Contains,\n        /** Matches if a test string ends with a filter string. */\n        EndsWith\n    }\n\n    /**\n     * Check for a string against a filter.\n     *\n     * @param str The string to check against a filter.\n     * @param filterString The filter containing the match condition.\n     * @returns `true` if the match condition is satisfied.\n     */\n    export function matchString(str: string, filterString: OmvFilterString): boolean {\n        switch (filterString.match) {\n            case OmvFilterString.StringMatch.Any:\n                return true;\n            case OmvFilterString.StringMatch.Match:\n                return str === filterString.value;\n            case OmvFilterString.StringMatch.StartsWith:\n                return filterString.value.startsWith(str);\n            case OmvFilterString.StringMatch.EndsWith:\n                return filterString.value.endsWith(str);\n            default:\n                return str.indexOf(filterString.value) >= 0;\n        }\n    }\n}\n\n/**\n * Definition of a filter for a feature attribute\n */\nexport interface OmvFilterFeatureAttribute {\n    key: string;\n    value: Value;\n}\n\nexport enum OmvGeometryType {\n    UNKNOWN = 0,\n    POINT = 1,\n    LINESTRING = 2,\n    POLYGON = 3\n}\n\n/**\n * Internal type of a layer filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvLayerFilterDescription {\n    name: OmvFilterString;\n    minLevel: number;\n    maxLevel: number;\n}\n\n/**\n * Internal type of a single filter description, Should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFilterDescription {\n    layerName: OmvFilterString;\n    geometryTypes?: OmvGeometryType[];\n    classes?: OmvFilterString[];\n    minLevel: number;\n    maxLevel: number;\n    featureAttribute?: OmvFilterFeatureAttribute;\n}\n\n/**\n * Internal type of a complete [[OmvFeatureFilter]] description, should not be publicly available.\n *\n * @hidden\n */\nexport interface OmvFeatureFilterDescription {\n    processLayersDefault: boolean;\n    processPointsDefault: boolean;\n    processLinesDefault: boolean;\n    processPolygonsDefault: boolean;\n\n    layersToProcess: OmvLayerFilterDescription[];\n    layersToIgnore: OmvLayerFilterDescription[];\n    pointsToProcess: OmvFilterDescription[];\n    pointsToIgnore: OmvFilterDescription[];\n    linesToProcess: OmvFilterDescription[];\n    linesToIgnore: OmvFilterDescription[];\n    polygonsToProcess: OmvFilterDescription[];\n    polygonsToIgnore: OmvFilterDescription[];\n\n    // enabledKinds and disabledKinds\n    kindsToProcess: string[];\n    kindsToIgnore: string[];\n}\n\n/**\n * Internal interface for options passed from the [[OmvDataSource]] to the decoder.\n *\n * @hidden\n */\nexport interface OmvDecoderOptions {\n    /**\n     * If true, features that have no technique in the theme will be printed to the console (can be\n     * excessive!).\n     */\n    showMissingTechniques?: boolean;\n\n    /**\n     * Gather feature attributes from [[OmvData]]. Defaults to false.\n     */\n    gatherFeatureAttributes?: boolean;\n    createTileInfo?: boolean;\n    gatherRoadSegments?: boolean;\n\n    /**\n     * Optional storage level offset for [[Tile]]s. Default is -2.\n     */\n    storageLevelOffset?: number;\n\n    /**\n     * If not set to `false` very short text labels will be skipped during decoding based on a\n     * heuristic.\n     */\n    skipShortLabels?: boolean;\n\n    /**\n     * A description for the feature filter which can be safely passed down to the web workers.\n     * It has to be generated with the help of the [[OmvFeatureFilterDescriptionBuilder]] (to\n     * guarantee the correctness).\n     */\n    filterDescription?: OmvFeatureFilterDescription | null;\n\n    /**\n     * Identifier used to choose OmvFeatureModifier, if undefined [[OmvGenericFeatureModifier]] is\n     * used.\n     */\n    featureModifierId?: FeatureModifierId;\n\n    enableElevationOverlay?: boolean;\n}\n\n/**\n * Default OMV tile decoder service type.\n *\n * Used for requesting decoder services using [[WorkerServiceManager]].\n */\nexport const OMV_TILE_DECODER_SERVICE_TYPE = \"omv-tile-decoder\";\n\n/**\n * Default OMV tiler service type.\n *\n * Used for requesting tiler services using [[WorkerServiceManager]].\n */\nexport const OMV_TILER_SERVICE_TYPE = \"omv-tiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\nconst SHIFT_TRANSPARENCY: number = 24;\nconst SHIFT_RED: number = 16;\nconst SHIFT_GREEN: number = 8;\nconst SHIFT_BLUE: number = 0;\n\n// tslint:disable: no-bitwise\n//    Allow bitwise operations for colors decoding\n\n// tslint:disable-next-line: no-bitwise\nconst HEX_FULL_CHANNEL: number = 0xff;\nconst HEX_RGB_MASK: number = 0xffffff;\nconst HEX_TRGB_MASK: number = 0xffffffff;\n\nconst tmpColor = new THREE.Color();\n\n/**\n * Utilities to convert RGBA colors encoded in custom number (hex) format to THREE.Color objects.\n *\n * The functions provided allows for conversion from and to our custom number based color format,\n * which contains transparency, red, green and blue color channels in a way that each channel\n * occupies 8 bits of resulting number (color format 0xTTRRGGBB).\n * In order to preserve compatibility with THREE.Color class and its hexadecimal color\n * representation, we do not store __alpha__ channel in encoded color's number, but replace it\n * with __transparency__ channel, which is simply opposite to alpha:\n * ```transparency = 0xFF - alpha```\n * Such channel value is stored on the oldest bits (octet) in the integral color (numeric) value,\n * so it is fully compatible with THREE.Color numerical representation (@see [[THREE.Color.getHex]],\n * [[THREE.Color.setHex]]).\n * See also [[getHexFromRgba]] and [[getRgbaFromHex]] for more info about conversion.\n */\nexport namespace ColorUtils {\n    /**\n     * Encodes RGBA channels in custom number coded format (represented in hex as 0xTTRRGGBB).\n     *\n     * We do not use direct alpha channel mapping to hex in order to preserve compatibility\n     * with THREE.js color format (0xRRGGBB). This is done by encoding transparency\n     * (255 - alpha) instead of alpha on the oldest bits, shifted by [[SHIFT_TRANSPARENCY]].\n     * This way simple 0xRRGGBB color is equal to 0x00RRGGBB without transparency and\n     * color defining transparency (alpha < 255) is always recognizable by the oldest\n     * bit set:\n     * ```typescript\n     * (color >> SHIFT_TRANSPARENCY) !== 0.\n     * ```\n     * @note All input components are floating points in <0, 1> range (inclusively).\n     * @note Although method encodes transparency channel in single number value, it is still\n     * compatible with THREE.js number based color coding (0xRRGGBB), so you may pass this value to\n     * [[THREE.Color]] c-tor, but keep in mind that transparency will be silently ignored.\n     */\n    export function getHexFromRgba(r: number, g: number, b: number, a: number): number {\n        assert(a >= 0 && a <= 1);\n        const t = HEX_FULL_CHANNEL - Math.floor(a * HEX_FULL_CHANNEL);\n        return (\n            (t << SHIFT_TRANSPARENCY) ^\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encodes RGB all color channels in single number with format 0xRRGGBB.\n     *\n     * All input channels should be in <0, 1> range (inclusively).\n     * See also [[getHexFromRgba]] for more information about [[THREE.Color]] compatibility.\n     *\n     * @note This method is fully compatible with THREE.js color encoding, so\n     * you may pass this value directly to THREE.Color c-tor.\n     */\n    export function getHexFromRgb(r: number, g: number, b: number): number {\n        assert(r >= 0 && r <= 1);\n        assert(g >= 0 && g <= 1);\n        assert(b >= 0 && b <= 1);\n        return (\n            ((r * HEX_FULL_CHANNEL) << SHIFT_RED) ^\n            ((g * HEX_FULL_CHANNEL) << SHIFT_GREEN) ^\n            ((b * HEX_FULL_CHANNEL) << SHIFT_BLUE)\n        );\n    }\n\n    /**\n     * Encode and convert HSL value to number coded color format (0xRRGGBB).\n     *\n     * @see getHexFromRgb.\n     * @param h Hue component value between 0 and 1.\n     * @param s Saturation value between 0 and 1.\n     * @param l Lightness channel between 0 and 1.\n     */\n    export function getHexFromHsl(h: number, s: number, l: number): number {\n        assert(h >= 0 && h <= 1);\n        assert(s >= 0 && s <= 1);\n        assert(l >= 0 && l <= 1);\n        return tmpColor.setHSL(h, s, l).getHex();\n    }\n\n    /**\n     * Retrieve RGBA channels separately from number encoded custom color format.\n     *\n     * Provides an easy way for channels extraction (r, g, b, a) from custom number coded color\n     * format.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns r, g, b, a channels in simple object, where each channel value is saved as floating\n     * point from 0 to 1 inclusively.\n     */\n    export function getRgbaFromHex(hex: number): { r: number; g: number; b: number; a: number } {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return {\n            r: ((hex >> SHIFT_RED) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            g: ((hex >> SHIFT_GREEN) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            b: ((hex >> SHIFT_BLUE) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL,\n            a:\n                (HEX_FULL_CHANNEL - ((hex >> SHIFT_TRANSPARENCY) & HEX_FULL_CHANNEL)) /\n                HEX_FULL_CHANNEL\n        };\n    }\n\n    /**\n     * Determines if number encoded color contains alpha (opacity) defined and different then 255.\n     *\n     * @param hex The number encoded color (0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns True if color has transparency defined.\n     */\n    export function hasAlphaInHex(hex: number): boolean {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex >> SHIFT_TRANSPARENCY !== 0;\n    }\n\n    /**\n     * Retrieves alpha color channel from hex encoded color value.\n     *\n     * @see getHexFromRgba.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns The floating point alpha component in <0, 1> range.\n     */\n    export function getAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return (\n            ((HEX_FULL_CHANNEL - (hex >> SHIFT_TRANSPARENCY)) & HEX_FULL_CHANNEL) / HEX_FULL_CHANNEL\n        );\n    }\n\n    /**\n     * Remove transparency info from the number coded color, makes it compatible with external libs.\n     *\n     * @see getAlphaFromHex.\n     * @param hex The number encoded color value (representable as 0xRRGGBB or 0xTTRRGGBB in hex).\n     * @returns number coded color value representable as 0xRRGGBB in hex.\n     */\n    export function removeAlphaFromHex(hex: number): number {\n        assert((hex & ~HEX_TRGB_MASK) === 0, \"Wrong hex format\");\n        return hex & HEX_RGB_MASK;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @hidden\n */\nexport type Value = null | boolean | number | string | object;\n\n/**\n * @hidden\n */\nexport interface ValueMap {\n    [name: string]: Value;\n}\n\n/**\n * @hidden\n */\nexport class Env {\n    /**\n     * Returns `true` if the given object is an instance of [[Env]].\n     *\n     * @param object The object to test.\n     */\n    static isEnv(object: any): object is Env {\n        return object instanceof Env;\n    }\n\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     */\n    lookup(_name: string): Value | undefined {\n        return undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment. (Here: empty object).\n     */\n    unmap(): ValueMap {\n        return {};\n    }\n}\n\n/**\n * Adds access to map specific environment properties.\n */\nexport class MapEnv extends Env {\n    constructor(readonly entries: ValueMap, private readonly parent?: Env) {\n        super();\n    }\n    /**\n     * Returns property in [[Env]] by name.\n     *\n     * @param name Name of property.\n     * @override\n     */\n    lookup(name: string): Value | undefined {\n        if (this.entries.hasOwnProperty(name)) {\n            const value = this.entries[name];\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return this.parent ? this.parent.lookup(name) : undefined;\n    }\n    /**\n     * Return an object containing all properties of this environment, takes care of the parent\n     * object.\n     * @override\n     */\n    unmap(): ValueMap {\n        const obj: any = this.parent ? this.parent.unmap() : {};\n        for (const key in this.entries) {\n            if (this.entries.hasOwnProperty(key)) {\n                obj[key] = this.entries[key];\n            }\n        }\n        return obj;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass MercatorProjection extends Projection {\n    protected static clamp(val: number, min: number, max: number): number {\n        return Math.min(Math.max(min, val), max);\n    }\n\n    protected static latitudeClamp(latitude: number): number {\n        return MercatorProjection.clamp(\n            latitude,\n            -MercatorConstants.MAXIMUM_LATITUDE,\n            MercatorConstants.MAXIMUM_LATITUDE\n        );\n    }\n\n    private static latitudeProject(latitude: number): number {\n        return Math.log(Math.tan(Math.PI * 0.25 + latitude * 0.5)) / Math.PI;\n    }\n\n    private static latitudeClampProject(latitude: number): number {\n        return MercatorProjection.latitudeProject(MercatorProjection.latitudeClamp(latitude));\n    }\n\n    private static unprojectLatitude(y: number): number {\n        return 2.0 * Math.atan(Math.exp(Math.PI * y)) - Math.PI * 0.5;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh(2 * Math.PI * (worldPoint.y / this.unitScale - 0.5));\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        result.y =\n            (MercatorProjection.latitudeClampProject(geoPoint.latitudeInRadians) * 0.5 + 0.5) *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            MercatorProjection.unprojectLatitude((worldPoint.y / this.unitScale - 0.5) * 2.0),\n            (worldPoint.x / this.unitScale) * 2 * Math.PI - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(geoBox.center);\n        const worldNorth =\n            (MercatorProjection.latitudeClampProject(geoBox.northEast.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldSouth =\n            (MercatorProjection.latitudeClampProject(geoBox.southWest.latitudeInRadians) * 0.5 +\n                0.5) *\n            this.unitScale;\n        const worldYCenter = (worldNorth + worldSouth) * 0.5;\n\n        worldCenter.y = worldYCenter;\n\n        const latitudeSpan = worldNorth - worldSouth;\n        const longitudeSpan = (geoBox.longitudeSpan / 360) * this.unitScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - longitudeSpan * 0.5;\n            result.min.y = worldCenter.y - latitudeSpan * 0.5;\n            result.max.x = worldCenter.x + longitudeSpan * 0.5;\n            result.max.y = worldCenter.y + latitudeSpan * 0.5;\n            const altitudeSpan = geoBox.altitudeSpan;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = longitudeSpan * 0.5;\n            result.extents.y = latitudeSpan * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (geoBox.altitudeSpan || 0) * 0.5);\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        // this implementation of [[reprojectPoint]] supports both\n        // [[WebMercatorProjection]] and [[MercatorProjection]]. The only\n        // difference betweeen these two variants of WEB Mercator\n        // is in the orientation of the Y axis, so we just flip Y coordinates\n        // when reprojecting between them.\n        if (\n            sourceProjection !== this &&\n            (sourceProjection === webMercatorProjection || sourceProjection === mercatorProjection)\n        ) {\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = worldPos.x;\n            result.y = this.unitScale - worldPos.y;\n            result.z = worldPos.z;\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n}\n\nclass WebMercatorProjection extends MercatorProjection {\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPointLike: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        let geoPoint: GeoCoordinates;\n\n        if (geoPointLike instanceof GeoCoordinates) {\n            geoPoint = geoPointLike;\n        } else {\n            geoPoint = new GeoCoordinates(\n                geoPointLike.latitude,\n                geoPointLike.longitude,\n                geoPointLike.altitude\n            );\n        }\n\n        /*\n         * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n         * might be a concrete class which is not available at runtime.\n         * Consider the following example:\n         *\n         *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n         *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n         *\n         * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n         */\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        result.x = ((geoPoint.longitude + 180) / 360) * this.unitScale;\n        const sy = Math.sin(MercatorProjection.latitudeClamp(geoPoint.latitudeInRadians));\n        result.y = (0.5 - Math.log((1 + sy) / (1 - sy)) / (4 * Math.PI)) * this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const x = worldPoint.x / this.unitScale - 0.5;\n        const y = 0.5 - worldPoint.y / this.unitScale;\n\n        const longitude = 360 * x;\n        const latitude = 90 - (360 * Math.atan(Math.exp(-y * 2 * Math.PI))) / Math.PI;\n\n        return new GeoCoordinates(latitude, longitude, worldPoint.z);\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const r = super.projectBox(geoBox, result);\n        if (isBox3Like(r)) {\n            // Invert the y axis for web mercator, this means that max => min & min => max\n            const maxY = r.max.y;\n            r.max.y = this.unitScale - r.min.y;\n            r.min.y = this.unitScale - maxY;\n        } else if (isOrientedBox3Like(r)) {\n            MathUtils.newVector3(1, 0, 0, r.xAxis);\n            MathUtils.newVector3(0, -1, 0, r.yAxis);\n            MathUtils.newVector3(0, 0, -1, r.zAxis);\n            r.position.y = this.unitScale - r.position.y;\n        }\n        return r;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        const geoBox = new GeoBox(\n            new GeoCoordinates(maxGeo.latitude, minGeo.longitude, minGeo.altitude),\n            new GeoCoordinates(minGeo.latitude, maxGeo.longitude, maxGeo.altitude)\n        );\n        return geoBox;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        this.projectPoint(geoPoint, result.position);\n        MathUtils.newVector3(1, 0, 0, result.xAxis);\n        MathUtils.newVector3(0, -1, 0, result.yAxis);\n        MathUtils.newVector3(0, 0, -1, result.zAxis);\n        return result;\n    }\n}\n\nexport class MercatorConstants {\n    // Math.atan(Math.sinh(Math.PI))\n    static readonly MAXIMUM_LATITUDE: number = 1.4844222297453323;\n}\n\n/**\n * Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const mercatorProjection: Projection = new MercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n\n/**\n * Web Mercator [[Projection]] used to convert geo coordinates to world coordinates and vice versa.\n */\nexport const webMercatorProjection: Projection = new WebMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass QuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(): number {\n        return 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n}\n\n/**\n * [[SubdivisionScheme]] representing a quadtree.\n */\nexport const quadTreeSubdivisionScheme: SubdivisionScheme = new QuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/** @hidden */\nconst powerOfTwo = [\n    0x1,\n    0x2,\n    0x4,\n    0x8,\n    0x10,\n    0x20,\n    0x40,\n    0x80,\n    0x100,\n    0x200,\n    0x400,\n    0x800,\n    0x1000,\n    0x2000,\n    0x4000,\n    0x8000,\n    0x10000,\n    0x20000,\n    0x40000,\n    0x80000,\n    0x100000,\n    0x200000,\n    0x400000,\n    0x800000,\n    0x1000000,\n    0x2000000,\n    0x4000000,\n    0x8000000,\n    0x10000000,\n    0x20000000,\n    0x40000000,\n    0x80000000,\n    0x100000000,\n    0x200000000,\n    0x400000000,\n    0x800000000,\n    0x1000000000,\n    0x2000000000,\n    0x4000000000,\n    0x8000000000,\n    0x10000000000,\n    0x20000000000,\n    0x40000000000,\n    0x80000000000,\n    0x100000000000,\n    0x200000000000,\n    0x400000000000,\n    0x800000000000,\n    0x1000000000000,\n    0x2000000000000,\n    0x4000000000000,\n    0x8000000000000,\n    0x10000000000000 // Math.pow(2, 52), highest bit that can be set correctly.\n];\n\n/**\n * The `TileKey` instances are used to address a tile in a quadtree.\n *\n * A tile key is defined by a row, a column, and a level. The tree has a root at level 0, with one\n * single tile. On every level, each tile is divided into four children (therefore the name\n * quadtree).\n *\n * Within each [[level]], any particular tile is addressed with [[row]] and [[column]]. The number\n * of rows and columns in each level is 2 to the power of the level. This means: On level 0, only\n * one tile exists, [[columnsAtLevel]]() and [[rowsAtLevel]]() are both 1. On level 1, 4 tiles\n * exist, in 2 rows and 2 columns. On level 2 we have 16 tiles, in 4 rows and 4 columns. And so on.\n *\n * A tile key is usually created using [[fromRowColumnLevel]]() method.\n *\n * `TileKey` instances are immutable, all members return new instances of `TileKey` and do not\n * modify the original object.\n *\n * Utility functions like [[parent]](), [[changedLevelBy]](), and [[changedLevelTo]]() allow for\n * easy vertical navigation of the tree. The number of available rows and columns in the tile's\n * level is given with [[rowCount]]() and [[columnCount]]().\n *\n * Tile keys can be created from and converted into various alternative formats:\n *\n *  - [[toQuadKey]]() / [[fromQuadKey]]() - string representation 4-based\n *  - [[toHereTile]]() / [[fromHereTile]]() - string representation 10-based\n *  - [[mortonCode]]() / [[fromMortonCode]]() - number representation\n *\n * Note - as JavaScript's number type can hold 53 bits in its mantissa, only levels up to 26 can be\n * represented in the number representation returned by [[mortonCode]]().\n */\nexport class TileKey {\n    /**\n     * Creates a tile key.\n     *\n     * @param row The requested row. Must be less than 2 to the power of level.\n     * @param column The requested column. Must be less than 2 to the power of level.\n     * @param level The requested level.\n     */\n    static fromRowColumnLevel(row: number, column: number, level: number): TileKey {\n        return new TileKey(row, column, level);\n    }\n\n    /**\n     * Creates a tile key from a quad string.\n     *\n     * The quad string can be created with [[toQuadKey]].\n     *\n     * @param quadkey The quadkey to convert.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromQuadKey(quadkey: string): TileKey {\n        const level = quadkey.length;\n        let row = 0;\n        let column = 0;\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < quadkey.length; ++i) {\n            const mask = 1 << i;\n            const d = parseInt(quadkey.charAt(level - i - 1), 10);\n            if (d & 0x1) {\n                column |= mask;\n            }\n            if (d & 0x2) {\n                row |= mask;\n            }\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n    /**\n     * Creates a tile key from a numeric Morton code representation.\n     *\n     * You can convert a tile key into a numeric Morton code with [[mortonCode]].\n     *\n     * @param quadKey64 The Morton code to be converted.\n     * @returns A new instance of [[TileKey]].\n     */\n    static fromMortonCode(quadKey64: number): TileKey {\n        let level = 0;\n        let row = 0;\n        let column = 0;\n        let quadKey = quadKey64;\n        // tslint:disable:no-bitwise\n        while (quadKey > 1) {\n            const mask: number = 1 << level;\n\n            if (quadKey & 0x1) {\n                column |= mask;\n            }\n            if (quadKey & 0x2) {\n                row |= mask;\n            }\n\n            level++;\n            quadKey = (quadKey - (quadKey & 0x3)) / 4;\n        }\n        // tslint:enable:no-bitwise\n        const result = TileKey.fromRowColumnLevel(row, column, level);\n        result.m_mortonCode = quadKey64;\n        return result;\n    }\n\n    /**\n     * Creates a tile key from a heretile code string.\n     *\n     * The string can be created with [[toHereTile]].\n     *\n     * @param quadkey64 The string representation of the HERE tile key.\n     * @returns A new instance of `TileKey`.\n     */\n    static fromHereTile(quadkey64: string): TileKey {\n        const result = TileKey.fromMortonCode(parseInt(quadkey64, 10));\n        result.m_hereTile = quadkey64;\n        return result;\n    }\n\n    /**\n     * Returns the number of available columns at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of columns.\n     * @returns The available columns at the given level.\n     */\n    static columnsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the number of available rows at a given level.\n     *\n     * This is 2 to the power of the level.\n     *\n     * @param level The level for which to return the number of rows.\n     * @returns The available rows at the given level.\n     */\n    static rowsAtLevel(level: number): number {\n        return Math.pow(2, level);\n    }\n\n    /**\n     * Returns the closest matching `TileKey` in a cartesian coordinate system.\n     *\n     * @param level The level for the tile key.\n     * @param coordX The X coordinate.\n     * @param coordY The Y coordinate.\n     * @param totalWidth The maximum X coordinate.\n     * @param totalHeight The maximum Y coordinate.\n     * @returns A new tile key at the given level that includes the given coordinates.\n     */\n    static atCoords(\n        level: number,\n        coordX: number,\n        coordY: number,\n        totalWidth: number,\n        totalHeight: number\n    ): TileKey {\n        return TileKey.fromRowColumnLevel(\n            Math.floor(coordY / (totalHeight / TileKey.rowsAtLevel(level))),\n            Math.floor(coordX / (totalWidth / TileKey.columnsAtLevel(level))),\n            level\n        );\n    }\n\n    /**\n     * Computes the Morton code of the parent tile key of the given Morton code.\n     *\n     * Note: The parent key of the root key is the root key itself.\n     *\n     * @param mortonCode A Morton code, for example, obtained from [[mortonCode]].\n     * @returns The Morton code of the parent tile.\n     */\n    static parentMortonCode(mortonCode: number): number {\n        return Math.floor(mortonCode / 4);\n    }\n\n    private m_mortonCode?: number;\n    private m_hereTile?: string;\n\n    /**\n     * Constructs a new immutable instance of a `TileKey`.\n     *\n     * For the better readability, [[TileKey.fromRowColumnLevel]] should be preferred.\n     *\n     * Note - row and column must not be greater than the maximum rows/columns for the given level.\n     *\n     * @param row Represents the row in the quadtree.\n     * @param column Represents the column in the quadtree.\n     * @param level Represents the level in the quadtree.\n     */\n    constructor(readonly row: number, readonly column: number, readonly level: number) {}\n\n    /**\n     * Returns a tile key representing the parent of the tile addressed by this tile key.\n     *\n     * Throws an exception is this tile is already the root.\n     */\n    parent(): TileKey {\n        if (this.level === 0) {\n            throw new Error(\"Cannot get the parent of the root tile key\");\n        }\n        // tslint:disable-next-line:no-bitwise\n        return TileKey.fromRowColumnLevel(this.row >>> 1, this.column >>> 1, this.level - 1);\n    }\n\n    /**\n     * Returns a new tile key at a level that differs from this tile's level by delta.\n     *\n     * Equivalent to `changedLevelTo(level() + delta)`.\n     *\n     * Note - root key is returned if `delta` is smaller than the level of this tile key.\n     *\n     * @param delta The numeric difference between the current level and the requested level.\n     */\n    changedLevelBy(delta: number): TileKey {\n        const level = Math.max(0, this.level + delta);\n        let row = this.row;\n        let column = this.column;\n\n        // tslint:disable:no-bitwise\n        if (delta >= 0) {\n            row <<= delta;\n            column <<= delta;\n        } else {\n            row >>>= -delta;\n            column >>>= -delta;\n        }\n        // tslint:enable:no-bitwise\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    /**\n     * Returns a new tile key at the requested level.\n     *\n     * If the requested level is smaller than the tile's level, then the key of an ancestor of this\n     * tile is returned. If the requested level is larger than the tile's level, then the key of\n     * first child or grandchild of this tile is returned, for example, the child with the lowest\n     * row and column number. If the requested level equals this tile's level, then the tile key\n     * itself is returned. If the requested level is negative, the root tile key is returned.\n     *\n     * @param level The requested level.\n     */\n    changedLevelTo(level: number): TileKey {\n        return this.changedLevelBy(level - this.level);\n    }\n\n    /**\n     * Converts the tile key to a numeric code representation.\n     *\n     * You can create a tile key from a numeric Morton code with [[fromMortonCode]].\n     *\n     * Note - only levels <= 26 are supported.\n     */\n    mortonCode(): number {\n        if (this.m_mortonCode === undefined) {\n            let column = this.column;\n            let row = this.row;\n\n            // tslint:disable:no-bitwise\n            let result = powerOfTwo[this.level << 1];\n            for (let i = 0; i < this.level; ++i) {\n                if (column & 0x1) {\n                    result += powerOfTwo[2 * i];\n                }\n                if (row & 0x1) {\n                    result += powerOfTwo[2 * i + 1];\n                }\n                column >>>= 1;\n                row >>>= 1;\n            }\n            // tslint:enable:no-bitwise\n\n            this.m_mortonCode = result;\n        }\n        return this.m_mortonCode;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * The string is a quadkey Morton code representation as a string.\n     *\n     * You can convert back from a quadkey string with [[fromHereTile]].\n     */\n    toHereTile(): string {\n        if (this.m_hereTile === undefined) {\n            this.m_hereTile = this.mortonCode().toString();\n        }\n        return this.m_hereTile;\n    }\n\n    /**\n     * Converts the tile key into a string for using in REST API calls.\n     *\n     * If the tile is the root tile, the quadkey is '-'. Otherwise the string is a number to the\n     * base of 4, but without the leading 1, with the following properties:\n     *  1. the number of digits equals the level.\n     *  2. removing the last digit gives the parent tile's quadkey string, i.e. appending 0,1,2,3\n     *     to a quadkey string gives the tiles's children.\n     *\n     * You can convert back from a quadkey string with [[fromQuadKey]].\n     */\n    toQuadKey(): string {\n        let result: string = \"\";\n\n        // tslint:disable:no-bitwise\n        for (let i = this.level; i > 0; --i) {\n            const mask = 1 << (i - 1);\n\n            const col = (this.column & mask) !== 0;\n            const row = (this.row & mask) !== 0;\n\n            if (col && row) {\n                result += \"3\";\n            } else if (row) {\n                result += \"2\";\n            } else if (col) {\n                result += \"1\";\n            } else {\n                result += \"0\";\n            }\n        }\n        // tslint:enable:no-bitwise\n\n        return result;\n    }\n\n    /**\n     * Equality operator.\n     *\n     * @param qnr The tile key to compare to.\n     * @returns `true` if this tile key has identical row, column and level, `false` otherwise.\n     */\n    equals(qnr: TileKey): boolean {\n        return this.row === qnr.row && this.column === qnr.column && this.level === qnr.level;\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub quadkey.\n     *\n     * @param sub The sub key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubKey(sub: string): TileKey {\n        const subQuad = TileKey.fromQuadKey(sub.length === 0 ? \"-\" : sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns the absolute quadkey that is constructed from its sub HERE tile key.\n     *\n     * @param sub The sub HERE key.\n     * @returns The absolute tile key in the quadtree.\n     */\n    addedSubHereTile(sub: string): TileKey {\n        const subQuad = TileKey.fromHereTile(sub);\n        const child = this.changedLevelBy(subQuad.level);\n        return TileKey.fromRowColumnLevel(\n            child.row + subQuad.row,\n            child.column + subQuad.column,\n            child.level\n        );\n    }\n\n    /**\n     * Returns a sub quadkey that is relative to its parent.\n     *\n     * This function can be used to generate sub keys that are relative to a parent that is delta\n     * levels up in the quadtree.\n     *\n     * This function can be used to create shortened keys for quads on lower levels if the parent is\n     * known.\n     *\n     * Note - the sub quadkeys fit in a 16-bit unsigned integer if the `delta` is smaller than 8. If\n     * `delta` is smaller than 16, the sub quadkey fits into an unsigned 32-bit integer.\n     *\n     * Deltas larger than 16 are not supported.\n     *\n     * @param delta The number of levels relative to its parent quadkey. Must be greater or equal to\n     * 0 and smaller than 16.\n     * @returns The quadkey relative to its parent that is `delta` levels up the tree.\n     */\n    getSubHereTile(delta: number): string {\n        const key = this.mortonCode();\n        // tslint:disable-next-line:no-bitwise\n        const msb = 1 << (delta * 2);\n        const mask = msb - 1;\n        // tslint:disable-next-line:no-bitwise\n        const result = (key & mask) | msb;\n        return result.toString();\n    }\n\n    /**\n     * Returns the number of available rows in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    rowCount(): number {\n        return TileKey.rowsAtLevel(this.level);\n    }\n\n    /**\n     * Returns the number of available columns in the tile's [[level]].\n     *\n     * This is 2 to the power of the level.\n     */\n    columnCount(): number {\n        return TileKey.columnsAtLevel(this.level);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nconst logger = LoggerManager.instance.create(\"WorkerService\", { enabled: false });\n\ndeclare let self: Worker;\n\n/**\n * Response for [[WorkerService]] procession results.\n */\nexport interface WorkerServiceResponse {\n    /**\n     * Response object.\n     */\n    response: any;\n\n    /**\n     * Transfer list containing a list of [[ArrayBuffer]] which transfer ownership from web worker\n     * to UI thread.\n     */\n    transferList?: ArrayBuffer[];\n}\n\n/**\n * Header information for a [[RequestMessage]].\n */\ninterface RequestEntry {\n    /**\n     * ID of service.\n     */\n    service: string;\n\n    /**\n     * Unique ID of message.\n     */\n    messageId: number;\n\n    /**\n     * Contains `true` if message has been processed, and response has been sent.\n     */\n    responseSent: boolean;\n}\n\n/**\n * Worker Service communication helper.\n *\n * Listens to Web Worker messages from [[ConcurrentWorkerSet]] and implements:\n *  - worker service initialization\n *  - request/response scheme\n *  - error handling.\n *\n * This class should be subclassed to provide concrete like [[TileDecoderService]].\n *\n * Communication peer for [[ConcurrentWorkerSet]].\n */\nexport abstract class WorkerService {\n    private m_pendingRequests: Map<number, RequestEntry> = new Map();\n\n    /**\n     * Sets up the `WorkerService` with the specified name, and starts processing messages.\n     *\n     * @param serviceId The service id.\n     */\n    constructor(readonly serviceId: string) {\n        self.addEventListener(\"message\", this.onMessage);\n\n        const isInitializedMessage: WorkerServiceProtocol.InitializedMessage = {\n            service: serviceId,\n            type: WorkerServiceProtocol.ServiceMessageName.Initialized\n        };\n        self.postMessage(isInitializedMessage);\n    }\n\n    /**\n     * Destroy the `WorkerService`. Cancels all pending requests ad removes itself from the message\n     * queue.\n     */\n    destroy() {\n        this.cancelAllPendingRequests();\n\n        self.removeEventListener(\"message\", this.onMessage);\n    }\n\n    /**\n     * Message handler to be overridden by implementation.\n     *\n     * @param message `MessageEvent.data` as received by `WorkerService`.\n     */\n    protected handleMessage(message: any): void {\n        logger.error(`[${this.serviceId}]: Invalid message ${message.type}`);\n    }\n\n    /**\n     * Call request handler to be overridden by implementation.\n     *\n     * @param request [[RequestMessage.request]] as received by `WorkerService`.\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        throw new Error(`ServiceAdapter[${this.serviceId}]: Invalid request '${request.type}'`);\n    }\n\n    /**\n     * Central message handler for this service.\n     *\n     * Responsible for filtering message target and managing request/response sequence.\n     *\n     * @param message Message to be dispatched.\n     */\n    private onMessage = (message: MessageEvent) => {\n        if (typeof message.data.service !== \"string\" || message.data.service !== this.serviceId) {\n            return;\n        }\n\n        try {\n            if (WorkerServiceProtocol.isRequestMessage(message.data)) {\n                const request = message.data;\n                const requestEntry = {\n                    service: request.service,\n                    messageId: request.messageId,\n                    responseSent: false\n                };\n                this.m_pendingRequests.set(request.messageId, requestEntry);\n                this.tryHandleRequest(request.request)\n                    .then(response => {\n                        this.doSendResponse(\n                            requestEntry,\n                            {\n                                service: this.serviceId,\n                                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                                messageId: request.messageId,\n                                response: response.response\n                            },\n                            response.transferList\n                        );\n                    })\n                    .catch(error => {\n                        this.doSendResponse(requestEntry, {\n                            service: this.serviceId,\n                            type: WorkerServiceProtocol.ServiceMessageName.Response,\n                            messageId: request.messageId,\n                            errorMessage: error.toString(),\n                            errorStack: error.stack\n                        });\n                    });\n            } else {\n                this.tryHandleMessage(message.data);\n            }\n        } catch (err) {\n            logger.error(`[${this.serviceId}]: Unhandled exception when handling ${message.type}`);\n        }\n    };\n\n    /**\n     * Safety belt over [[handleMessage]] for correct exception handling & logging.\n     */\n    private tryHandleMessage(message: any): void {\n        try {\n            this.handleMessage(message);\n        } catch (error) {\n            logger.error(`[${this.serviceId}]: Failed, handling message ${message.type}`);\n        }\n    }\n\n    /**\n     * Safety belt over [[handleRequest]] for correct exception handling in promise chain.\n     */\n    private tryHandleRequest(request: any): Promise<WorkerServiceResponse> {\n        try {\n            return this.handleRequest(request);\n        } catch (error) {\n            // we don't log exceptions here as they are propagated to client as responses\n            logger.error(`[${this.serviceId}]: Failure`, error);\n            return Promise.reject(error);\n        }\n    }\n\n    private doSendResponse(\n        requestEntry: RequestEntry,\n        response: WorkerServiceProtocol.ResponseMessage,\n        transferList?: ArrayBuffer[]\n    ) {\n        if (requestEntry.responseSent) {\n            return;\n        }\n\n        if (transferList !== undefined) {\n            self.postMessage(response, transferList);\n        } else {\n            self.postMessage(response);\n        }\n\n        requestEntry.responseSent = true;\n        this.m_pendingRequests.delete(requestEntry.messageId);\n    }\n\n    private cancelAllPendingRequests() {\n        this.m_pendingRequests.forEach(requestEntry => {\n            this.doSendResponse(requestEntry, {\n                service: this.serviceId,\n                type: WorkerServiceProtocol.ServiceMessageName.Response,\n                messageId: requestEntry.messageId,\n                errorMessage: \"cancelled\"\n            });\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { EarthConstants, webMercatorProjection } from \"@here/harp-geoutils\";\nimport * as THREE from \"three\";\n\nimport { OmvDecoder } from \"./OmvDecoder\";\nimport { VTJsonDataAdapterId } from \"./VTJsonDataAdapter\";\n\n/**\n * @hidden\n */\nexport function isArrayBufferLike(data: any): data is ArrayBufferLike {\n    if (typeof SharedArrayBuffer !== \"undefined\") {\n        return data instanceof ArrayBuffer || data instanceof SharedArrayBuffer;\n    } else {\n        return data instanceof ArrayBuffer;\n    }\n}\n\n/**\n * @hidden\n */\nexport function lat2tile(\n    lat: number,\n    zoom: number,\n    func: (x: number) => number = Math.floor\n): number {\n    return func(\n        ((1 -\n            Math.log(Math.tan((lat * Math.PI) / 180) + 1 / Math.cos((lat * Math.PI) / 180)) /\n                Math.PI) /\n            2) *\n            Math.pow(2, zoom)\n    );\n}\n\n/**\n * @hidden\n */\nexport function tile2lat(y: number, level: number): number {\n    const n = Math.PI - (2 * Math.PI * y) / Math.pow(2, level);\n    return (180 / Math.PI) * Math.atan(0.5 * (Math.exp(n) - Math.exp(-n)));\n}\n\nexport interface WorldTileProjectionCookie {\n    extents: number;\n    top: number;\n    left: number;\n    scale: number;\n}\n\nexport function createWorldTileTransformationCookie(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo\n) {\n    const { north, west } = decodeInfo.geoBox;\n    const N = Math.log2(extents);\n    const scale = Math.pow(2, decodeInfo.tileKey.level + N);\n    return {\n        extents,\n        scale,\n        top: lat2tile(\n            north,\n            decodeInfo.tileKey.level + N,\n            decodeInfo.adapterId === VTJsonDataAdapterId ? Math.round : Math.floor\n        ),\n        left: ((west + 180) / 360) * scale\n    };\n}\n\n/**\n * @hidden\n */\nexport function tile2world(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        ((left + position.x) / scale) * R,\n        ((top + (flipY ? -position.y : position.y)) / scale) * R\n    );\n}\n\n/**\n * @hidden\n */\nexport function world2tile(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    flipY: boolean = false,\n    target: THREE.Vector2\n): THREE.Vector2 {\n    if (\n        decodeInfo.worldTileProjectionCookie === undefined ||\n        decodeInfo.worldTileProjectionCookie.extents !== extents\n    ) {\n        decodeInfo.worldTileProjectionCookie = createWorldTileTransformationCookie(\n            extents,\n            decodeInfo\n        );\n    }\n    const { top, left, scale } = decodeInfo.worldTileProjectionCookie;\n    const R = EarthConstants.EQUATORIAL_CIRCUMFERENCE;\n\n    return target.set(\n        (position.x / R) * scale - left,\n        (flipY ? -1 : 1) * ((position.y / R) * scale - top)\n    );\n}\n\nconst tempWorldPos = new THREE.Vector2();\n\nexport function webMercatorTile2TargetWorld(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    const worldPos = tile2world(extents, decodeInfo, position, flipY, tempWorldPos);\n    target.set(worldPos.x, worldPos.y, 0);\n    decodeInfo.targetProjection.reprojectPoint(webMercatorProjection, target, target);\n}\n\nexport function webMercatorTile2TargetTile(\n    extents: number,\n    decodeInfo: OmvDecoder.DecodeInfo,\n    position: THREE.Vector2,\n    target: THREE.Vector3,\n    flipY: boolean = false\n) {\n    webMercatorTile2TargetWorld(extents, decodeInfo, position, target, flipY);\n    target.sub(decodeInfo.center);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ExtendedTileInfo,\n    GeometryKind,\n    IndexedTechnique,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { MapEnv, StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    GeoBox,\n    OrientedBox3,\n    Projection,\n    TileKey,\n    TilingScheme,\n    webMercatorTilingScheme\n} from \"@here/harp-geoutils\";\nimport {\n    ThemedTileDecoder,\n    TileDecoderService,\n    WorkerServiceManager\n} from \"@here/harp-mapview-decoder/index-worker\";\nimport { LoggerManager, PerformanceTimer } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// tslint:disable-next-line:max-line-length\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvProtobufDataAdapter } from \"./OmvData\";\nimport {\n    ComposedDataFilter,\n    OmvFeatureFilter,\n    OmvFeatureModifier,\n    OmvGenericFeatureFilter,\n    OmvGenericFeatureModifier\n} from \"./OmvDataFilter\";\nimport { OmvDecodedTileEmitter } from \"./OmvDecodedTileEmitter\";\nimport {\n    FeatureModifierId,\n    OMV_TILE_DECODER_SERVICE_TYPE,\n    OmvDecoderOptions,\n    OmvFeatureFilterDescription\n} from \"./OmvDecoderDefs\";\nimport { OmvTileInfoEmitter } from \"./OmvTileInfoEmitter\";\nimport { OmvTomTomFeatureModifier } from \"./OmvTomTomFeatureModifier\";\nimport { WorldTileProjectionCookie } from \"./OmvUtils\";\nimport { StyleSetDataFilter } from \"./StyleSetDataFilter\";\nimport { VTJsonDataAdapter } from \"./VTJsonDataAdapter\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecoder\", { enabled: false });\n\nexport class Ring {\n    readonly winding: boolean;\n\n    /**\n     * Constructs a new [[Ring]].\n     *\n     * @param extents The extents of the enclosing layer.\n     * @param vertexStride The stride of this elements stored in 'contour'.\n     * @param contour The [[Array]] containing the projected world coordinates.\n     */\n    constructor(\n        readonly extents: number,\n        readonly vertexStride: number,\n        readonly contour: number[]\n    ) {\n        this.winding = this.area() < 0;\n    }\n\n    area(): number {\n        const points = this.contour;\n        const stride = this.vertexStride;\n        const n = points.length / stride;\n\n        let area = 0.0;\n\n        for (let p = n - 1, q = 0; q < n; p = q++) {\n            area +=\n                points[p * stride] * points[q * stride + 1] -\n                points[q * stride] * points[p * stride + 1];\n        }\n\n        return area / 2;\n    }\n}\n\nexport interface IOmvEmitter {\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        feature: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        feature: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void;\n}\n\n/**\n * The class [[OmvDataAdapter]] prepares protobuf encoded OMV data so they\n * can be processed by [[OmvDecoder]].\n */\nexport interface OmvDataAdapter {\n    /**\n     * OmvDataAdapter's id.\n     */\n    id: string;\n\n    /**\n     * Checks if the given data can be processed by this OmvDataAdapter.\n     *\n     * @param data The raw data to adapt.\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean;\n\n    /**\n     * Process the given raw data.\n     *\n     * @param data The raw data to process.\n     * @param tileKey The TileKey of the enclosing Tile.\n     * @param geoBox The GeoBox of the enclosing Tile.\n     */\n    process(data: ArrayBufferLike | {}, tileKey: TileKey, geoBox: GeoBox): void;\n}\n\nexport class OmvDecoder implements IGeometryProcessor {\n    // The emitters are both optional now.\n    // TODO: Add option to control emitter generation.\n    private m_decodedTileEmitter: OmvDecodedTileEmitter | undefined;\n    private m_infoTileEmitter: OmvTileInfoEmitter | undefined;\n    private readonly m_dataAdapters: OmvDataAdapter[] = [];\n\n    constructor(\n        private readonly m_projection: Projection,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_showMissingTechniques: boolean,\n        private readonly m_dataFilter?: OmvFeatureFilter,\n        private readonly m_featureModifier?: OmvFeatureModifier,\n        private readonly m_gatherFeatureAttributes = false,\n        private readonly m_createTileInfo = false,\n        private readonly m_gatherRoadSegments = false,\n        private readonly m_skipShortLabels = true,\n        private readonly m_storageLevelOffset = 0,\n        private readonly m_enableElevationOverlay = false,\n        private readonly m_languages?: string[]\n    ) {\n        const styleSetDataFilter = new StyleSetDataFilter(m_styleSetEvaluator);\n        const dataPreFilter = m_dataFilter\n            ? new ComposedDataFilter([styleSetDataFilter, m_dataFilter])\n            : styleSetDataFilter;\n        // Register the default adapters.\n        this.m_dataAdapters.push(new OmvProtobufDataAdapter(this, dataPreFilter, logger));\n        this.m_dataAdapters.push(new VTJsonDataAdapter(this, dataPreFilter, logger));\n    }\n\n    get storageLevelOffset() {\n        return this.m_storageLevelOffset;\n    }\n\n    /**\n     * Given a tile and a protobuffer, it returns a decoded tile and it creates the geometries that\n     * belong to it.\n     *\n     * @param tileKey The tile to be decoded.\n     * @param data The protobuffer to decode from.\n     * @returns A [[DecodedTile]]\n     */\n    getDecodedTile(tileKey: TileKey, data: ArrayBufferLike | {}): DecodedTile {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return {\n                techniques: [],\n                geometries: []\n            };\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const tileSizeOnScreen = this.estimatedTileSizeOnScreen();\n        const decodeInfo = new OmvDecoder.DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            tileSizeOnScreen\n        );\n\n        this.m_decodedTileEmitter = new OmvDecodedTileEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            this.m_gatherFeatureAttributes,\n            this.m_skipShortLabels,\n            this.m_enableElevationOverlay,\n            this.m_languages\n        );\n        if (this.m_createTileInfo) {\n            const storeExtendedTags = true;\n            this.m_infoTileEmitter = new OmvTileInfoEmitter(\n                decodeInfo,\n                this.m_styleSetEvaluator,\n                storeExtendedTags,\n                this.m_gatherRoadSegments\n            );\n        }\n\n        dataAdapter.process(data, tileKey, decodeInfo.geoBox);\n        const decodedTile = this.m_decodedTileEmitter.getDecodedTile();\n\n        if (this.m_createTileInfo) {\n            decodedTile.tileInfo = this.m_infoTileEmitter!.getTileInfo();\n        }\n\n        return decodedTile;\n    }\n\n    getTileInfo(tileKey: TileKey, data: ArrayBufferLike | {}): ExtendedTileInfo {\n        let dataAdapter;\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                dataAdapter = adapter;\n                break;\n            }\n        }\n        if (dataAdapter === undefined) {\n            return new ExtendedTileInfo(tileKey, false);\n        }\n\n        this.m_styleSetEvaluator.resetTechniques();\n\n        const tileSizeOnScreen = this.estimatedTileSizeOnScreen();\n        const decodeInfo = new OmvDecoder.DecodeInfo(\n            dataAdapter.id,\n            this.m_projection,\n            tileKey,\n            tileSizeOnScreen\n        );\n\n        const storeExtendedTags = true;\n        this.m_infoTileEmitter = new OmvTileInfoEmitter(\n            decodeInfo,\n            this.m_styleSetEvaluator,\n            storeExtendedTags,\n            this.m_gatherRoadSegments\n        );\n\n        for (const adapter of this.m_dataAdapters.values()) {\n            if (adapter.canProcess(data)) {\n                adapter.process(data, tileKey, decodeInfo.geoBox);\n                break;\n            }\n        }\n\n        return this.m_infoTileEmitter.getTileInfo();\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPointFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"point\"),\n            GeometryKind.Label\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPointFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processPointFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessLineFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"line\"),\n            GeometryKind.Line\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processLineFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processLineFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        env: MapEnv,\n        storageLevel: number\n    ): void {\n        if (\n            this.m_featureModifier !== undefined &&\n            !this.m_featureModifier.doProcessPolygonFeature(layer, env, storageLevel)\n        ) {\n            return;\n        }\n\n        const techniques = this.applyKindFilter(\n            this.m_styleSetEvaluator.getMatchingTechniques(env, layer, \"polygon\"),\n            GeometryKind.Area\n        );\n\n        if (techniques.length === 0) {\n            if (this.m_showMissingTechniques) {\n                logger.log(\n                    \"OmvDecoder#processPolygonFeature: no techniques for object:\",\n                    JSON.stringify(env.unmap())\n                );\n            }\n            return;\n        }\n\n        const context = {\n            env,\n            storageLevel,\n            zoomLevel: this.getZoomLevel(storageLevel),\n            cachedExprResults: this.m_styleSetEvaluator.expressionEvaluatorCache\n        };\n        const featureId = env.lookup(\"$id\") as number | undefined;\n\n        if (this.m_decodedTileEmitter) {\n            this.m_decodedTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n        if (this.m_infoTileEmitter) {\n            this.m_infoTileEmitter.processPolygonFeature(\n                layer,\n                extents,\n                geometry,\n                context,\n                techniques,\n                featureId\n            );\n        }\n    }\n\n    /**\n     * Estimate the number of screen pixels a tile will cover. The actual number of pixels will be\n     * influenced by tilt and rotation, so estimated the number here should be an upper bound.\n     *\n     * @returns {number} Estimated number of screen pixels.\n     */\n    protected estimatedTileSizeOnScreen(): number {\n        const tileSizeOnScreen = 256 * Math.pow(2, -this.m_storageLevelOffset);\n        return tileSizeOnScreen;\n    }\n\n    private getZoomLevel(storageLevel: number) {\n        return Math.max(0, storageLevel - (this.m_storageLevelOffset || 0));\n    }\n\n    private applyKindFilter(\n        techniques: IndexedTechnique[],\n        defaultKind: GeometryKind\n    ): IndexedTechnique[] {\n        if (this.m_dataFilter !== undefined && this.m_dataFilter.hasKindFilter) {\n            techniques = techniques.filter(technique => {\n                const kind =\n                    // tslint:disable-next-line: deprecation\n                    technique.kind === undefined ? defaultKind : (technique.kind as GeometryKind);\n                return this.m_dataFilter!.wantsKind(kind);\n            });\n        }\n        return techniques;\n    }\n}\n\nexport namespace OmvDecoder {\n    export class DecodeInfo {\n        /**\n         * The [[GeoBox]] of the Tile to decode.\n         */\n        readonly geoBox: GeoBox;\n\n        readonly projectedBoundingBox = new OrientedBox3();\n\n        /**\n         * The tile bounds in the OMV tile space [[webMercatorTilingScheme]].\n         */\n        readonly tileBounds = new THREE.Box3();\n\n        /**\n         * The tile size in the OMV tile space [[webMercatorTilingScheme]].\n         */\n        readonly tileSize = new THREE.Vector3();\n\n        /**\n         * The center of the Tile in the target [[Projection]] space.\n         * Geometries generated by decoding the OMV tile must be relative\n         * to this position.\n         */\n        readonly center = new THREE.Vector3();\n\n        worldTileProjectionCookie?: WorldTileProjectionCookie;\n\n        /**\n         * Constructs a new [[DecodeInfo]].\n         *\n         * @param adapterId The id of the [[OmvDataAdapter]] used for decoding.\n         * @param targetProjection The [[Projection]]\n         * @param tileKey The [[TileKey]] of the Tile to decode.\n         * @param tileSizeOnScreen The estimated size of the Tile in pixels.\n         */\n        constructor(\n            readonly adapterId: string,\n            readonly targetProjection: Projection,\n            readonly tileKey: TileKey,\n            readonly tileSizeOnScreen: number\n        ) {\n            this.geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n            this.targetProjection.projectBox(this.geoBox, this.projectedBoundingBox);\n            this.projectedBoundingBox.getCenter(this.center);\n\n            this.tilingScheme.getWorldBox(tileKey, this.tileBounds);\n            this.tileBounds.getSize(this.tileSize);\n        }\n\n        /**\n         * The [[TilingScheme]] of the OMV data, currenly it is defined\n         * to be [[webMercatorTilingScheme]].\n         */\n        get tilingScheme(): TilingScheme {\n            return webMercatorTilingScheme;\n        }\n\n        /**\n         * The [[Projection]] of OMV tiled data, currenly it is defined\n         * to be [[webMercatorProjection]].\n         */\n        get sourceProjection(): Projection {\n            return this.tilingScheme.projection;\n        }\n    }\n}\n\nexport class OmvTileDecoder extends ThemedTileDecoder {\n    private m_showMissingTechniques: boolean = false;\n    private m_featureFilter?: OmvFeatureFilter;\n    private m_featureModifier?: OmvFeatureModifier;\n    private m_gatherFeatureAttributes: boolean = false;\n    private m_createTileInfo: boolean = false;\n    private m_gatherRoadSegments: boolean = false;\n    private m_skipShortLabels: boolean = true;\n    private m_enableElevationOverlay: boolean = false;\n\n    /** @override */\n    connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    /** @override */\n    decodeThemedTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        const startTime = PerformanceTimer.now();\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_createTileInfo,\n            this.m_gatherRoadSegments,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const decodedTile = decoder.getDecodedTile(tileKey, data);\n\n        decodedTile.decodeTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(decodedTile);\n    }\n\n    /** @override */\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        const startTime = PerformanceTimer.now();\n\n        const styleSetEvaluator = this.m_styleSetEvaluator;\n        if (styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"no theme loaded\"));\n        }\n\n        const decoder = new OmvDecoder(\n            projection,\n            styleSetEvaluator,\n            this.m_showMissingTechniques,\n            this.m_featureFilter,\n            this.m_featureModifier,\n            this.m_gatherFeatureAttributes,\n            this.m_createTileInfo,\n            this.m_gatherRoadSegments,\n            this.m_skipShortLabels,\n            this.m_storageLevelOffset,\n            this.m_enableElevationOverlay,\n            this.languages\n        );\n\n        const tileInfo = decoder.getTileInfo(tileKey, data);\n\n        tileInfo.setupTime = PerformanceTimer.now() - startTime;\n\n        return Promise.resolve(tileInfo);\n    }\n\n    /** @override */\n    configure(\n        styleSet: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        super.configure(styleSet, definitions, languages, options);\n\n        if (options) {\n            const omvOptions = options as OmvDecoderOptions;\n\n            if (omvOptions.showMissingTechniques !== undefined) {\n                this.m_showMissingTechniques = omvOptions.showMissingTechniques === true;\n            }\n\n            if (omvOptions && omvOptions.filterDescription !== undefined) {\n                if (omvOptions.filterDescription !== null) {\n                    // create new filter/modifier from description\n                    this.m_featureFilter = new OmvGenericFeatureFilter(\n                        omvOptions.filterDescription\n                    );\n                    this.m_featureModifier = this.createFeatureModifier(\n                        omvOptions.filterDescription,\n                        omvOptions.featureModifierId\n                    );\n                } else {\n                    // null is the signal to clear the filter/modifier\n                    this.m_featureFilter = undefined;\n                    this.m_featureModifier = undefined;\n                }\n            }\n\n            if (omvOptions.gatherFeatureAttributes !== undefined) {\n                this.m_gatherFeatureAttributes = omvOptions.gatherFeatureAttributes === true;\n            }\n            if (omvOptions.createTileInfo !== undefined) {\n                this.m_createTileInfo = omvOptions.createTileInfo === true;\n            }\n            if (omvOptions.gatherRoadSegments !== undefined) {\n                this.m_gatherRoadSegments = omvOptions.gatherRoadSegments === true;\n            }\n            if (omvOptions.skipShortLabels !== undefined) {\n                this.m_skipShortLabels = omvOptions.skipShortLabels;\n            }\n            if (omvOptions.enableElevationOverlay !== undefined) {\n                this.m_enableElevationOverlay = omvOptions.enableElevationOverlay;\n            }\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n    }\n\n    private createFeatureModifier(\n        filterDescription: OmvFeatureFilterDescription,\n        featureModifierId?: FeatureModifierId\n    ): OmvFeatureModifier {\n        if (featureModifierId === FeatureModifierId.tomTom) {\n            return new OmvTomTomFeatureModifier(filterDescription);\n        } else {\n            return new OmvGenericFeatureModifier(filterDescription);\n        }\n    }\n}\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTileDecoderService {\n    /**\n     * Register[[OmvTileDecoder]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILE_DECODER_SERVICE_TYPE,\n            factory: (serviceId: string) =>\n                TileDecoderService.start(serviceId, new OmvTileDecoder())\n        });\n    }\n}\n\n/**\n * Starts an OMV decoder service.\n *\n * @deprecated Please use [[OmvTileDecoderService.start]].\n */\nexport default class OmvWorkerClient {\n    // TODO(HARP-3651): remove this class when clients are ready\n    constructor() {\n        logger.warn(\"OmvWorkerClient class is deprecated, please use OmvTileDecoderService.start\");\n        OmvTileDecoderService.start();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Enum log levels\n */\nexport enum LogLevel {\n    Trace,\n    Debug,\n    Log,\n    Info,\n    Warn,\n    Error\n}\n\n/**\n * Logger options to configure logger\n */\nexport class LoggerOptions {\n    enabled?: boolean;\n    level?: LogLevel;\n}\n\n/**\n * Public interface for Logger class.\n */\nexport interface ILogger extends IChannel {\n    readonly name: string;\n\n    enabled: boolean;\n\n    level: LogLevel;\n\n    /**\n     * Update logger options\n     *\n     * @param  {LoggerOptions} options Set logger options and configure internal logger.\n     */\n    update(options: LoggerOptions): void;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Resolve URI of referenced object w.r.t parent URI.\n *\n * Resolves `childUri` as it would be loaded from location specified by `parentUri`.\n *\n * If `childUri` is absolute, then it is returned unchanged.\n * If `childUri` is origin-absolute path, then only origin path is taken from `parentUri`.\n *\n * See [[baseUri]] for reference how base URL of `parentUri` is determined.\n *\n * Supports `http:`, `https:`, `file:`, `data:` schemes.\n *\n * Examples:\n *\n *     // normal case, child is sibling\n *     https://foo.com/themes/day.json + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent is \"folder\", so child is just located in this folder\n *     https://foo.com/themes/ + images/foo.png -> https://foo.com/themes/images/foo.png\n *\n *     // parent looks like leaf, so last component is stripped\n *     https://foo.com/themes + images/foo.png -> https://foo.com/images/foo.png\n *\n *     // origin-absolute URL, takes only origin from parent\n *     https://foo.com/themes/day.json + /fonts/foo.json -> https://foo.com/fonts/foo.json\n *\n * @param parentUri URI of parent resource\n * @param childUri URI of child as referenced from parent resource\n * @return `childUrl` as if anchored in location of `parentUrl`\n */\nexport function resolveReferenceUri(parentUri: string | undefined, childUri: string): string {\n    if (absoluteUrlWithOriginRe.test(childUri)) {\n        return childUri;\n    } else if (childUri.startsWith(\"/\")) {\n        const origin = getUrlOrigin(parentUri);\n        return origin + childUri;\n    } else {\n        if (childUri.startsWith(\"./\")) {\n            childUri = childUri.substr(2);\n        }\n        const parentBaseUrl = baseUrl(parentUri);\n        return parentBaseUrl + childUri;\n    }\n}\n\nconst absoluteUrlWithOriginRe = new RegExp(\"^(((?:[a-z]+:)?//)|(file:/)|(data:))\", \"i\");\n\n/**\n * Returns base URL of given resource URL.\n *\n * `Url` with trailing slash are considered genuine 'locations', they are returned as is, however if\n * `url` ends with name component it is treated as \"leaf\", so last path component is removed.\n *\n * Standalone files (without any folder structure) are considered relative to `./`.\n *\n * Examples:\n * ```\n *     https://foo.com/themes/a.json -> https://foo.com/themes/\n *     https://foo.com/themes/ -> https://foo.com/themes/\n *     https://foo.com/themes -> https://foo.com/ // note, themes is treated as leaf\n *     themes/day.json -> themes/\n *     themes -> ./\n * ```\n */\nexport function baseUrl(url: string | undefined) {\n    if (url === undefined) {\n        return \"./\";\n    }\n    let idx = url.indexOf(\"#\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.indexOf(\"?\");\n    if (idx !== -1) {\n        url = url.slice(0, idx);\n    }\n    idx = url.lastIndexOf(\"/\");\n    if (idx === -1) {\n        return \"./\";\n    } else {\n        return url.substring(0, idx + 1);\n    }\n}\n\n/**\n * Get `origin` part of URL.\n *\n * @example\n *    https://example.com/foo -> https://example.com\n *    //example.com:8080/ -> //example.com:8080\n *    file:///etc/hosts ->\n *\n * @param url input URL\n * @return origin of given URL\n */\nexport function getUrlOrigin(url: string | undefined): string {\n    if (url === undefined) {\n        return \"\";\n    }\n    const parsed = getUrlHostAndProtocol(url);\n    if (parsed.protocol === \"file:\") {\n        return \"file://\";\n    } else if (parsed.host && parsed.protocol) {\n        return parsed.protocol + \"//\" + parsed.host;\n    } else if (parsed.host) {\n        return \"//\" + parsed.host;\n    } else if (parsed.protocol) {\n        return parsed.protocol + \"//\";\n    } else {\n        return \"\";\n    }\n}\n\n/**\n * Parse `host` and `protocol` part from URL.\n */\nexport function getUrlHostAndProtocol(\n    url: string\n): {\n    protocol: string;\n    host: string;\n} {\n    const urlOriginRe = new RegExp(/^(?:([a-z]+:))?\\/\\/([^\\/]*)/, \"i\");\n\n    const match = url.match(urlOriginRe);\n    if (!match) {\n        throw new Error(`getUrlHostAndProtocol: unable to parse URL '${url}'`);\n    }\n    return {\n        protocol: match[1],\n        host: match[2]\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { assert } from \"@here/harp-utils\";\nimport { Color } from \"three\";\nimport { ColorUtils } from \"./ColorUtils\";\n\nconst tmpColor = new Color();\n\n/**\n * Enumeration of supported string encoded numerals.\n */\nexport enum StringEncodedNumeralType {\n    Meters,\n    Pixels,\n    Hex,\n    RGB,\n    RGBA,\n    HSL\n}\n\n/**\n * Interface containing information about a [[StringEncodedNumeral]] format, component size and\n * evaluation.\n */\nexport interface StringEncodedNumeralFormat {\n    readonly type: StringEncodedNumeralType;\n    readonly size: number;\n    readonly regExp: RegExp;\n    mask?: number;\n    decoder: (encodedValue: string, target: number[]) => boolean;\n}\nconst StringEncodedMeters: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Meters,\n    size: 1,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))m$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedMeters.regExp.exec(encodedValue);\n        return match ? (target[0] = Number(match[1])) !== undefined : false;\n    }\n};\nconst StringEncodedPixels: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Pixels,\n    size: 1,\n    mask: 1.0,\n    regExp: /^((?=\\.\\d|\\d)(?:\\d+)?(?:\\.?\\d*))px$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedPixels.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        target[0] = Number(match[1]);\n        return true;\n    }\n};\nconst StringEncodedHex: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.Hex,\n    size: 4,\n    regExp: /^\\#((?:[0-9A-Fa-f][0-9A-Fa-f]){3,4}|[0-9A-Fa-f]{3,4})$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const match = StringEncodedHex.regExp.exec(encodedValue);\n        if (match === null) {\n            return false;\n        }\n        const hex = match[1];\n        const size = hex.length;\n        // Only few sizes are possible for given reg-exp.\n        assert(\n            size === 3 || size === 4 || size === 6 || size === 8,\n            `Matched incorrect hex color format`\n        );\n        // Note that we simply ignore alpha channel value.\n        // TODO: To be resolved with HARP-7517\n        if (size === 3 || size === 4) {\n            // #RGB or #RGBA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n            target[1] = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n            target[2] = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n            target[3] = size === 4 ? parseInt(hex.charAt(3) + hex.charAt(3), 16) / 255 : 1;\n        } else if (size === 6 || size === 8) {\n            // #RRGGBB or #RRGGBBAA\n            target[0] = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n            target[1] = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n            target[2] = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n            target[3] = size === 8 ? parseInt(hex.charAt(6) + hex.charAt(7), 16) / 255 : 1;\n        }\n        return true;\n    }\n};\nconst StringEncodedRGB: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGB,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgb\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5])) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGB.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        return true;\n    }\n};\nconst StringEncodedRGBA: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.RGBA,\n    size: 4,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^rgba\\( ?(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:([0-9]{1,2}|1[0-9]{1,2}|2[0-4][0-9]|25[0-5]), ?)(?:(0(?:\\.[0-9]+)?|1(?:\\.0+)?)) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedRGBA.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        target[0] = parseInt(channels[1], 10) / 255;\n        target[1] = parseInt(channels[2], 10) / 255;\n        target[2] = parseInt(channels[3], 10) / 255;\n        target[3] = parseFloat(channels[4]);\n        return true;\n    }\n};\nconst StringEncodedHSL: StringEncodedNumeralFormat = {\n    type: StringEncodedNumeralType.HSL,\n    size: 3,\n    // tslint:disable-next-line:max-line-length\n    regExp: /^hsl\\( ?((?:[0-9]|[1-9][0-9]|1[0-9]{1,2}|2[0-9]{1,2}|3[0-5][0-9]|360)), ?(?:([0-9]|[1-9][0-9]|100)%), ?(?:([0-9]|[1-9][0-9]|100)%) ?\\)$/,\n    decoder: (encodedValue: string, target: number[]) => {\n        const channels = StringEncodedHSL.regExp.exec(encodedValue);\n        if (channels === null) {\n            return false;\n        }\n        tmpColor.setHSL(\n            parseInt(channels[1], 10) / 360,\n            parseInt(channels[2], 10) / 100,\n            parseInt(channels[3], 10) / 100\n        );\n        target[0] = tmpColor.r;\n        target[1] = tmpColor.g;\n        target[2] = tmpColor.b;\n        return true;\n    }\n};\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing sizes, lengths and distances.\n */\nexport const StringEncodedMetricFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedMeters,\n    StringEncodedPixels\n];\n\nconst StringEncodedMetricFormatMaxSize = StringEncodedMetricFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of all supported [[StringEncodedNumeralFormat]]s describing color data.\n */\nexport const StringEncodedColorFormats: StringEncodedNumeralFormat[] = [\n    StringEncodedHex,\n    StringEncodedRGB,\n    StringEncodedRGBA,\n    StringEncodedHSL\n];\n\nconst StringEncodedColorFormatMaxSize = StringEncodedColorFormats.reduce(\n    (a, b) => Math.max(a, b.size),\n    0\n);\n\n/**\n * Array of supported [[StringEncodedNumeralFormat]]s (intended to be indexed with\n * [[StringEncodedNumeralType]] enum).\n */\nexport const StringEncodedNumeralFormats: StringEncodedNumeralFormat[] = [\n    ...StringEncodedMetricFormats,\n    ...StringEncodedColorFormats\n];\n\nexport const StringEncodedNumeralFormatMaxSize = Math.max(\n    StringEncodedColorFormatMaxSize,\n    StringEncodedMetricFormatMaxSize\n);\n\nconst tmpBuffer: number[] = new Array(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Parse string encoded numeral values using all known [[StringEncodedNumeralFormats]].\n *\n * @param numeral The string representing numeric value.\n * @param pixelToMeters The ratio used to convert from meters to pixels (default 1.0).\n * @returns Number parsed or __undefined__ if non of the numeral patterns matches the expression\n * provided in [[numeral]].\n */\nexport function parseStringEncodedNumeral(\n    numeral: string,\n    pixelToMeters: number = 1.0\n): number | undefined {\n    let result: number | undefined;\n    const formatMatch = (format: StringEncodedNumeralFormat) => {\n        if (format.decoder(numeral, tmpBuffer)) {\n            switch (format.type) {\n                case StringEncodedNumeralType.Meters:\n                    result = tmpBuffer[0];\n                    break;\n                case StringEncodedNumeralType.Pixels:\n                    result = tmpBuffer[0] * pixelToMeters;\n                    break;\n                case StringEncodedNumeralType.Hex:\n                case StringEncodedNumeralType.RGBA:\n                    result = ColorUtils.getHexFromRgba(\n                        tmpBuffer[0],\n                        tmpBuffer[1],\n                        tmpBuffer[2],\n                        tmpBuffer[3]\n                    );\n                    break;\n                case StringEncodedNumeralType.RGB:\n                case StringEncodedNumeralType.HSL:\n                    result = ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n                    break;\n                default:\n                    result = tmpBuffer[0];\n                    break;\n            }\n            return true;\n        }\n        return false;\n    };\n    StringEncodedNumeralFormats.some(formatMatch);\n    return result;\n}\n\n/**\n * Parse string encoded color value using all known [[StringEncodedColorFormats]].\n *\n * @param color The string encoded color expression (i.e. '#FFF', 'rgb(255, 0, 0)', etc.).\n * @returns The color parsed or __undefined__ if non of the known representations matches\n * the expression provided in [[color]].\n */\nexport function parseStringEncodedColor(color: string): number | undefined {\n    const matchedFormat = matchFormat(StringEncodedColorFormats, color, tmpBuffer);\n    if (matchedFormat === undefined) {\n        return undefined;\n    }\n    switch (matchedFormat.type) {\n        case StringEncodedNumeralType.Hex:\n        case StringEncodedNumeralType.RGBA:\n            return ColorUtils.getHexFromRgba(\n                tmpBuffer[0],\n                tmpBuffer[1],\n                tmpBuffer[2],\n                tmpBuffer[3]\n            );\n        case StringEncodedNumeralType.RGB:\n        case StringEncodedNumeralType.HSL:\n            return ColorUtils.getHexFromRgb(tmpBuffer[0], tmpBuffer[1], tmpBuffer[2]);\n        default:\n            return tmpBuffer[0];\n    }\n}\n\nfunction matchFormat(\n    formats: StringEncodedNumeralFormat[],\n    numeral: string,\n    result: number[]\n): StringEncodedNumeralFormat | undefined {\n    return formats.find(format => {\n        return format.decoder(numeral, result) ? true : false;\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"@here/harp-geoutils/lib/math/Vector3Like\";\nimport { isJsonExpr, JsonExpr } from \"./Expr\";\nimport { isInterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    DynamicProperty,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams\n} from \"./TechniqueParams\";\n\n/**\n * Map theme is used to define what features are shown and how the map is styled, for example\n * which lightning is used or whether fog should be displayed.\n */\nexport interface Theme {\n    /**\n     * The URI of the JSON schema describing themes.\n     */\n    $schema?: string;\n\n    /**\n     * The base `Theme`s or `theme` URLs to extend.\n     *\n     * If used, base themes are loaded first, and then all the properties from inherited theme\n     * overwrite these defined in base theme.\n     */\n    extends?: string | Theme | Array<string | Theme>;\n\n    /**\n     * Actual URL the theme has been loaded from.\n     */\n    url?: string;\n\n    /**\n     * Color to be used as a clear background - no map objects.\n     * @format color-hex\n     */\n    clearColor?: string;\n\n    /**\n     * Define the default text style for styling labels and texts.\n     */\n    defaultTextStyle?: TextStyleDefinition;\n\n    /**\n     * Define the lightning available on the three.js scene.\n     */\n    lights?: Light[];\n\n    /**\n     * Define the style of the sky presented in the map scene.\n     */\n    sky?: Sky;\n\n    /**\n     * Define the fog used in the map scene.\n     */\n    fog?: Fog;\n\n    /**\n     * The definitions exported by these theme.\n     */\n    definitions?: Definitions;\n\n    /**\n     * Map styles available for datasources used to render the map.\n     */\n    styles?: Styles;\n\n    /**\n     * Define the style to render different types of text used on the map.\n     */\n    textStyles?: TextStyleDefinition[];\n\n    /**\n     * List available fonts to be used while rendering text.\n     */\n    fontCatalogs?: FontCatalogConfig[];\n\n    /**\n     * Optional images to be rendered on the map view.\n     */\n    images?: ImageDefinitions;\n\n    /**\n     * Image textures to be used while rendering geometries on the map view.\n     */\n    imageTextures?: ImageTexture[];\n\n    /**\n     * Optional list of [[ThemePoiTableDef]]s.\n     */\n    poiTables?: PoiTableRef[];\n\n    /**\n     * Optional list of symbolic priorities for the object\n     * created using this [[Theme]].\n     *\n     * The attribute `styleSet` and `category` of the [[Technique]]\n     * are used together with [[Theme.priorities]] to sort\n     * the objects created using this [[Theme]], for example:\n     *\n     * ```json\n     * {\n     *      \"priorities\": [\n     *          { \"group\": \"tilezen\", \"category\": \"outline-1\" }\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"solid-line\",\n     *              \"styleSet\": \"tilezen\",\n     *              \"category\": \"outline-1\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    priorities?: StylePriority[];\n\n    /**\n     * Optional list of priorities for the screen-space\n     * objects created using this style.\n     *\n     * The name of the `category` attribute of the screen-space\n     * technique (e.g. `\"text\"`) must match on the strings\n     * defined by this [[Theme.labelPriorities]], for example:\n     *\n     * ```json\n     * {\n     *      \"labelPriorities\": [\n     *          \"continent-labels\",\n     *          \"country-labels\",\n     *          \"state-labels\"\n     *      ],\n     *      \"styles\": [\n     *          {\n     *              \"technique\": \"text\",\n     *              \"category\": \"state-labels\"\n     *          }\n     *      ]\n     * }\n     * ```\n     */\n    labelPriorities?: string[];\n}\n\n/**\n * A type representing symbolic render orders.\n */\nexport interface StylePriority {\n    /**\n     * The group of this [[StylePriority]].\n     */\n    group: string;\n\n    /**\n     * The category of this [[StylePriority]].\n     */\n    category?: string;\n}\n\n/**\n * A type representing HARP themes with all the styleset declarations\n * grouped in one [[Array]].\n *\n * @internal This type will merge with [[Theme]].\n */\nexport type FlatTheme = Omit<Theme, \"styles\"> & {\n    /**\n     * The style rules used to render the map.\n     */\n    styles?: StyleSet;\n};\n\n/**\n * Checks if the given definition implements the [[BoxedDefinition]] interface.\n */\nexport function isBoxedDefinition(def: Definition): def is BoxedDefinition {\n    const bdef = def as BoxedDefinition;\n    return (\n        typeof bdef === \"object\" &&\n        bdef !== null &&\n        (typeof bdef.type === \"string\" || typeof bdef.type === \"undefined\") &&\n        (typeof bdef.value === \"string\" ||\n            typeof bdef.value === \"number\" ||\n            typeof bdef.value === \"boolean\" ||\n            isInterpolatedPropertyDefinition(bdef.value) ||\n            isJsonExpr(bdef.value))\n    );\n}\n\nexport function isLiteralDefinition(def: Definition): def is LiteralValue {\n    return typeof def === \"string\" || typeof def === \"number\" || typeof def === \"boolean\";\n}\n\n/**\n * Value definition commons.\n */\nexport interface BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type?: string;\n\n    /**\n     * The description of the definition.\n     */\n    description?: string;\n}\n\n/**\n * Possible types of unboxed literal values carried by [[Definition]].\n */\nexport type LiteralValue = string | number | boolean;\n\n/**\n * Boxed definition without type.\n */\nexport interface BoxedAnyDefinition extends BaseValueDefinition {\n    /**\n     * The value of the definition.\n     */\n    value: LiteralValue | JsonExpr;\n}\n\n/**\n * A boxed boolean value definition.\n */\nexport interface BoxedBooleanDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"boolean\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<boolean>;\n}\n\n/**\n * A boxed numerical value definition.\n */\nexport interface BoxedNumericDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"number\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<number>;\n}\n\n/**\n * A boxed string value definition.\n */\nexport interface BoxedStringDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"string\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed color value definition.\n */\nexport interface BoxedColorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"color\";\n\n    /**\n     * The value of the definition.\n     */\n    value: DynamicProperty<string>;\n}\n\n/**\n * A boxed selector value definition.\n */\nexport interface BoxedSelectorDefinition extends BaseValueDefinition {\n    /**\n     * The type of the definition.\n     */\n    type: \"selector\";\n\n    /**\n     * The value of the definition.\n     *\n     * See [[BaseStyle.when]].\n     */\n    value: string | JsonExpr;\n}\n\n/**\n * A boxed value definition.\n */\nexport type BoxedDefinition =\n    | BoxedAnyDefinition\n    | BoxedBooleanDefinition\n    | BoxedNumericDefinition\n    | BoxedStringDefinition\n    | BoxedColorDefinition\n    | BoxedSelectorDefinition;\n\n/**\n * Possible values for `definitions` element of [Theme].\n */\nexport type Definition = LiteralValue | JsonExpr | BoxedDefinition | StyleDeclaration;\n\n/**\n * An array of [[Definition]]s.\n */\nexport interface Definitions {\n    [name: string]: Definition;\n}\n\n/**\n * Base [StyleSelector] attributes required to match [Style] object against given feature.\n *\n * Contains [Style]'s members related to feature matching in [[StyleSetEvaluator]].\n */\nexport interface StyleSelector {\n    /**\n     * Condition that is applied to feature properties to check if given [[Style]] this feature\n     * should emit geometry of this style.\n     *\n     * Conditions are defined using [[Array]]s describing literals, built-in symbols and function\n     * calls:\n     *  - `[\"has\", string]` returns `true` if the given property exists.\n     *  - `[\"get\", string]` returns the value of the given feature property with the given name.\n     *  - `[\"all\", expressions...]` returns `true` if all the sub expressions evaluate to true.\n     *  - `[\"any\", expressions...]` returns `true` if any sub expression evaluates to true.\n     *  - `[\"in\", expression, [literals...]]` returns `true` if the result of evaluating the first\n     *    expression is included in the given `Array` of literals.\n     *  - `[\"!\", expression]` returns `false` if the sub expression evaluates to `true`.\n     *  - `[\"<\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than the result of evaluating the second expression.\n     *  - `[\">\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than the result of evaluating the second expression.\n     *  - `[\"<=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is less than or equal the result of evaluating the second expression.\n     *  - `[\">=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is greater than or equal the result of evaluating the second expression.\n     *  - `[\"==\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is equal the result of evaluating the second expression.\n     *  - `[\"!=\", expression, expression]` returns `true` if the result of evaluating the first\n     *    expression is not equal to the result of evaluating the second expression.\n     *  - `[\"length\", expression]` returns the length of the given expression if it evaluates to\n     *    a `string` or an `Array`; otherwise, returns `undefined`.\n     *  - `[\"~=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression contains the `string` obtained from the\n     *    second expression; otherwise, returns `undefined`.\n     *  - `[\"^=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression starts with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     *  - `[\"$=\", expression, expression]` if the expressions evaluate to `string`, returns `true`\n     *    if the `string` obtained from the first expression ends with the `string` obtained from\n     *    the second expression; otherwise, returns `undefined`.\n     */\n    when: string | JsonExpr;\n\n    /**\n     * The layer containing the carto features processed by this style rule.\n     */\n    layer?: string;\n\n    /**\n     * Optional. If `true`, no more matching styles will be evaluated.\n     */\n    final?: boolean;\n}\n\nexport type JsonExprReference = [\"ref\", string];\n\n/**\n * Checks if the given value is a reference to a definition.\n *\n * @param value The value of a technique property.\n */\nexport function isJsonExprReference(value: any): value is JsonExprReference {\n    return (\n        Array.isArray(value) &&\n        value.length === 2 &&\n        value[0] === \"ref\" &&\n        typeof value[1] === \"string\"\n    );\n}\n\n/**\n * Like [[StyleDeclaration]], but without [[Reference]] type.\n */\nexport type ResolvedStyleDeclaration = Style & StyleSelector;\n\n/**\n * Like [[StyleSet]], but without [[Reference]] type.\n */\nexport type ResolvedStyleSet = ResolvedStyleDeclaration[];\n\n/**\n * Compound type that merges all raw [Style] with selector arguments from [BaseSelector], optionally\n * a [[Reference]].\n */\nexport type StyleDeclaration = (Style & StyleSelector) | JsonExpr;\n\nexport function isActualSelectorDefinition(def: Definition): def is Style & StyleSelector {\n    const styleDef = def as StyleDeclaration;\n    return (\n        typeof styleDef === \"object\" &&\n        styleDef !== null &&\n        !Array.isArray(styleDef) &&\n        typeof styleDef.technique === \"string\"\n    );\n}\n\n/**\n * An array of [[StyleSelector]]s that are used together to define how a [[DataSource]] should be\n * rendered. `StyleSet`s are applied to sources providing vector tiles via their method\n * `setStyleSet`. This is also handle internally when a whole theme is passed to a [[MapView]] via\n * `mapview.theme`.\n */\nexport type StyleSet = StyleDeclaration[];\n\n/**\n * The object that defines what way an item of a [[DataSource]] should be decoded to assemble a\n * tile. [[Style]] is describing which features are shown on a map and in what way they are being\n * shown.\n */\nexport interface BaseStyle {\n    /**\n     * Human readable description.\n     */\n    description?: string;\n\n    /**\n     * The style set referenced by this styling rule.\n     */\n    styleSet?: string;\n\n    /**\n     * The category of this style.\n     */\n    category?: string | JsonExpr;\n\n    /**\n     * Technique name. See the classes extending from this class to determine what possible\n     * techniques are possible, includes `\"line\"`, `\"fill\"`, `\"solid-line\"`, `\"extruded-line\"`,\n     * `\"extruded-polygon\"`, `\"text\"`, `\"none\"`.\n     */\n    technique?: string;\n\n    /**\n     * Specify `renderOrder` of value.\n     *\n     * @default If not specified in style file, `renderOrder` will be assigned with monotonically\n     * increasing values according to style position in file.\n     */\n    renderOrder?: number | JsonExpr;\n\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number | JsonExpr;\n\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number | JsonExpr;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this style creates. Default is\n     * `false`.\n     */\n    transient?: boolean;\n\n    /**\n     * Optional: If `true`, the objects with matching `when` statement will be printed to the\n     * console.\n     */\n    debug?: boolean;\n\n    // TODO: Make pixel units default.\n    /**\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     *\n     * @deprecated use \"string encoded numerals\" as documented in TODO, wher eis the doc ?\n     */\n    metricUnit?: \"Meter\" | \"Pixel\";\n\n    /**\n     * XYZ defines the property to display as text label of a feature in the styles.\n     */\n    labelProperty?: string;\n}\n\n/**\n *\n * @defaultSnippets [\n *     {\n *         \"label\": \"New solid-line\",\n *         \"description\": \"Add a new 'solid-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"secondaryColor\": \"#$4ddd\",\n *                 \"secondaryWidth\": \"^${5:2}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New dashed-line\",\n *         \"description\": \"Add a new 'dashed-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"solid-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\",\n *                 \"gapSize\": \"^${4:10}\",\n *                 \"dashSize\": \"^${5:10}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New fill\",\n *         \"description\": \"Add a new 'fill' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"fill\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:0}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New text\",\n *         \"description\": \"Add a new 'text' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"text\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New labeled-icon\",\n *         \"description\": \"Add a new 'labeled-icon' marker styling\",\n *         \"body\": {\n *             \"technique\": \"labeled-icon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line-marker\",\n *         \"description\": \"Add a new 'line-marker' marker styling\",\n *         \"body\": {\n *             \"technique\": \"line-marker\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"size\": \"^${2:24}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"backgroundSize\": \"^${4:32}\",\n *                 \"backgroundColor\": \"#${5:aaa}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New line\",\n *         \"description\": \"Add a new 'line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New segments\",\n *         \"description\": \"Add a new 'segments' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"segments\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"lineWidth\": \"^${3:1}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New standard\",\n *         \"description\": \"Add a new 'standard' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"standard\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-line\",\n *         \"description\": \"Add a new 'extruded-line' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-line\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"shading\": \"${2:standard}\",\n *                 \"color\": \"#${3:fff}\",\n *                 \"lineWidth\": \"^${4:1}\",\n *                 \"caps\": \"${5:Circle}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New extruded-polygon\",\n *         \"description\": \"Add a new 'extruded-polygon' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"extruded-polygon\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"roughness\": \"^${3:0.5}\",\n *                 \"metalness\": \"^${4:0.5}\",\n *                 \"emissive\": \"#${5:c44}\",\n *                 \"emissiveIntensity\": \"^${6:0.8}\",\n *                 \"lineWidth\": \"^${7:1}\",\n *                 \"lineColor\": \"#${8:c0f}\",\n *                 \"defaultHeight\": \"^${9:20}\",\n *                 \"animateExtrusion\": \"^${10:true}\",\n *                 \"animateExtrusionDuration\": \"^${11:300}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New none\",\n *         \"description\": \"Add a new 'none' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"none\",\n *             \"when\": \"$1\",\n *             \"attr\": {}\n *         }\n *     },\n *     {\n *         \"label\": \"New shader\",\n *         \"description\": \"Add a new 'shader' Styling Rule\",\n *         \"body\": {\n *             \"technique\": \"shader\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"primitive\": \"${2:mesh}\",\n *                 \"params\": {}\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New squares\",\n *         \"description\": \"Add a new 'squares' point styling\",\n *         \"body\": {\n *             \"technique\": \"squares\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     },\n *     {\n *         \"label\": \"New circles\",\n *         \"description\": \"Add a new 'circles' point styling\",\n *         \"body\": {\n *             \"technique\": \"circles\",\n *             \"when\": \"$1\",\n *             \"attr\": {\n *                 \"color\": \"#${2:fff}\",\n *                 \"size\": \"^${3:32}\",\n *                 \"texture\": \"${4:url}\",\n *                 \"enablePicking\": \"^${5:true}\"\n *             }\n *         }\n *     }\n * ]\n *\n */\nexport type AllStyles =\n    | SquaresStyle\n    | CirclesStyle\n    | PoiStyle\n    | LineMarkerStyle\n    | LineStyle\n    | SegmentsStyle\n    | SolidLineStyle\n    | LabelRejectionLineStyle\n    | FillStyle\n    | StandardStyle\n    | BasicExtrudedLineStyle\n    | StandardExtrudedLineStyle\n    | ExtrudedPolygonStyle\n    | ShaderStyle\n    | TerrainStyle\n    | TextTechniqueStyle\n    | NoneStyle;\n\nexport type Style = AllStyles;\n/**\n * A dictionary of [[StyleSet]]s.\n */\nexport interface Styles {\n    [styleSetName: string]: StyleSet;\n}\n\n/**\n * A reference to a style definition.\n *\n * Use as value `attrs` to reference value from `definitions`.\n *\n * Example of usage:\n * ```json\n * {\n *   \"definitions\": {\n *     \"roadColor\": { \"type\": \"color\", \"value\": \"#f00\" }\n *   },\n *   \"styles\": { \"tilezen\": [\n *      {\n *       \"when\": \"kind == 'road\",\n *       \"technique\": \"solid-line\",\n *       \"attr\": {\n *         \"lineColor\": { \"$ref\": \"roadColor\" }\n *       }\n *     }\n *   ] }\n * }\n * ```\n */\n\n/**\n * The attributes of a technique.\n */\nexport type Attr<T> = { [P in keyof T]?: T[P] | JsonExpr };\n\n/**\n * Render feature as set of squares rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface SquaresStyle extends BaseStyle {\n    technique: \"squares\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as set of circles rendered in screen space.\n *\n * @see [[PointTechniqueParams]].\n */\nexport interface CirclesStyle extends BaseStyle {\n    technique: \"circles\";\n    attr?: Attr<PointTechniqueParams>;\n}\n\n/**\n * Render feature as POIs (icons and text) rendered in screen space.\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface PoiStyle extends BaseStyle {\n    technique: \"labeled-icon\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line markers, which is a recurring marker along a line (usually road).\n *\n * @see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerStyle extends BaseStyle {\n    technique: \"line-marker\";\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as line.\n */\nexport interface LineStyle extends BaseStyle {\n    technique: \"line\";\n    secondaryRenderOrder?: number;\n    secondaryCategory?: string;\n    attr?: Attr<MarkerTechniqueParams>;\n}\n\n/**\n * Render feature as segments.\n */\nexport interface SegmentsStyle extends BaseStyle {\n    technique: \"segments\";\n    attr?: Attr<SegmentsTechniqueParams>;\n}\n\nexport interface SolidLineStyle extends BaseStyle {\n    technique: \"solid-line\" | \"dashed-line\";\n    secondaryRenderOrder?: number;\n    secondaryCategory?: string;\n    attr?: Attr<SolidLineTechniqueParams>;\n}\n\nexport interface LabelRejectionLineStyle extends BaseStyle {\n    technique: \"label-rejection-line\";\n    attr?: Attr<BaseTechniqueParams>;\n}\n\nexport interface FillStyle extends BaseStyle {\n    technique: \"fill\";\n    attr?: Attr<FillTechniqueParams>;\n}\n\nexport interface StandardStyle extends BaseStyle {\n    technique: \"standard\";\n    attr?: Attr<StandardTechniqueParams>;\n}\n\nexport interface TerrainStyle extends BaseStyle {\n    technique: \"terrain\";\n    attr?: Attr<TerrainTechniqueParams>;\n}\n\nexport interface BasicExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading?: \"basic\";\n    attr?: Attr<BasicExtrudedLineTechniqueParams>;\n}\n\nexport interface StandardExtrudedLineStyle extends BaseStyle {\n    technique: \"extruded-line\";\n    shading: \"standard\";\n    attr?: Attr<StandardExtrudedLineTechniqueParams>;\n}\n\n/**\n * Style used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonStyle extends BaseStyle {\n    technique: \"extruded-polygon\";\n    attr?: Attr<ExtrudedPolygonTechniqueParams>;\n}\n\nexport interface ShaderStyle extends BaseStyle {\n    technique: \"shader\";\n    attr?: Attr<ShaderTechniqueParams>;\n}\n\nexport interface TextTechniqueStyle extends BaseStyle {\n    technique: \"text\";\n    attr?: Attr<TextTechniqueParams>;\n}\n\nexport interface NoneStyle extends BaseStyle {\n    technique: \"none\";\n    attr?: {\n        [name: string]: any;\n    };\n}\n\n/**\n * Possible lights used for light the map.\n */\nexport type Light = AmbientLight | DirectionalLight;\n\nexport interface BaseLight {\n    type: string;\n    name: string;\n}\n\n/**\n * Light type: ambient.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Ambient Light\",\n *         \"description\": \"Adds a new Ambient Light\",\n *         \"body\": {\n *             \"type\": \"ambient\",\n *             \"name\": \"${1:ambient light}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\"\n *         }\n *     }\n * ]\n */\nexport interface AmbientLight extends BaseLight {\n    type: \"ambient\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity?: number;\n}\n\n/**\n * Light type: directional.\n * @defaultSnippets [\n *     {\n *         \"label\": \"New Directional Light\",\n *         \"description\": \"Adds a new Directional Light\",\n *         \"body\": {\n *             \"type\": \"directional\",\n *             \"name\": \"${1:directional-light$:1}\",\n *             \"color\": \"#${2:fff}\",\n *             \"intensity\": \"^${3:1}\",\n *             \"direction\": {\n *                 \"x\": \"^${4:1}\",\n *                 \"y\": \"^${5:0}\",\n *                 \"z\": \"^${6:0}\"\n *             }\n *         }\n *     }\n * ]\n */\nexport interface DirectionalLight extends BaseLight {\n    type: \"directional\";\n    /**\n     * @format color-hex\n     */\n    color: string;\n    intensity: number;\n    direction: Vector3Like;\n    castShadow?: boolean;\n}\n\n/**\n * Various text styles used with labels and texts.\n */\nexport interface TextStyleDefinition {\n    name?: string;\n    fontCatalogName?: string;\n\n    fontName?: string;\n    size?: number;\n    backgroundSize?: number;\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    rotation?: number;\n    /**\n     * @format color-hex\n     */\n    color?: string;\n    /**\n     * @format color-hex\n     */\n    backgroundColor?: string;\n    opacity?: number;\n    backgroundOpacity?: number;\n\n    tracking?: number;\n    leading?: number;\n    maxLines?: number;\n    lineWidth?: number;\n    canvasRotation?: number;\n    lineRotation?: number;\n    wrappingMode?: \"None\" | \"Character\" | \"Word\";\n    hAlignment?: \"Left\" | \"Center\" | \"Right\";\n    vAlignment?: \"Above\" | \"Center\" | \"Below\";\n}\n\n/**\n * Interface that defines a procedural gradient sky.\n */\nexport interface GradientSky {\n    /** Sky type. */\n    type: \"gradient\";\n    /**\n     * Color of the upper part of the gradient.\n     * @format color-hex\n     */\n    topColor: string;\n    /**\n     * Color of bottom part of the gradient.\n     * @format color-hex\n     */\n    bottomColor: string;\n    /**\n     * Color of the ground plane.\n     * @format color-hex\n     */\n    groundColor: string;\n    /** Texture's gradient power. */\n    monomialPower?: number;\n}\n\n/**\n * Interface that defines a cubemap sky.\n */\nexport interface CubemapSky {\n    /** Sky type. */\n    type: \"cubemap\";\n    /** Positive X cube map face. */\n    positiveX: string;\n    /** Negative X cube map face. */\n    negativeX: string;\n    /** Positive Y cube map face. */\n    positiveY: string;\n    /** Negative Y cube map face. */\n    negativeY: string;\n    /** Positive Z cube map face. */\n    positiveZ: string;\n    /** Negative Z cube map face. */\n    negativeZ: string;\n}\n\n/**\n * Interface that defines the options to configure the sky.\n */\nexport type Sky = GradientSky | CubemapSky;\n\n/**\n * Interface that defines the options to configure fog.\n */\nexport interface Fog {\n    /** Fog's color. */\n    color: string;\n    /** Distance ratio to far plane at which the linear fog begins. */\n    startRatio: number;\n}\n\n/**\n * Define an image (e.g. icon).\n */\nexport interface ImageDefinition {\n    /** Url to load content from. */\n    url: string;\n    /** `true` to start loading at init tile, `false` to lazily wait until required. */\n    preload: boolean;\n    /** Url of JSON file containing the texture atlas */\n    atlas?: string;\n}\n\nexport interface ImageDefinitions {\n    /** Name of Image. */\n    [name: string]: ImageDefinition;\n}\n\n/**\n * Can be used to create a texture atlas.\n */\nexport interface ImageTexture {\n    /** Name of ImageTexture. Used to reference texture in the styles. */\n    name: string;\n    /** Name of ImageDefinition to use. */\n    image: string;\n    /** Origin of image, defaults to \"topleft\" */\n    origin?: string;\n    /** Specify sub-region: Defaults to 0. */\n    xOffset?: number;\n    /** Specify sub-region: Defaults to 0. */\n    yOffset?: number;\n    /** Specify sub-region:  Defaults to 0, meaning width is taken from loaded image. */\n    width?: number;\n    /** Specify sub-region:  Defaults to 0, meaning height is taken from loaded image. */\n    height?: number;\n    /** Defaults to false. */\n    flipH?: boolean;\n    /** Defaults to false. */\n    flipV?: boolean;\n    /** Defaults to 1. */\n    opacity?: number;\n}\n\n/**\n * Definition for a [[PoiTable]] reference as part of the [[Theme]] object.\n */\nexport interface PoiTableRef {\n    /** Required name of the [[PoiTable]] for later reference. */\n    name: string;\n    /**\n     * Required URL from where to load [[PoiTable]].\n     *\n     * Should refer to JSON that is matched [[PoiTableDef]] interface.\n     */\n    url: string;\n    /**\n     * If set to `true`, the list of values in the field \"altNames\" will be used as names for this\n     * POI.\n     */\n    useAltNamesForKey: boolean;\n}\n\n/**\n * Interface for the JSON description of the [[PoiTable]]. It is being implemented in [[PoiTable]].\n */\nexport interface PoiTableDef {\n    /** Name of the `PoiTable`. Must be unique. */\n    name?: string;\n    /**\n     * Stores the list of [[PoiTableEntry]]s.\n     */\n    poiList?: PoiTableEntryDef[];\n}\n\n/**\n * Interface for the JSON description of the [[PoiTableEntry]]. The interface is being implemented\n * as [[PoiTableEntry]].\n */\nexport interface PoiTableEntryDef {\n    /** Default name of the POI as the key for looking it up. */\n    name?: string;\n    /** Alternative names of the POI. */\n    altNames?: string[];\n    /** Visibility of the POI. If `false`, the POI will not be rendered. */\n    visible?: boolean;\n    /** Name of the icon, defined in the the texture atlases. */\n    iconName?: string;\n    /** Stacking mode of the POI. For future use. */\n    stackMode?: string;\n    /**\n     * Priority of the POI to select the visible set in case there are more POIs than can be\n     * handled.\n     */\n    priority?: number;\n    /** Minimum zoom level to render the icon on. */\n    iconMinLevel?: number;\n    /** Maximum zoom level to render the icon on. */\n    iconMaxLevel?: number;\n    /** Minimum zoom level to render the text label on. */\n    textMinLevel?: number;\n    /** Maximum zoom level to render the text label on. */\n    textMaxLevel?: number;\n}\n\n/**\n * Fonts used for all text related rendering.\n */\nexport interface FontCatalogConfig {\n    url: string;\n    name: string;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BaseTechniqueParams,\n    BasicExtrudedLineTechniqueParams,\n    ExtrudedPolygonTechniqueParams,\n    FillTechniqueParams,\n    isTextureBuffer,\n    LineTechniqueParams,\n    MarkerTechniqueParams,\n    PointTechniqueParams,\n    PolygonalTechniqueParams,\n    SegmentsTechniqueParams,\n    ShaderTechniqueParams,\n    SolidLineTechniqueParams,\n    StandardExtrudedLineTechniqueParams,\n    StandardTechniqueParams,\n    TerrainTechniqueParams,\n    TextTechniqueParams,\n    TextureCoordinateType\n} from \"./TechniqueParams\";\n\nimport { Expr, JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\nimport {\n    AttrScope,\n    mergeTechniqueDescriptor,\n    TechniqueDescriptor,\n    TechniqueDescriptorRegistry\n} from \"./TechniqueDescriptor\";\n/**\n * Names of the supported texture properties.\n */\nexport const TEXTURE_PROPERTY_KEYS = [\n    \"map\",\n    \"normalMap\",\n    \"displacementMap\",\n    \"roughnessMap\",\n    \"emissiveMap\",\n    \"alphaMap\",\n    \"metalnessMap\",\n    \"bumpMap\"\n];\n\n/**\n * Names of the properties controlling transparency.\n */\nexport const TRANSPARENCY_PROPERTY_KEYS = [\"opacity\", \"transparent\"];\n\n// TODO: Can be removed, when all when interpolators are implemented as [[Expr]]s\nexport type RemoveInterpolatedPropDef<T> = T | InterpolatedPropertyDefinition<any> extends T\n    ? Exclude<T, InterpolatedPropertyDefinition<any>>\n    : T;\nexport type RemoveJsonExpr<T> = T | JsonExpr extends T ? Exclude<T, JsonExpr> : T;\n\n/**\n * Make runtime representation of technique attributes from JSON-compatible typings.\n *\n * Translates\n *  - InterpolatedPropertyDefinition -> InterpolatedProperty\n *  - JsonExpr -> Expr\n */\nexport type MakeTechniqueAttrs<T> = {\n    [P in keyof T]: T[P] | JsonExpr extends T[P]\n        ? RemoveInterpolatedPropDef<RemoveJsonExpr<T[P]>> | Expr\n        : T[P];\n};\n\nexport const techniqueDescriptors: TechniqueDescriptorRegistry = {};\n\nexport const baseTechniqueParamsDescriptor: TechniqueDescriptor<BaseTechniqueParams> = {\n    // TODO: Choose which techniques should support color with transparency.\n    // For now we chosen all, but it maybe not suitable for text or line marker techniques.\n    attrTransparencyColor: \"color\",\n    attrScopes: {\n        renderOrder: AttrScope.TechniqueGeometry,\n        enabled: AttrScope.FeatureGeometry,\n        kind: AttrScope.TechniqueGeometry,\n        transient: AttrScope.TechniqueGeometry,\n        fadeFar: AttrScope.TechniqueRendering,\n        fadeNear: AttrScope.TechniqueRendering\n    }\n};\n\nexport const pointTechniquePropTypes = mergeTechniqueDescriptor<PointTechniqueParams>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            texture: AttrScope.TechniqueGeometry,\n            enablePicking: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueGeometry\n        }\n    }\n);\n\n/**\n * Runtime representation of [[SquaresStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface SquaresTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"squares\";\n}\n\nexport const squaresTechniquePropTypes = mergeTechniqueDescriptor<SquaresTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.squares = squaresTechniquePropTypes;\n\n/**\n * Runtime representation of [[CirclesStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[PointTechniqueParams]].\n */\nexport interface CirclesTechnique extends MakeTechniqueAttrs<PointTechniqueParams> {\n    name: \"circles\";\n}\n\nexport const circlesTechniquePropTypes = mergeTechniqueDescriptor<CirclesTechnique>(\n    baseTechniqueParamsDescriptor,\n    pointTechniquePropTypes\n);\ntechniqueDescriptors.circles = circlesTechniquePropTypes;\n\n/**\n * Runtime representation of [[PoiStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface PoiTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"labeled-icon\";\n}\n\n/**\n * Runtime representation of [[LineMarkerStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[MarkerTechniqueParams]].\n */\nexport interface LineMarkerTechnique extends MakeTechniqueAttrs<MarkerTechniqueParams> {\n    name: \"line-marker\";\n}\n\nconst lineMarkerTechniquePropTypes = mergeTechniqueDescriptor<LineMarkerTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n            priority: AttrScope.TechniqueGeometry,\n            textMinZoomLevel: AttrScope.TechniqueGeometry,\n            textMaxZoomLevel: AttrScope.TechniqueGeometry,\n            iconMinZoomLevel: AttrScope.TechniqueGeometry,\n            iconMaxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            textMayOverlap: AttrScope.TechniqueGeometry,\n            iconMayOverlap: AttrScope.TechniqueGeometry,\n            textReserveSpace: AttrScope.TechniqueGeometry,\n            iconReserveSpace: AttrScope.TechniqueGeometry,\n            renderTextDuringMovements: AttrScope.TechniqueGeometry,\n            alwaysOnTop: AttrScope.TechniqueGeometry,\n            textIsOptional: AttrScope.TechniqueGeometry,\n            showOnMap: AttrScope.TechniqueGeometry,\n            stackMode: AttrScope.TechniqueGeometry,\n            minDistance: AttrScope.TechniqueGeometry,\n            iconIsOptional: AttrScope.TechniqueGeometry,\n            iconFadeTime: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            iconXOffset: AttrScope.TechniqueGeometry,\n            iconYOffset: AttrScope.TechniqueGeometry,\n            iconScale: AttrScope.TechniqueGeometry,\n            screenHeight: AttrScope.TechniqueGeometry,\n            screenWidth: AttrScope.TechniqueGeometry,\n            poiTable: AttrScope.TechniqueGeometry,\n            poiName: AttrScope.FeatureGeometry,\n            poiNameField: AttrScope.TechniqueGeometry,\n            imageTexture: AttrScope.FeatureGeometry,\n            imageTextureField: AttrScope.TechniqueGeometry,\n            imageTexturePrefix: AttrScope.TechniqueGeometry,\n            imageTexturePostfix: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"line-marker\"] = lineMarkerTechniquePropTypes;\ntechniqueDescriptors[\"labeled-icon\"] = lineMarkerTechniquePropTypes;\n\n/**\n * Runtime representation of [[SegmentsStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SegmentsTechniqueParams]].\n */\nexport interface SegmentsTechnique extends MakeTechniqueAttrs<SegmentsTechniqueParams> {\n    name: \"segments\";\n}\n\nconst polygonalTechniqueDescriptor: TechniqueDescriptor<PolygonalTechniqueParams> = {\n    attrScopes: {\n        polygonOffset: AttrScope.TechniqueRendering,\n        polygonOffsetFactor: AttrScope.TechniqueRendering,\n        polygonOffsetUnits: AttrScope.TechniqueRendering,\n        lineColor: AttrScope.TechniqueRendering,\n        lineFadeFar: AttrScope.TechniqueRendering,\n        lineFadeNear: AttrScope.TechniqueRendering\n    }\n};\n/**\n * Runtime representation of [[BasicExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[BasicExtrudedLineTechniqueParams]].\n */\nexport interface BasicExtrudedLineTechnique\n    extends MakeTechniqueAttrs<BasicExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[StandardExtrudedLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[StandardExtrudedLineTechniqueParams]].\n */\nexport interface StandardExtrudedLineTechnique\n    extends MakeTechniqueAttrs<StandardExtrudedLineTechniqueParams> {\n    name: \"extruded-line\";\n}\n\n/**\n * Runtime representation of [[SolidLineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[SolidLineTechniqueParams]].\n */\nexport interface SolidLineTechnique extends MakeTechniqueAttrs<SolidLineTechniqueParams> {\n    name: \"solid-line\" | \"dashed-line\";\n}\n\nexport const solidLineTechniqueDescriptor = mergeTechniqueDescriptor<SolidLineTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            clipping: AttrScope.TechniqueGeometry,\n            secondaryRenderOrder: AttrScope.TechniqueGeometry,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            secondaryWidth: AttrScope.TechniqueRendering,\n            secondaryColor: AttrScope.TechniqueRendering,\n            dashSize: AttrScope.TechniqueRendering,\n            gapSize: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"solid-line\"] = solidLineTechniqueDescriptor;\n// TODO: Remove deprecated \"dashed-line\" support in future releases.\ntechniqueDescriptors[\"dashed-line\"] = solidLineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[LineStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[LineTechniqueParams]].\n */\nexport interface LineTechnique extends MakeTechniqueAttrs<LineTechniqueParams> {\n    name: \"line\";\n}\n\nexport const lineTechniqueDescriptor = mergeTechniqueDescriptor<LineTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            // TODO, check, which are really dynamic !\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.FeatureGeometry\n        }\n    }\n);\n\ntechniqueDescriptors.line = lineTechniqueDescriptor;\n\n/**\n * Runtime representation of [[FillStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[FillTechniqueParams]].\n */\nexport interface FillTechnique extends MakeTechniqueAttrs<FillTechniqueParams> {\n    name: \"fill\";\n}\n\nconst fillTechniqueDescriptor = mergeTechniqueDescriptor<FillTechnique>(\n    baseTechniqueParamsDescriptor,\n    polygonalTechniqueDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.fill = fillTechniqueDescriptor;\n\n/**\n * Technique used to render a mesh geometry.\n * For technique parameters see [[StandardTechniqueParams]].\n */\nexport interface StandardTechnique extends MakeTechniqueAttrs<StandardTechniqueParams> {\n    name: \"standard\";\n}\nconst standardTechniqueDescriptor = mergeTechniqueDescriptor<StandardTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            color: AttrScope.FeatureGeometry,\n            vertexColors: AttrScope.FeatureGeometry,\n            wireframe: AttrScope.TechniqueRendering,\n            roughness: AttrScope.TechniqueRendering,\n            metalness: AttrScope.TechniqueRendering,\n            alphaTest: AttrScope.TechniqueRendering,\n            depthTest: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            emissive: AttrScope.TechniqueRendering,\n            emissiveIntensity: AttrScope.TechniqueRendering,\n            refractionRatio: AttrScope.TechniqueRendering,\n            map: AttrScope.TechniqueGeometry,\n            mapProperties: AttrScope.TechniqueGeometry,\n            normalMap: AttrScope.TechniqueGeometry,\n            normalMapProperties: AttrScope.TechniqueGeometry,\n            displacementMap: AttrScope.TechniqueGeometry,\n            displacementMapProperties: AttrScope.TechniqueGeometry,\n            roughnessMap: AttrScope.TechniqueGeometry,\n            roughnessMapProperties: AttrScope.TechniqueGeometry,\n            emissiveMap: AttrScope.TechniqueGeometry,\n            emissiveMapProperties: AttrScope.TechniqueGeometry,\n            bumpMap: AttrScope.TechniqueGeometry,\n            bumpMapProperties: AttrScope.TechniqueGeometry,\n            metalnessMap: AttrScope.TechniqueGeometry,\n            metalnessMapProperties: AttrScope.TechniqueGeometry,\n            alphaMap: AttrScope.TechniqueGeometry,\n            alphaMapProperties: AttrScope.TechniqueGeometry\n        }\n    }\n);\ntechniqueDescriptors.standard = standardTechniqueDescriptor;\n\n/**\n * Runtime representation of [[ExtrudedPolygonStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[ExtrudedPolygonTechniqueParams]].\n */\nexport interface ExtrudedPolygonTechnique\n    extends MakeTechniqueAttrs<ExtrudedPolygonTechniqueParams> {\n    name: \"extruded-polygon\";\n}\n\nconst extrudedPolygonTechniqueDescriptor = mergeTechniqueDescriptor<ExtrudedPolygonTechnique>(\n    baseTechniqueParamsDescriptor,\n    standardTechniqueDescriptor,\n    {\n        attrScopes: {\n            height: AttrScope.FeatureGeometry,\n            floorHeight: AttrScope.FeatureGeometry,\n            color: AttrScope.FeatureGeometry,\n            defaultColor: AttrScope.FeatureGeometry,\n            defaultHeight: AttrScope.FeatureGeometry,\n            constantHeight: AttrScope.FeatureGeometry,\n            boundaryWalls: AttrScope.FeatureGeometry,\n            footprint: AttrScope.FeatureGeometry,\n            maxSlope: AttrScope.FeatureGeometry,\n            enableDepthPrePass: AttrScope.TechniqueGeometry,\n            animateExtrusionDuration: AttrScope.TechniqueGeometry,\n            animateExtrusion: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            transparent: AttrScope.TechniqueRendering,\n            lineWidth: AttrScope.TechniqueRendering,\n            lineFadeNear: AttrScope.TechniqueRendering,\n            lineFadeFar: AttrScope.TechniqueRendering,\n            lineColorMix: AttrScope.TechniqueGeometry,\n            lineColor: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors[\"extruded-polygon\"] = extrudedPolygonTechniqueDescriptor;\n/**\n * Runtime representation of [[TextStyle]] as parsed by [[StyleSetEvaluator]].\n * For technique parameters see [[TextTechniqueParams]].\n */\nexport interface TextTechnique extends MakeTechniqueAttrs<TextTechniqueParams> {\n    name: \"text\";\n}\n\nconst textTechniqueDescriptor = mergeTechniqueDescriptor<TextTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            text: AttrScope.FeatureGeometry,\n            label: AttrScope.FeatureGeometry,\n            useAbbreviation: AttrScope.FeatureGeometry,\n            useIsoCode: AttrScope.FeatureGeometry,\n\n            minZoomLevel: AttrScope.TechniqueGeometry,\n            maxZoomLevel: AttrScope.TechniqueGeometry,\n            distanceScale: AttrScope.TechniqueGeometry,\n            mayOverlap: AttrScope.TechniqueGeometry,\n            reserveSpace: AttrScope.TechniqueGeometry,\n            textFadeTime: AttrScope.TechniqueGeometry,\n            xOffset: AttrScope.TechniqueGeometry,\n            yOffset: AttrScope.TechniqueGeometry,\n            style: AttrScope.TechniqueGeometry,\n            fontName: AttrScope.TechniqueGeometry,\n            fontStyle: AttrScope.TechniqueGeometry,\n            fontVariant: AttrScope.TechniqueGeometry,\n            rotation: AttrScope.TechniqueGeometry,\n            tracking: AttrScope.TechniqueGeometry,\n            leading: AttrScope.TechniqueGeometry,\n            maxLines: AttrScope.TechniqueGeometry,\n            lineWidth: AttrScope.TechniqueGeometry,\n            canvasRotation: AttrScope.TechniqueGeometry,\n            lineRotation: AttrScope.TechniqueGeometry,\n            wrappingMode: AttrScope.TechniqueGeometry,\n            hAlignment: AttrScope.TechniqueGeometry,\n            vAlignment: AttrScope.TechniqueGeometry,\n            backgroundColor: AttrScope.TechniqueRendering,\n            backgroundSize: AttrScope.TechniqueRendering,\n            backgroundOpacity: AttrScope.TechniqueRendering,\n            color: AttrScope.TechniqueRendering,\n            opacity: AttrScope.TechniqueRendering,\n            priority: AttrScope.TechniqueRendering,\n            size: AttrScope.TechniqueRendering\n        }\n    }\n);\ntechniqueDescriptors.text = textTechniqueDescriptor;\n\n/**\n * Special technique for user-defined shaders.\n * For technique parameters see [[ShaderTechniqueParams]].\n */\nexport interface ShaderTechnique extends MakeTechniqueAttrs<ShaderTechniqueParams> {\n    name: \"shader\";\n}\n\nconst shaderTechniqueDescriptor = mergeTechniqueDescriptor<ShaderTechnique>(\n    baseTechniqueParamsDescriptor,\n    {\n        attrScopes: {\n            primitive: AttrScope.TechniqueGeometry,\n            params: AttrScope.TechniqueRendering\n        }\n    }\n);\n\ntechniqueDescriptors.shader = shaderTechniqueDescriptor;\n\n/**\n * Technique used to render a terrain geometry with textures.\n * For technique parameters see [[TerrainTechniqueParams]].\n */\nexport interface TerrainTechnique extends MakeTechniqueAttrs<TerrainTechniqueParams> {\n    name: \"terrain\";\n}\n\n/**\n * Technique to avoid label rendering on top of certain line geometries.\n * For technique parameters see [[BaseTechniqueParams]].\n */\nexport interface LabelRejectionLineTechnique extends MakeTechniqueAttrs<BaseTechniqueParams> {\n    name: \"label-rejection-line\";\n}\n\n/**\n * Possible techniques that can be used to draw a geometry on the map.\n */\nexport type Technique =\n    | SquaresTechnique\n    | CirclesTechnique\n    | PoiTechnique\n    | LineMarkerTechnique\n    | LineTechnique\n    | SegmentsTechnique\n    | SolidLineTechnique\n    | FillTechnique\n    | StandardTechnique\n    | TerrainTechnique\n    | BasicExtrudedLineTechnique\n    | StandardExtrudedLineTechnique\n    | ExtrudedPolygonTechnique\n    | ShaderTechnique\n    | TextTechnique\n    | LabelRejectionLineTechnique;\n\n/**\n * Additional params used for optimized usage of `Techniques`.\n */\nexport interface IndexedTechniqueParams {\n    /**\n     * Optimization: Index into table in [[StyleSetEvaluator]] or in [[DecodedTile]].\n     * @hidden\n     */\n    _index: number;\n\n    /**\n     * Optimization: Unique [[Technique]] index of [[Style]] from which technique was derived.\n     * @hidden\n     */\n    _styleSetIndex: number;\n\n    /**\n     * The styleSet associated to this [[Technique]].\n     * @hidden\n     */\n    _styleSet?: string;\n\n    /**\n     * The category used to assign render orders to objects created using this [[Technique]].\n     * @hidden\n     */\n    _category?: string;\n\n    /**\n     * The category used to assign render orders to secondary objects\n     * created using this [[Technique]].\n     * @hidden\n     */\n    _secondaryCategory?: string;\n\n    /**\n     * `true` if any of the properties of this technique needs to access\n     * the feature's state.\n     *\n     * @hidden\n     */\n    _usesFeatureState?: boolean;\n\n    /**\n     * Last computed state derived from [[Technique.kind]].\n     */\n    _kindState?: boolean;\n}\n\n/**\n * For efficiency, [[StyleSetEvaluator]] returns [[Techniques]] additional params as defined in\n * [[IndexedTechniqueParams]].\n */\nexport type IndexedTechnique = Technique & IndexedTechniqueParams;\n\n/**\n * Type guard to check if an object is an instance of [[CirclesTechnique]].\n */\nexport function isCirclesTechnique(technique: Technique): technique is CirclesTechnique {\n    return technique.name === \"circles\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SquaresTechnique]].\n */\nexport function isSquaresTechnique(technique: Technique): technique is SquaresTechnique {\n    return technique.name === \"squares\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[PoiTechnique]].\n */\nexport function isPoiTechnique(technique: Technique): technique is PoiTechnique {\n    return technique.name === \"labeled-icon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineMarkerTechnique]].\n */\nexport function isLineMarkerTechnique(technique: Technique): technique is LineMarkerTechnique {\n    return technique.name === \"line-marker\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[LineTechnique]].\n */\nexport function isLineTechnique(technique: Technique): technique is LineTechnique {\n    return technique.name === \"line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]].\n */\nexport function isSolidLineTechnique(technique: Technique): technique is SolidLineTechnique {\n    return technique.name === \"solid-line\" || technique.name === \"dashed-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[SolidLineTechnique]] and is a kind that\n * has special dashes.\n * @note Lines with special dashes need line caps to render properly.\n */\nexport function isSpecialDashesLineTechnique(\n    technique: Technique\n): technique is SolidLineTechnique {\n    return (\n        (technique.name === \"solid-line\" || technique.name === \"dashed-line\") &&\n        technique.dashes !== undefined &&\n        technique.dashes !== \"Square\"\n    );\n}\n\n/**\n * Type guard to check if an object is an instance of [[SegmentsTechnique]].\n */\nexport function isSegmentsTechnique(technique: Technique): technique is SegmentsTechnique {\n    return technique.name === \"segments\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]]\n * or [[StandardExtrudedLineTechnique]].\n */\nexport function isExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique | StandardExtrudedLineTechnique {\n    return technique.name === \"extruded-line\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[BasicExtrudedLineTechnique]].\n */\nexport function isBasicExtrudedLineTechnique(\n    technique: Technique\n): technique is BasicExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"basic\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardExtrudedLineTechnique]].\n */\nexport function isStandardExtrudedLineTechnique(\n    technique: Technique\n): technique is StandardExtrudedLineTechnique {\n    return isExtrudedLineTechnique(technique) && technique.shading === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[FillTechnique]].\n */\nexport function isFillTechnique(technique: Technique): technique is FillTechnique {\n    return technique.name === \"fill\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ExtrudedPolygonTechnique]].\n */\nexport function isExtrudedPolygonTechnique(\n    technique: Technique\n): technique is ExtrudedPolygonTechnique {\n    return technique.name === \"extruded-polygon\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[StandardTechnique]].\n */\nexport function isStandardTechnique(technique: Technique): technique is StandardTechnique {\n    return technique.name === \"standard\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TerrainTechnique]].\n */\nexport function isTerrainTechnique(technique: Technique): technique is TerrainTechnique {\n    return technique.name === \"terrain\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[TextTechnique]].\n */\nexport function isTextTechnique(technique: Technique): technique is TextTechnique {\n    return technique.name === \"text\";\n}\n\n/**\n * Type guard to check if an object is an instance of [[ShaderTechnique]].\n */\nexport function isShaderTechnique(technique: Technique): technique is ShaderTechnique {\n    return technique.name === \"shader\";\n}\n\nexport function isLabelRejectionLineTechnique(\n    technique: Technique\n): technique is LabelRejectionLineTechnique {\n    return technique.name === \"label-rejection-line\";\n}\n\n/**\n * Check if vertex normals should be generated for this technique (if no normals are in the data).\n * @param technique Technique to check.\n */\nexport function needsVertexNormals(technique: Technique): boolean {\n    return (\n        isFillTechnique(technique) ||\n        isStandardTechnique(technique) ||\n        isTerrainTechnique(technique) ||\n        isStandardExtrudedLineTechnique(technique)\n    );\n}\n\n/**\n * Get the texture coordinate type if the technique supports it.\n */\nexport function textureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n    if (isStandardTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isExtrudedPolygonTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else if (isTerrainTechnique(technique)) {\n        return technique.textureCoordinateType;\n    } else {\n        return undefined;\n    }\n}\n\n/**\n * Add all the buffers of the technique to the transfer list.\n */\nexport function addBuffersToTransferList(technique: Technique, transferList: ArrayBuffer[]) {\n    if (\n        isStandardTechnique(technique) ||\n        isExtrudedPolygonTechnique(technique) ||\n        isTerrainTechnique(technique)\n    ) {\n        for (const texturePropertyKey of TEXTURE_PROPERTY_KEYS) {\n            const textureProperty = (technique as any)[texturePropertyKey];\n            if (isTextureBuffer(textureProperty)) {\n                if (textureProperty.buffer instanceof ArrayBuffer) {\n                    transferList.push(textureProperty.buffer);\n                }\n            }\n        }\n    }\n}\n\n/**\n * Compose full texture name for given image name with technique specified.\n * Some techniques allows to add prefix/postfix to icons names specified, this\n * function uses technique information to create fully qualified texture name.\n * @param imageName base name of the marker icon.\n * @param technique the technique describing POI or line marker.\n * @returns fully qualified texture name for loading from atlas (without extension).\n */\nexport function composeTechniqueTextureName(\n    imageName: string,\n    technique: PoiTechnique | LineMarkerTechnique\n): string {\n    let textureName = imageName;\n    if (typeof technique.imageTexturePrefix === \"string\") {\n        textureName = technique.imageTexturePrefix + textureName;\n    }\n    if (typeof technique.imageTexturePostfix === \"string\") {\n        textureName = textureName + technique.imageTexturePostfix;\n    }\n    return textureName;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/StyleSetEvaluator\";\nexport * from \"./lib/Extruder\";\nexport * from \"./lib/IMeshBuffers\";\nexport * from \"./lib/Outliner\";\nexport * from \"./lib/Expr\";\nexport * from \"./lib/ThreeBufferUtils\";\nexport * from \"./lib/GeoJsonDataType\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class for the default console channel.\n */\n\nexport class ConsoleChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.error(message, ...optionalParams);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.debug(message, ...optionalParams);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.info(message, ...optionalParams);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.log(message, ...optionalParams);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.trace(message, ...optionalParams);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        // tslint:disable-next-line:no-console\n        console.warn(message, ...optionalParams);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\n\n/**\n * Logger class.\n */\nexport class Logger implements ILogger {\n    enabled: boolean = true;\n    level: LogLevel = LogLevel.Trace;\n\n    constructor(readonly name: string, private m_channel: IChannel, options?: LoggerOptions) {\n        if (options !== undefined) {\n            this.update(options);\n        }\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Error) {\n            this.m_channel.error(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Debug) {\n            this.m_channel.debug(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Info) {\n            this.m_channel.info(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Log) {\n            this.m_channel.log(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Trace) {\n            this.m_channel.trace(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        if (this.enabled && this.level <= LogLevel.Warn) {\n            this.m_channel.warn(this.prefix, message, ...optionalParams);\n        }\n    }\n\n    update(options: LoggerOptions) {\n        this.enabled = options.enabled === undefined ? this.enabled : options.enabled;\n        this.level = options.level === undefined ? this.level : options.level;\n    }\n\n    private get prefix(): string {\n        return this.name + \":\";\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\nimport { LogLevel } from \"./ILogger\";\n\ndeclare let self: Worker;\n\nexport const WORKERCHANNEL_MSG_TYPE = \"worker-channel-message\";\n\n/**\n * The interface for the messages of the WorkerChannel.\n */\nexport interface IWorkerChannelMessage {\n    message: any[];\n    type: \"worker-channel-message\";\n    level: LogLevel;\n}\n\n/**\n * The class for the worker channel.\n */\nexport class WorkerChannel implements IChannel {\n    error(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Error\n        };\n        self.postMessage(workerMessage);\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Debug\n        };\n        self.postMessage(workerMessage);\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Info\n        };\n        self.postMessage(workerMessage);\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Log\n        };\n        self.postMessage(workerMessage);\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Trace\n        };\n        self.postMessage(workerMessage);\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        const workerMessage: IWorkerChannelMessage = {\n            message: [message, ...optionalParams],\n            type: WORKERCHANNEL_MSG_TYPE,\n            level: LogLevel.Warn\n        };\n        self.postMessage(workerMessage);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { assert, LoggerManager } from \"@here/harp-utils\";\nimport { ColorUtils } from \"./ColorUtils\";\nimport { Env } from \"./Env\";\nimport { ExponentialInterpolant } from \"./ExponentialInterpolant\";\nimport { Expr, ExprScope, Value } from \"./Expr\";\nimport { InterpolatedPropertyDefinition, InterpolationMode } from \"./InterpolatedPropertyDefs\";\nimport {\n    parseStringEncodedNumeral,\n    StringEncodedColorFormats,\n    StringEncodedMetricFormats,\n    StringEncodedNumeralFormat,\n    StringEncodedNumeralFormatMaxSize,\n    StringEncodedNumeralFormats,\n    StringEncodedNumeralType\n} from \"./StringEncodedNumeral\";\n\nconst logger = LoggerManager.instance.create(\"InterpolatedProperty\");\n\nconst interpolants = [\n    THREE.DiscreteInterpolant,\n    THREE.LinearInterpolant,\n    THREE.CubicInterpolant,\n    ExponentialInterpolant\n];\n\nconst tmpBuffer = new Array<number>(StringEncodedNumeralFormatMaxSize);\n\n/**\n * Property which value is interpolated across different zoom levels.\n */\nexport interface InterpolatedProperty {\n    /**\n     * Interpolation mode that should be used for this property.\n     */\n    interpolationMode: InterpolationMode;\n\n    /**\n     * Zoom level keys array.\n     */\n    zoomLevels: Float32Array;\n\n    /**\n     * Property values array.\n     */\n    values: ArrayLike<any>;\n\n    /**\n     * Exponent used in interpolation. Only valid with `Exponential` [[InterpolationMode]].\n     */\n    exponent?: number;\n\n    /**\n     * @hidden\n     * [[StringEncodedNumeral]] type needed to interpret interpolated values back to numbers.\n     */\n    _stringEncodedNumeralType?: StringEncodedNumeralType;\n\n    /**\n     * @hidden\n     * Array of `0` and `1`mask values used to modify the interpolation behaviour of some\n     * [[StringEncodedNumeral]]s.\n     */\n    _stringEncodedNumeralDynamicMask?: Float32Array;\n}\n\n/**\n * Type guard to check if an object is an instance of `InterpolatedProperty`.\n */\nexport function isInterpolatedProperty(p: any): p is InterpolatedProperty {\n    if (\n        p &&\n        p.interpolationMode !== undefined &&\n        p.zoomLevels instanceof Float32Array &&\n        p.values !== undefined &&\n        p.values.length > 0 &&\n        (p.zoomLevels.length === p.values.length / 4 ||\n            p.zoomLevels.length === p.values.length / 3 ||\n            p.zoomLevels.length === p.values.length)\n    ) {\n        return true;\n    }\n    return false;\n}\n\n/**\n* Get the value of the specified property in given `env`.\n\n* @param property Property of a technique.\n* @param env The [[Env]] used to evaluate the property\n*/\nexport function getPropertyValue(property: Value | Expr | undefined, env: Env): any {\n    if (Expr.isExpr(property)) {\n        try {\n            return property.evaluate(env, ExprScope.Dynamic);\n        } catch (error) {\n            logger.error(\n                \"failed to evaluate expression\",\n                JSON.stringify(property),\n                \"error\",\n                String(error)\n            );\n            return null;\n        }\n    }\n\n    if (property === null || typeof property === \"undefined\") {\n        return null;\n    } else if (typeof property !== \"string\") {\n        // Property in numeric or array, etc. format\n        return property;\n    } else {\n        // Non-interpolated string encoded numeral parsing\n        const pixelToMeters = (env.lookup(\"$pixelToMeters\") as number) || 1;\n        const value = parseStringEncodedNumeral(property, pixelToMeters);\n        return value !== undefined ? value : property;\n    }\n}\n\nexport function evaluateInterpolatedProperty(property: InterpolatedProperty, env: Env): any {\n    const level = env.lookup(\"$zoom\") as number;\n    const pixelToMeters = env.lookup(\"$pixelToMeters\") as number;\n\n    if (property._stringEncodedNumeralType !== undefined) {\n        switch (property._stringEncodedNumeralType) {\n            case StringEncodedNumeralType.Meters:\n            case StringEncodedNumeralType.Pixels:\n                return getInterpolatedMetric(property, level, pixelToMeters);\n            case StringEncodedNumeralType.Hex:\n            case StringEncodedNumeralType.RGB:\n            case StringEncodedNumeralType.RGBA:\n            case StringEncodedNumeralType.HSL:\n                return getInterpolatedColor(property, level);\n        }\n    }\n    return getInterpolatedMetric(property, level, pixelToMeters);\n}\n\nfunction getInterpolatedMetric(\n    property: InterpolatedProperty,\n    level: number,\n    pixelToMeters: number\n): number {\n    const nChannels = property.values.length / property.zoomLevels.length;\n    const interpolant = new interpolants[property.interpolationMode](\n        property.zoomLevels,\n        property.values,\n        nChannels\n    );\n    if (\n        property.interpolationMode === InterpolationMode.Exponential &&\n        property.exponent !== undefined\n    ) {\n        (interpolant as ExponentialInterpolant).exponent = property.exponent;\n    }\n    interpolant.evaluate(level);\n\n    if (property._stringEncodedNumeralDynamicMask === undefined) {\n        return interpolant.resultBuffer[0];\n    } else {\n        const maskInterpolant = new interpolants[property.interpolationMode](\n            property.zoomLevels,\n            property._stringEncodedNumeralDynamicMask,\n            1\n        );\n        if (\n            property.interpolationMode === InterpolationMode.Exponential &&\n            property.exponent !== undefined\n        ) {\n            (maskInterpolant as ExponentialInterpolant).exponent = property.exponent;\n        }\n        maskInterpolant.evaluate(level);\n\n        return (\n            interpolant.resultBuffer[0] *\n            (1 + maskInterpolant.resultBuffer[0] * (pixelToMeters - 1))\n        );\n    }\n}\n\nfunction getInterpolatedColor(property: InterpolatedProperty, level: number): number {\n    const nChannels = property.values.length / property.zoomLevels.length;\n    const interpolant = new interpolants[property.interpolationMode](\n        property.zoomLevels,\n        property.values,\n        nChannels\n    );\n    if (\n        property.interpolationMode === InterpolationMode.Exponential &&\n        property.exponent !== undefined\n    ) {\n        (interpolant as ExponentialInterpolant).exponent = property.exponent;\n    }\n    interpolant.evaluate(level);\n\n    assert(nChannels === 3 || nChannels === 4);\n    // ColorUtils.getHexFromRgba() does not clamp the values which may be out of\n    // color channels range (0 <= c <= 1) after interpolation.\n    if (nChannels === 4) {\n        return ColorUtils.getHexFromRgba(\n            THREE.MathUtils.clamp(interpolant.resultBuffer[0], 0, 1),\n            THREE.MathUtils.clamp(interpolant.resultBuffer[1], 0, 1),\n            THREE.MathUtils.clamp(interpolant.resultBuffer[2], 0, 1),\n            THREE.MathUtils.clamp(interpolant.resultBuffer[3], 0, 1)\n        );\n    } else {\n        return ColorUtils.getHexFromRgb(\n            THREE.MathUtils.clamp(interpolant.resultBuffer[0], 0, 1),\n            THREE.MathUtils.clamp(interpolant.resultBuffer[1], 0, 1),\n            THREE.MathUtils.clamp(interpolant.resultBuffer[2], 0, 1)\n        );\n    }\n}\n\n/**\n * Convert JSON representation of interpolated property to internal, normalized version that\n * can be evaluated by [[getPropertyValue]].\n */\nexport function createInterpolatedProperty(\n    prop: InterpolatedPropertyDefinition<unknown>\n): InterpolatedProperty | undefined {\n    removeDuplicatePropertyValues(prop);\n\n    const interpolationMode =\n        prop.interpolation !== undefined\n            ? InterpolationMode[prop.interpolation]\n            : InterpolationMode.Discrete;\n\n    const zoomLevels = new Float32Array(prop.zoomLevels);\n\n    const firstValue = prop.values[0];\n    switch (typeof firstValue) {\n        default:\n        case \"number\":\n        case \"boolean\":\n            return {\n                interpolationMode,\n                zoomLevels,\n                values: new Float32Array(prop.values as any),\n                exponent: prop.exponent\n            };\n        case \"string\":\n            // TODO: Minimize effort for pre-matching the numeral format.\n            const matchedFormat = StringEncodedNumeralFormats.find(format =>\n                format.regExp.test(firstValue)\n            );\n\n            if (matchedFormat === undefined) {\n                if (interpolationMode === InterpolationMode.Discrete) {\n                    return {\n                        interpolationMode,\n                        zoomLevels,\n                        values: prop.values\n                    };\n                }\n\n                logger.error(`No StringEncodedNumeralFormat matched ${firstValue}.`);\n                return undefined;\n            }\n\n            let needsMask = false;\n\n            const propValues = new Float32Array(prop.values.length * matchedFormat.size);\n            const maskValues = new Float32Array(prop.values.length);\n            needsMask = procesStringEnocodedNumeralInterpolatedProperty(\n                matchedFormat,\n                prop as InterpolatedPropertyDefinition<string>,\n                propValues,\n                maskValues\n            );\n\n            return {\n                interpolationMode,\n                zoomLevels,\n                values: propValues,\n                exponent: prop.exponent,\n                _stringEncodedNumeralType: matchedFormat.type,\n                _stringEncodedNumeralDynamicMask: needsMask ? maskValues : undefined\n            };\n    }\n}\n\nfunction removeDuplicatePropertyValues<T>(p: InterpolatedPropertyDefinition<T>) {\n    const eps = 0.001;\n\n    // detect cubic interpolations and remove stops\n    // closer than `eps`, this is needed to avoid\n    // possible NaN generated by the cubic interpolator.\n    const isCubic = p.interpolation === \"Cubic\";\n\n    for (let i = 0; i < p.values.length; ++i) {\n        const firstIdx = p.zoomLevels.findIndex(a => {\n            return isCubic ? Math.abs(a - p.zoomLevels[i]) < eps : a === p.zoomLevels[i];\n        });\n        if (firstIdx !== i) {\n            p.zoomLevels.splice(--i, 1);\n            p.values.splice(--i, 1);\n        }\n    }\n}\n\nfunction procesStringEnocodedNumeralInterpolatedProperty(\n    baseFormat: StringEncodedNumeralFormat,\n    prop: InterpolatedPropertyDefinition<string>,\n    propValues: Float32Array,\n    maskValues: Float32Array\n): boolean {\n    let needsMask = false;\n    const allowedValueFormats =\n        baseFormat.type === StringEncodedNumeralType.Meters ||\n        baseFormat.type === StringEncodedNumeralType.Pixels\n            ? StringEncodedMetricFormats\n            : StringEncodedColorFormats;\n\n    for (let valueIdx = 0; valueIdx < prop.values.length; ++valueIdx) {\n        let matched = false;\n        for (const valueFormat of allowedValueFormats) {\n            const value = prop.values[valueIdx];\n            matched = valueFormat.decoder(value, tmpBuffer);\n            if (!matched) {\n                continue;\n            }\n\n            if (valueFormat.mask !== undefined) {\n                maskValues[valueIdx] = valueFormat.mask;\n                needsMask = true;\n            }\n\n            for (let i = 0; i < valueFormat.size; ++i) {\n                propValues[valueIdx * valueFormat.size + i] = tmpBuffer[i];\n            }\n            break;\n        }\n        if (!matched) {\n            throw Error(\n                `Not all interpolation values match the same format: ${JSON.stringify(prop)}`\n            );\n        }\n    }\n\n    return needsMask;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { JsonExpr } from \"./Expr\";\nimport { InterpolatedPropertyDefinition } from \"./InterpolatedPropertyDefs\";\n\n/**\n * Available line caps types(`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n * Default is `\"Round\"`.\n */\nexport type LineCaps = \"Square\" | \"Round\" | \"None\" | \"TriangleOut\" | \"TriangleIn\";\n\n/**\n * Available line dash types(`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n * Default is `\"Square\"`.\n */\nexport type LineDashes = \"Square\" | \"Round\" | \"Diamond\";\n\n/**\n * Standard kinds of geometry.\n */\nexport enum StandardGeometryKind {\n    /**\n     * Used in the enabledKinds/disabledKinds filter to match any kind.\n     */\n    All = \"_all_\",\n\n    /**\n     * Background geometry.\n     */\n    Background = \"background\",\n\n    /**\n     * Terrain geometry.\n     */\n    Terrain = \"terrain\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Area = \"area\",\n\n    /**\n     * Default value for all line techniques.\n     */\n    Line = \"line\",\n\n    /**\n     * Default value for the FillTechnique.\n     */\n    Water = \"water\",\n\n    /**\n     * Political borders.\n     */\n    Border = \"border\",\n\n    /**\n     * Basis for all roads.\n     */\n    Road = \"road\",\n\n    /**\n     * Default value for the ExtrudedPolygonTechnique.\n     */\n    Building = \"building\",\n\n    /**\n     * Default value for the TextTechnique, LineMarkerTechnique and the PoiTechnique.\n     */\n    Label = \"label\",\n\n    /**\n     * Anything that may show up last.\n     */\n    Detail = \"detail\"\n}\n\n/**\n * Geometry kind used for use by [[BaseTechniqueParams.kind]].\n *\n * The kind of geometry is used to group objects together,\n * allowing the group to be hidden or displayed.\n *\n * Any string can be used to specify the kind of the technique in a style in the theme file. Is is\n * suggested to specify multiple kinds for specific types of data. For a highway, the following list\n * of kinds is suggested:\n *\n *    [\"line\", \"road\", \"road:highway\"]\n *\n * If it is a tunnel for a highway:\n *\n *    [\"line\", \"road\", \"road:highway\", \"tunnel\", \"road:tunnel\", \"road:highway:tunnel\"]\n *\n * If specified in this way, specific types of data (here: highway roads) can be enabled and/or\n * disabled.\n */\nexport type GeometryKind = string | StandardGeometryKind;\nexport const GeometryKind = StandardGeometryKind;\n\n/**\n * Decorate property type with possible dynamic variants.\n */\nexport type DynamicProperty<T> = T | JsonExpr | InterpolatedPropertyDefinition<T>;\n\n/*\n * Description of length units inside a style. Supports literal values (interpreted as `m`), `m` and\n * `px`(i.e. `80`, `14px`, `0.6m`, etc.).\n */\nexport type StyleLength = string | number;\n\n/**\n * Description of colors inside a style. Supports hex values as well as CSS hex, rgb and hsl values\n * (i.e. `0xffffff`, `#f00fab`, `#aaa`, `rgb(255, 0 120)`, `hsl(360, 100%, 100%)`, etc.).\n */\nexport type StyleColor = string | number;\n\n/**\n * A set of [[GeometryKind]]s.\n */\nexport class GeometryKindSet extends Set {\n    /**\n     * Return `true` if the Set is a superset of the set 'subset'.\n     */\n    isSuperset(subset: Set<any>): boolean {\n        for (const elem of subset) {\n            if (!this.has(elem)) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Return `true` if the Set intersects Set 'set'.\n     */\n    hasIntersection(set: any) {\n        for (const elem of set) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Return `true` if the Set either intersects Set 'set' (if set is a Set), of has element 'set'\n     * if set is not a Set.\n     */\n    hasOrIntersects(set: any) {\n        if (set instanceof Set) {\n            return this.hasIntersection(set);\n        }\n        return this.has(set);\n    }\n\n    /**\n     * Return `true` if this set and the array of elements share at least a single element.\n     */\n    hasOrIntersectsArray(subset: any[]) {\n        for (const elem of subset) {\n            if (this.has(elem)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\n/**\n * Common attributes or all [[Technique]]s.\n */\nexport interface BaseTechniqueParams {\n    /**\n     * The name used to identify materials created from this technique.\n     */\n    id?: string;\n\n    /**\n     * The render order of the objects created using this technique.\n     *\n     * If not specified in style file, [[StyleSetEvaluator]] will assign monotonically increasing\n     * values according to style position in file.\n     */\n    renderOrder: number;\n\n    /**\n     * The category of this technique.\n     *\n     * The category is used in conjunction with [[Theme.priorities]]\n     * to assign render orders to the objects created by this [[Style]].\n     */\n    category?: string;\n\n    /**\n     * Optional. If `true`, no IDs will be saved for the geometry this technique creates.\n     */\n    transient?: boolean;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object start\n     * fading out (opacity decreases).\n     */\n    fadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = camera position, 1.0 = farPlane) at which the object has zero\n     * opacity and stops fading out. An undefined value disables fading.\n     */\n    fadeFar?: DynamicProperty<number>;\n\n    /**\n     * Specified kind of geometry. One kind is set as default in the technique, and can be\n     * overridden in the style.\n     *\n     * @deprecated Use [[enabled]] with expressions based on `['dynamic-properties']` operator.\n     */\n    kind?: GeometryKind | GeometryKindSet;\n\n    /**\n     * Runtime filtering of techniques.\n     *\n     * Use with `['dynamic-properties']` operator for dynamic feature highlight, highlighig etc.\n     *\n     * @see Picking example - [[PickingExample]]\n     */\n    enabled?: DynamicProperty<boolean>;\n}\n\nexport enum TextureCoordinateType {\n    /**\n     * Texture coordinates are in tile space.\n     * SW of the tile will have (0,0) and NE will have (1,1).\n     */\n    TileSpace = \"tile-space\",\n    /**\n     * Texture coordinates are in equirectangular space.\n     * (u, v) = ( (longitude+180) / 360, (latitude+90) / 180).\n     */\n    EquirectangularSpace = \"equirectangular-space\"\n}\n\n/**\n * Standard technique parameters.\n */\nexport interface StandardTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of the feature in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.color.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.wireframe.\n     */\n    wireframe?: boolean;\n    /**\n     * If `vertexColors` is `true`, every vertex has color information, which is interpolated\n     * between vertices.\n     * See https://threejs.org/docs/#api/en/materials/Material.vertexColors.\n     */\n    vertexColors?: boolean;\n    /**\n     * How rough the material appears. `0.0` means a smooth mirror reflection. `1.0` means fully\n     * diffuse. Default is `1.0`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughness.\n     */\n    roughness?: DynamicProperty<number>;\n    /**\n     * How much the material is like a metal. Nonmetallic materials such as wood or stone use `0.0`,\n     * metallic ones use `1.0`, with nothing (usually) in between. Default is `0.0`. A value between\n     * `0.0` and `1.0` can be used for a rusty metal look. If `metalnessMap` is also provided, both\n     * values are multiplied.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalness.\n     */\n    metalness?: DynamicProperty<number>;\n    /**\n     * The material will not be rendered if the opacity is lower than this value.\n     * See https://threejs.org/docs/#api/en/materials/Material.alphaTest.\n     */\n    alphaTest?: DynamicProperty<number>;\n    /**\n     * Skip rendering clobbered pixels.\n     * See https://threejs.org/docs/#api/en/materials/Material.depthTest.\n     */\n    depthTest?: boolean;\n    /**\n     * Set to 'true' if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     * See https://threejs.org/docs/#api/en/materials/Material.transparent.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     * See https://threejs.org/docs/#api/en/materials/Material.opacity.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Emissive (light) color of the material, essentially a solid color unaffected by other\n     * lighting. Default is black.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissive.\n     * @format color-hex\n     */\n    emissive?: DynamicProperty<StyleColor>;\n    /**\n     * Intensity of the emissive light. Modulates the emissive color. Default is `1`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveIntensity.\n     */\n    emissiveIntensity?: DynamicProperty<number>;\n    /**\n     * The index of refraction (IOR) of air (approximately 1) divided by the index of refraction of\n     * the material. It is used with environment mapping modes `THREE.CubeRefractionMapping` and\n     * `THREE.EquirectangularRefractionMapping`. The refraction ratio should not exceed `1`. Default\n     *  is `0.98`.\n     * See https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.refractionRatio.\n     */\n    refractionRatio?: DynamicProperty<number>;\n\n    /**\n     * Whether and how texture coordinates should be generated. No texture coordinates are\n     * generated if `undefined`.\n     * Should be set if any texture assigned (e.g. `map`, `normalMap`, ...).\n     */\n    textureCoordinateType?: TextureCoordinateType;\n\n    /*\n     * URL or texture buffer that should be used as color map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.map\n     */\n    map?: string | TextureBuffer;\n    mapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as normal map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.normalMap\n     */\n    normalMap?: string | TextureBuffer;\n    normalMapType?: number;\n    normalMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as displacement map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.displacementMap\n     */\n    displacementMap?: string | TextureBuffer;\n    displacementMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as roughness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.roughnessMap\n     */\n    roughnessMap?: string | TextureBuffer;\n    roughnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as emissive map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.emissiveMap\n     */\n    emissiveMap?: string | TextureBuffer;\n    emissiveMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as bump map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.bumpMap\n     */\n    bumpMap?: string | TextureBuffer;\n    bumpMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as metalness map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.metalnessMap\n     */\n    metalnessMap?: string | TextureBuffer;\n    metalnessMapProperties?: TextureProperties;\n\n    /**\n     * URL or texture buffer that should be used as alpha map. See:\n     * https://threejs.org/docs/#api/en/materials/MeshStandardMaterial.alphaMap\n     */\n    alphaMap?: string | TextureBuffer;\n    alphaMapProperties?: TextureProperties;\n}\n\n/**\n * Possible parameters of [[PointTechnique]].\n */\nexport interface PointTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a point in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * URL of a texture image to be loaded.\n     */\n    texture?: string;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Size of point in pixels.\n     */\n    size?: number;\n    /**\n     * Whether to enable picking on these points.\n     */\n    enablePicking?: boolean;\n}\n\n/**\n * Define the stacking option. Enum values for theme file are in \"kebab-case\".\n */\nexport enum PoiStackMode {\n    /**\n     * Show in a stack.\n     */\n    Show = \"show-in-stack\",\n    /**\n     * Do not show in a stack.\n     */\n    Hide = \"hide-in-stack\",\n    /**\n     * Show category parent in the stack.\n     */\n    ShowParent = \"show-parent\"\n}\n\n/**\n * Technique that describes icons with labels. Used in [[PoiTechnique]] and [[LineMarkerTechnique]]\n * (for road shields).\n */\nexport interface MarkerTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted)\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language\n     *  - `[\"get\", \"name\"]`\n     *\n     * See [[ExtendedTileInfo.getFeatureText]]\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of marker, defaults to `0`. Markers with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimum zoomLevel at which to display the label text. No default.\n     */\n    textMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label text. No default.\n     */\n    textMaxZoomLevel?: number;\n    /**\n     * Minimum zoomLevel at which to display the label icon. No default.\n     */\n    iconMinZoomLevel?: number;\n    /**\n     * Maximum zoomLevel at which to display the label icon. No default.\n     */\n    iconMaxZoomLevel?: number;\n    /**\n     * Scaling factor of icon. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `false`, text may overlap markers.\n     * @default `false`\n     */\n    textMayOverlap?: boolean;\n    /**\n     * If `false`, the icon may overlap text and other icons of lower priority. If not defined, the\n     * property value from `textMayOverlap` will be used.\n     * @default `false`\n     */\n    iconMayOverlap?: boolean;\n    /**\n     * If `false`, text will not reserve screen space, other markers will be able to overlap.\n     * @default `true`\n     */\n    textReserveSpace?: boolean;\n    /**\n     * If `false`, icon will not reserve screen space, other markers will be able to overlap. If not\n     * defined, the property value from `iconReserveSpace` will be used.\n     * @default `true`\n     */\n    iconReserveSpace?: boolean;\n    /**\n     * If `false`, text will not be rendered during animations. Defaults to `true`.\n     */\n    renderTextDuringMovements?: boolean;\n    /**\n     * If `true`, the label will always be rendered on top. If overlapping with other labels with\n     * this flag set, the render order is undefined.\n     * @default `false`\n     */\n    alwaysOnTop?: boolean;\n    /**\n     * If `true`, icon will appear even if the text part is blocked by other labels. Defaults to\n     * `false`.\n     */\n    textIsOptional?: boolean;\n    /**\n     * Should be displayed on map or not. Defaults to `true`.\n     */\n    showOnMap?: boolean;\n    /**\n     * Specify stack mode. Defaults to `ShowInStack`.\n     */\n    stackMode?: PoiStackMode;\n    /**\n     * Minimal distance between markers in screen pixels.\n     */\n    minDistance?: number;\n    /**\n     * If true, the text will appear even if the icon cannot be rendered because of missing icon\n     * graphics. Defaults to `true`.\n     */\n    iconIsOptional?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Fading time for icons in seconds.\n     */\n    iconFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: DynamicProperty<number>;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    iconXOffset?: DynamicProperty<number>;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    iconYOffset?: DynamicProperty<number>;\n    /**\n     * Scaling factor of icon.\n     */\n    iconScale?: number;\n    /**\n     * Vertical height in pixels, controls vertical scaling. Overrides `iconScale`.\n     */\n    screenHeight?: DynamicProperty<number>;\n    /**\n     * Horizontal height in pixels, controls horizontal scaling. Overrides `iconScale`.\n     */\n    screenWidth?: DynamicProperty<number>;\n    /**\n     * Name of the POI table which should be used for this POI.\n     */\n    poiTable?: string;\n    /**\n     * Fixed name to identify POI options in the POI table. If `poiName` has a value, this value\n     * supercedes any value read from the field referenced in `poiNameField`.\n     */\n    poiName?: string;\n    /**\n     * Name of the field to evaluate to get the name of the POI options in the POI table.\n     */\n    poiNameField?: string;\n    /**\n     * Name of [[ImageTexture]] definition to use.\n     */\n    imageTexture?: string;\n    /**\n     * Field name to extract imageTexture content from.\n     */\n    imageTextureField?: string;\n    /**\n     * Prefix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePrefix?: string;\n    /**\n     * Postfix for `imageTexture` if `imageTextureField` is used.\n     */\n    imageTexturePostfix?: string;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\nexport interface LineTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to true if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in pixels. WebGL implementations will normally render all lines with 1 pixel\n     * width, and ignore this value.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a geometry as a segment.\n */\nexport interface SegmentsTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Color of segments in a hexadecimal notation, for example: `\"#e4e9ec\"` or `\"#fff\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of a line in meters.\n     */\n    lineWidth: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a polygon.\n */\nexport interface PolygonalTechniqueParams {\n    /**\n     * Whether to use polygon offset. Default is false. This corresponds to the\n     * GL_POLYGON_OFFSET_FILL WebGL feature.\n     *\n     * PolygonOffset is used to raise the geometry towards the geometry (for depth calculation\n     * only). Default is false.\n     *\n     * See here: https://sites.google.com/site/threejstuts/home/polygon_offset\n     *\n     * To activate polygonOffset these values have to be set to pull the line \"forwards\":\n     *\n     * transparent: true\n     *\n     * polygonOffset: true\n     *\n     * polygonOffsetFactor : -1.0, (as an example, see link above)\n     *\n     * polygonOffsetUnits: -1 (as an example, see link above)\n     */\n    polygonOffset?: boolean;\n\n    /**\n     * Sets the polygon offset factor. Default is 0.\n     */\n    polygonOffsetFactor?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon offset units. Default is 0.\n     */\n    polygonOffsetUnits?: DynamicProperty<number>;\n\n    /**\n     * Sets the polygon outline color.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n}\n\n/**\n * Declares a a geometry as a basic extruded line.\n */\nexport interface BasicExtrudedLineTechniqueParams\n    extends BaseTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are \"Basic\" and \"Standard\". Default\n     * is \"Basic\".\n     *\n     * `\"basic\"`   : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"`: Elaborate shading, with metalness, and roughness.\n     *\n     * TODO: is this TechniqueParams or Style prop ?\n     */\n    shading?: \"basic\";\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Width of line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a standard extruded line.\n */\nexport interface StandardExtrudedLineTechniqueParams\n    extends StandardTechniqueParams,\n        PolygonalTechniqueParams {\n    /**\n     * A value determining the shading technique. Valid values are `\"basic\"` and `\"standard\"`.\n     * Default is `\"basic\"`.\n     *\n     * `\"basic\"` : Simple shading, faster to render. Only simple color and opacity are effective.\n     * `\"standard\"` : Elaborate shading, with metalness, and roughness.\n     */\n    shading: \"standard\";\n    /**\n     * Width of a line in meters for different zoom levels.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Style of both end caps. Possible values: `\"None\"`, `\"Circle\"`. A value of undefined maps to\n     * `\"Circle\"`.\n     */\n    caps?: \"None\" | \"Circle\";\n}\n\n/**\n * Declares a a geometry as a solid line.\n */\nexport interface SolidLineTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Color of a line in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color: DynamicProperty<StyleColor>;\n    /**\n     * Color of a line outline in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    outlineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    // TODO: Make pixel units default.\n    /**\n     * @deprecated Specify metrics units as part of the value instead.\n     * Units in which different size properties are specified. Either `Meter` (default) or `Pixel`.\n     */\n    metricUnit?: string;\n    /**\n     * Width of a line in `metricUnit` for different zoom levels.\n     */\n    lineWidth: DynamicProperty<StyleLength>;\n    /**\n     * Outline width of a line in `metricUnit`s for different zoom levels.\n     */\n    outlineWidth?: DynamicProperty<StyleLength>;\n    /**\n     * Clip the line outside the tile if `true`.\n     */\n    clipping?: boolean;\n    /**\n     * Describes line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`, `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    caps?: LineCaps;\n    /**\n     * Color of secondary line geometry in hexadecimal or CSS-style notation, for example:\n     * `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    secondaryColor?: DynamicProperty<StyleColor>;\n    /**\n     * Width of secondary line geometry in `metricUnit`s for different zoom levels.\n     */\n    secondaryWidth?: DynamicProperty<StyleLength>;\n    /**\n     * The render order of the secondary line geometry object created using this technique.\n     */\n    secondaryRenderOrder?: number;\n    /**\n     * Describes secondary line caps type (`\"None\"`, `\"Round\"`, `\"Square\"`, `\"TriangleOut\"`,\n     * `\"TriangleIn\"`).\n     * Default is `\"Round\"`.\n     */\n    secondaryCaps?: LineCaps;\n    /**\n     * Describes the category of the secondary geometry object created using this technique.\n     */\n    secondaryCategory?: number;\n    /**\n     * Describes the starting drawing position for the line (in the range [0...1]).\n     * Default is `0.0`.\n     */\n    drawRangeStart?: number;\n    /**\n     * Describes the ending drawing position for the line (in the range [0...1]).\n     * Default is `1.0`.\n     */\n    drawRangeEnd?: number;\n    /**\n     * Describes line dash type (`\"Round\"`, `\"Square\"`, `\"Diamond\"`).\n     * Default is `\"Square\"`.\n     */\n    dashes?: LineDashes;\n    /**\n     * Color of a line dashes in hexadecimal or CSS-style notation,\n     * for example: `\"#e4e9ec\"`, `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    dashColor?: DynamicProperty<StyleColor>;\n    /**\n     * Length of a line in meters for different zoom levels.\n     */\n    dashSize?: DynamicProperty<StyleLength>;\n    /**\n     * Size of a gap between lines in meters for different zoom levels.\n     */\n    gapSize?: DynamicProperty<StyleLength>;\n}\n\n/**\n * Technique used to draw filled polygons.\n */\nexport interface FillTechniqueParams extends BaseTechniqueParams, PolygonalTechniqueParams {\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Set to `true` if line should appear transparent. Rendering transparent lines may come with a\n     * slight performance impact.\n     */\n    transparent?: boolean;\n    /**\n     * For transparent lines, set a value between `0.0` for fully transparent, to `1.0` for fully\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * A value of `true` creates a wireframe geometry. (May not be supported with all techniques).\n     */\n    wireframe?: boolean;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth?: DynamicProperty<number>;\n}\n\n/**\n * Technique used to draw a geometry as an extruded polygon, for example extruded buildings.\n */\nexport interface ExtrudedPolygonTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Renders the footprint lines if set to 'true'.\n     */\n    footprint?: boolean;\n    /**\n     * Set to a negative value to remove all the vertical lines, and to a value between 0.0 and 1.0\n     * to modulate the amount of vertical lines rendered.\n     */\n    maxSlope?: number;\n    /**\n     * Width of the lines. Currently limited to the [0, 1] range.\n     */\n    lineWidth: DynamicProperty<number>;\n    /**\n     * Fill color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    lineColor?: DynamicProperty<StyleColor>;\n    /**\n     * Mix value between the lineColor(0.0) and the geometry's vertex colors(1.0).\n     */\n    lineColorMix?: number;\n\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges start\n     * fading out.\n     */\n    lineFadeNear?: DynamicProperty<number>;\n    /**\n     * Distance to the camera (0.0 = nearPlane, 1.0 = farPlane) at which the object edges become\n     * transparent. A value of <= 0.0 disables fading.\n     */\n    lineFadeFar?: DynamicProperty<number>;\n\n    /**\n     * Height above ground in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"get\", \"height\"]`.\n     */\n    height?: number;\n\n    /**\n     * Height of \"floor\" of extruded polygon in world units of extruded polygon.\n     *\n     * Usually, unique per feature, so defaults to `[\"number\", [\"get\", \"min_height\"], 0]`.\n     */\n    floorHeight?: number;\n\n    /**\n     * In some data sources, for example Tilezen, building extrusion information might be missing.\n     * This attribute allows to define a default height of an extruded polygon in the theme.\n     *\n     * @deprecated use [[height]]\n     */\n    defaultHeight?: number;\n\n    /**\n     * Default color used if feature doesn't provide color attribute\n     * and [[MapEnv]] did not return it too.\n     * @format color-hex\n     */\n    defaultColor?: DynamicProperty<StyleColor>;\n\n    /**\n     * If `true`, the height of the extruded buildings will not be modified by the mercator\n     * projection distortion that happens around the poles.\n     *\n     * @default `false`\n     */\n    constantHeight?: boolean;\n\n    /**\n     * If `false`, wall geometry will not be added along the tile boundaries.\n     * @default `true`\n     */\n    boundaryWalls?: boolean;\n\n    /**\n     * Animate the extrusion of the buildings if set to `true`.\n     */\n    animateExtrusion?: DynamicProperty<boolean>;\n\n    /**\n     * Duration of the building's extrusion in milliseconds\n     */\n    animateExtrusionDuration?: number;\n\n    /**\n     * Control rendering of depth prepass before the actual geometry.\n     *\n     * Depth prepass is a method to render translucent meshes, hence only the visible front faces of\n     * a mesh are actually rendered, removing artifacts caused by blending with internal faces of\n     * the mesh. This method is used for drawing translucent buildings over map background.\n     *\n     * By default, each [[DataSource]] determines how/if enable the depth pre-pass. A value of\n     * `false` forcefully disables depth prepass.\n     */\n    enableDepthPrePass?: boolean;\n}\n\nexport interface ShaderTechniqueMaterialParameters {\n    [name: string]: any;\n}\n\n/**\n * Special technique for user-defined shaders. See\n * https://threejs.org/docs/#api/harp-materials/ShaderMaterial for details.\n */\nexport interface ShaderTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Parameters for shader. See `THREE.ShaderMaterialParameters`.\n     */\n    params: ShaderTechniqueMaterialParameters;\n\n    /**\n     * Type of primitive for the shader technique. Valid values are \"point\" | \"line\" | \"segments\" |\n     * \"mesh\"\n     */\n    primitive: \"point\" | \"line\" | \"segments\" | \"mesh\";\n}\n\n/**\n * Technique used to render a terrain geometry with a texture.\n * When using this technique, the datasource will produce texture coordinates in\n * local tile space (i.e. [0,0] at south-west and [1,1] at north-east tile corner).\n */\nexport interface TerrainTechniqueParams extends StandardTechniqueParams {\n    /**\n     * Colors to be applied at different heights (as a results of a `displacementMap`).\n     */\n    heightBasedColors?: HeightBasedColors;\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the interpolation method used to\n     * generate the height-based gradient texture (defaults to `Discrete`).\n     */\n    heightGradientInterpolation?: \"Discrete\" | \"Linear\" | \"Cubic\";\n\n    /**\n     * If `heightBasedColors` is defined, this value defines the width (in pixels) of the generated\n     * gradient texture (defaults to `128`).\n     */\n    heightGradientWidth?: number;\n}\n\n/**\n * Render geometry as a text.\n */\nexport interface TextTechniqueParams extends BaseTechniqueParams {\n    /**\n     * Text to be displayed for feature.\n     *\n     * Defaults to first defined:\n     *  - feature property `label` if present in technique (depreacted);\n     *  - `[\"get\", \"name:short\"]` is `useAbbreviation` is true;\n     *  - `[\"get\", \"iso_code\"]` is `useIsoCode` is true;\n     *  - `[\"get\", \"name:$LANGUAGE\"]` for each specified language;\n     *  - `[\"get\", \"name\"]`.\n     *\n     * See [[ExtendedTileInfo.getFeatureText]].\n     */\n    text?: string;\n\n    /**\n     * Field name of object containing the text to be rendered.\n     *\n     * @deprecated, Use `[\"get\", \"FIELD\"]`.\n     */\n    label?: string;\n    /**\n     * If `true`, the abbreviation (field `name:short`) of the elements is used as text.\n     *\n     * @deprecated Use proper expression with [`get`, `name:short`] for this purpose.\n     */\n    useAbbreviation?: boolean;\n    /**\n     * If `true`, the iso code (field 'iso_code') of the elements is used as text.\n     * The `iso_code` field contains the ISO 3166-1 2-letter country code.\n     *\n     * @deprecated Use proper expression with [`get`, `iso_code`] for this purpose.\n     */\n    useIsoCode?: boolean;\n    /**\n     * Priority of text, defaults to `0`. Elements with highest priority get placed first.\n     */\n    priority?: DynamicProperty<number>;\n    /**\n     * Minimal zoom level. If the current zoom level is smaller, the technique will not be used.\n     */\n    minZoomLevel?: number;\n    /**\n     * Maximum zoom level. If the current zoom level is larger, the technique will not be used.\n     */\n    maxZoomLevel?: number;\n    /**\n     * Scaling factor of the text. Defaults to 0.5, reducing the size ot 50% in the distance.\n     */\n    distanceScale?: number;\n    /**\n     * If `true`, icon is allowed to overlap other labels or icons of lower priority.\n     * @default `false`\n     */\n    mayOverlap?: boolean;\n    /**\n     * If `true`, element will reserve screen space, other markers of lower priority will not be\n     * able to overlap.\n     * @default `true`\n     */\n    reserveSpace?: boolean;\n    /**\n     * Fading time for labels in seconds.\n     */\n    textFadeTime?: number;\n    /**\n     * Horizontal offset (to the right) in screen pixels.\n     */\n    xOffset?: number;\n    /**\n     * Vertical offset (up) in screen pixels.\n     */\n    yOffset?: number;\n    /**\n     * Name of the text style.\n     */\n    style?: string;\n    /**\n     * Name of the preferred [[Font]] to be used when rendering.\n     */\n    fontName?: string;\n    /**\n     * Size of the text (pixels).\n     */\n    size?: DynamicProperty<number>;\n    /**\n     * Size of the text background (pixels).\n     */\n    backgroundSize?: DynamicProperty<number>;\n    /**\n     * Glyph style to apply for the currently active [[Font]].\n     */\n    fontStyle?: \"Regular\" | \"Bold\" | \"Italic\" | \"BoldItalic\";\n    /**\n     * Glyph variant to apply for the currently active [[Font]].\n     */\n    fontVariant?: \"Regular\" | \"AllCaps\" | \"SmallCaps\";\n    /**\n     * Glyph local rotation (radians).\n     */\n    rotation?: number;\n    /**\n     * Text color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`, `\"#fff\"`,\n     * `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    color?: DynamicProperty<StyleColor>;\n    /**\n     * Text background color in hexadecimal or CSS-style notation, for example: `\"#e4e9ec\"`,\n     * `\"#fff\"`, `\"rgb(255, 0, 0)\"`, or `\"hsl(35, 11%, 88%)\"`.\n     * @format color-hex\n     */\n    backgroundColor?: DynamicProperty<StyleColor>;\n    /**\n     * For transparent text, set a value between 0.0 for totally transparent, to 1.0 for totally\n     * opaque.\n     */\n    opacity?: DynamicProperty<number>;\n    /**\n     * Background text opacity value.\n     */\n    backgroundOpacity?: DynamicProperty<number>;\n    /**\n     * Inter-glyph spacing (pixels). Scaled by `size`.\n     */\n    tracking?: DynamicProperty<number>;\n    /**\n     * Inter-line spacing (pixels). Scaled by `size`.\n     */\n    leading?: DynamicProperty<number>;\n    /**\n     * Maximum number of lines for this label.\n     */\n    maxLines?: DynamicProperty<number>;\n    /**\n     * Maximum line width (pixels).\n     */\n    lineWidth?: DynamicProperty<number>;\n    /**\n     * [[TextCanvas]] rotation (radians).\n     */\n    canvasRotation?: DynamicProperty<number>;\n    /**\n     * Line typesetting rotation (radians).\n     */\n    lineRotation?: DynamicProperty<number>;\n    /**\n     * Wrapping (line-breaking) mode.\n     */\n    wrappingMode?: DynamicProperty<\"None\" | \"Character\" | \"Word\">;\n    /**\n     * Text position regarding the baseline.\n     */\n    hAlignment?: DynamicProperty<\"Left\" | \"Center\" | \"Right\">;\n    /**\n     * Text position inside a line.\n     */\n    vAlignment?: DynamicProperty<\"Above\" | \"Center\" | \"Below\">;\n}\n\n/**\n * Buffer holding a texture.\n */\nexport interface TextureBuffer {\n    /**\n     * Buffer containing the (compressed) image or the raw texture data.\n     */\n    buffer: ArrayBuffer;\n\n    /**\n     * Mime type of the image or 'image/raw' in case of raw texture data.\n     */\n    type: string;\n\n    /**\n     * Properties for creating a three.js DataTexture\n     * (https://threejs.org/docs/#api/en/textures/DataTexture).\n     */\n    dataTextureProperties?: DataTextureProperties;\n}\n\n/**\n * Type guard to check if an object is an instance of `TextureBuffer`.\n */\nexport function isTextureBuffer(object: any): object is TextureBuffer {\n    return object && object.buffer && typeof object.type === \"string\";\n}\n\n/**\n * Properties of a DataTexture (https://threejs.org/docs/#api/en/textures/DataTexture).\n */\nexport interface DataTextureProperties {\n    width: number;\n    height: number;\n\n    format?: PixelFormat;\n    type?: TextureDataType;\n}\n\n/**\n * Properties of a Texture (https://threejs.org/docs/#api/en/textures/Texture).\n */\nexport interface TextureProperties {\n    /**\n     * Texture horizontal wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapS.\n     */\n    wrapS?: WrappingMode;\n\n    /**\n     * Texture vertical wrapping mode.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.wrapT.\n     */\n    wrapT?: WrappingMode;\n\n    /**\n     * Texture magnification filter.\n     */\n    magFilter?: MagFilter;\n\n    /**\n     * Texture minification filter.\n     */\n    minFilter?: MinFilter;\n\n    /**\n     * Flip texture vertically.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.flipY.\n     */\n    flipY?: boolean;\n\n    /**\n     * Texture horizontal repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatU?: number;\n\n    /**\n     * Texture vertical repetition rate.\n     * See: https://threejs.org/docs/#api/en/textures/Texture.repeat.\n     */\n    repeatV?: number;\n}\n\n/**\n * Interface containing the definition of different colors to be used at different heights with the\n * [[TerrainTechnique]].\n */\nexport interface HeightBasedColors {\n    heightArray: number[];\n    colorArray: string[];\n}\n\nexport type PixelFormat =\n    | \"Alpha\"\n    | \"RGB\"\n    | \"RGBA\"\n    | \"Luminance\"\n    | \"LuminanceAlpha\"\n    | \"RGBE\"\n    | \"Depth\"\n    | \"DepthStencil\"\n    | \"Red\";\n\nexport type TextureDataType =\n    | \"UnsignedByte\"\n    | \"Byte\"\n    | \"Short\"\n    | \"UnsignedShort\"\n    | \"Int\"\n    | \"UnsignedInt\"\n    | \"Float\"\n    | \"HalfFloat\";\n\n/**\n * Available texture wrapping modes.\n */\nexport type WrappingMode = \"clamp\" | \"repeat\" | \"mirror\";\n\n/**\n * Available texture magnification filters.\n */\nexport type MagFilter = \"nearest\" | \"linear\";\n\n/**\n * Available texture minification filters.\n */\nexport type MinFilter =\n    | \"nearest\"\n    | \"nearestMipMapNearest\"\n    | \"nearestMipMapLinear\"\n    | \"linear\"\n    | \"linearMipMapNearest\"\n    | \"linearMipMapLinear\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Technique } from \"./Techniques\";\n\nexport enum AttrScope {\n    /**\n     * Attributes that affect generation of feature geometry and thus must be resolved at decoding\n     * time.\n     *\n     * They may have huge variancy as they are implemented as vertex attributes or embedded in\n     * generated meshes.\n     *\n     * These attributes are available only in decoding scope.\n     */\n    FeatureGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * These attributes affect generated geometry and  thus must be resolved at decoding time.\n     *\n     * They shouldn't have big variancy and evaluate to at least dozens of values as each\n     * combination of these attributes consitute new technique and material.\n     *\n     * These attributes are available in decoding and rendering scope.\n     */\n    TechniqueGeometry,\n\n    /**\n     * Attributes that are common to whole group of features drawn with this technique.\n     * Attributes that can be changed in resulting object/material from frame to frame. They are\n     * usually implemented as uniforms.\n     *\n     * These attributes may be available only at rendering scope.\n     */\n    TechniqueRendering\n}\n\n/**\n * Extract  property names from [[Technique]]-like interface (excluding `name`) as union of string\n * literals.\n *\n * TechniquePropName<Base\n *\n */\nexport type TechniquePropNames<T> = T extends { name: any } ? keyof Omit<T, \"name\"> : keyof T;\n\nexport type TechniquePropScopes<T> = {\n    [P in TechniquePropNames<T>]?: AttrScope;\n};\n\nexport interface TechniqueDescriptor<T> {\n    attrTransparencyColor?: string;\n    attrScopes: TechniquePropScopes<T>;\n}\n\ntype OneThatMatches<T, P> = T extends P ? T : never;\ntype TechniqueByName<K extends Technique[\"name\"]> = OneThatMatches<Technique, { name: K }>;\n\nexport type TechniqueDescriptorRegistry = {\n    [P in Technique[\"name\"]]?: TechniqueDescriptor<TechniqueByName<P>>;\n};\n\nexport function mergeTechniqueDescriptor<T>(\n    ...descriptors: Array<Partial<TechniqueDescriptor<T>>>\n): TechniqueDescriptor<T> {\n    const result: TechniqueDescriptor<T> = {\n        attrScopes: {}\n    };\n    for (const descriptor of descriptors) {\n        if (descriptor.attrTransparencyColor !== undefined) {\n            result.attrTransparencyColor = descriptor.attrTransparencyColor;\n        }\n        if (descriptor.attrScopes !== undefined) {\n            result.attrScopes = { ...result.attrScopes, ...descriptor.attrScopes };\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    equirectangularProjection,\n    mercatorProjection,\n    normalizedEquirectangularProjection,\n    OrientedBox3,\n    Projection,\n    sphereProjection,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\nimport { IndexedTechnique } from \"./Techniques\";\nimport { TileInfo } from \"./TileInfo\";\n\n/**\n * This object has geometry data in the form of geometries buffers ready to be used by WebGL.\n * These geometries are not `three.js` objects. They are pure data stored as `ArrayBuffer`s and\n * metadata describing these buffers.\n */\nexport interface DecodedTile {\n    techniques: IndexedTechnique[];\n    geometries: Geometry[];\n    pathGeometries?: PathGeometry[];\n    textPathGeometries?: TextPathGeometry[];\n    textGeometries?: TextGeometry[]; // ### deprecate\n    poiGeometries?: PoiGeometry[];\n    tileInfo?: TileInfo;\n    decodeTime?: number; // time used to decode (in ms)\n\n    /**\n     * The default bounding box in [[Tile]] is based on the geo box of the tile.\n     * For data-sources that have 3d data this is not sufficient so the data-source can provide a\n     * more accurate bounding box once the data is decoded.\n     */\n    boundingBox?: OrientedBox3;\n\n    /**\n     * Data sources not defining a bounding box may define alternatively a maximum geometry height\n     * in meters. The bounding box of the resulting tile will be extended to encompass this height.\n     */\n    maxGeometryHeight?: number;\n\n    /**\n     * Tile data Copyright holder identifiers.\n     *\n     * `id`s should be unique. It is recommended to build them from unique identifiers like\n     * registered domain names.\n     *\n     * @see [[CopyrightInfo]]\n     */\n    copyrightHolderIds?: string[];\n}\n\n/**\n * This object keeps the path of the geometry. Space of the path depends on the\n * use case, so could be either world or local tile space.\n */\nexport interface PathGeometry {\n    path: Vector3Like[];\n}\n\n/**\n * Attributes corresponding to some decoded geometry. It may be either a map\n * of multiple attributes or just a number with the geometry's feature id.\n */\nexport type AttributeMap = {} | number;\n\n/**\n * This object keeps textual data together with metadata to place it on the map.\n */\nexport interface TextPathGeometry {\n    path: number[];\n    pathLengthSqr: number;\n    text: string;\n    technique: number;\n    objInfos?: AttributeMap;\n}\n\n/**\n * Returns an array with the data type specified as parameter.\n *\n * @param attr specifies which type of data is being stored in the array\n */\nexport function getArrayConstructor(attr: BufferElementType) {\n    switch (attr) {\n        case \"float\":\n            return Float32Array;\n        case \"uint8\":\n            return Uint8Array;\n        case \"uint16\":\n            return Uint16Array;\n        case \"uint32\":\n            return Uint32Array;\n        case \"int8\":\n            return Int8Array;\n        case \"int16\":\n            return Int16Array;\n        case \"int32\":\n            return Int32Array;\n    }\n}\n\n/**\n * Structured clone compliant WebGL interleaved buffer with its metadata attached.\n */\nexport interface InterleavedBufferAttribute {\n    buffer: ArrayBufferLike;\n    stride: number;\n    type: BufferElementType;\n    attributes: Array<{\n        name: string;\n        itemSize: number;\n        offset: number;\n    }>;\n}\n\n/**\n * Geometry types supported by [[Geometry]] objects.\n */\nexport enum GeometryType {\n    Unspecified = 0,\n    Point,\n    Line,\n    SolidLine,\n    Text,\n    TextPath,\n    ExtrudedLine,\n    Polygon,\n    ExtrudedPolygon,\n    Object3D,\n    Other = 1000\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object, consisting of buffers with\n * metadata for map features and objects for example roads, trees or parks.\n */\nexport interface Geometry {\n    type: GeometryType;\n    vertexAttributes?: BufferAttribute[];\n    interleavedVertexAttributes?: InterleavedBufferAttribute[];\n    index?: BufferAttribute;\n    edgeIndex?: BufferAttribute;\n    groups: Group[];\n    uuid?: string;\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    featureStarts?: number[];\n\n    /**\n     * Optional array of objects. It can be used to pass user data from the geometry to the mesh.\n     */\n    objInfos?: AttributeMap[];\n\n    /**\n     * Optional [[Array]] of [[Attachment]]s.\n     */\n    attachments?: Attachment[];\n}\n\n/**\n * Attachments together with [[Geometry]] define the meshes and the objects\n * of a [[Scene]].\n */\nexport interface Attachment {\n    /**\n     * The unique uuid of this [[Attachment]].\n     */\n    uuid?: string;\n\n    /**\n     * The name of this [[Attachment]].\n     */\n    name?: string;\n\n    /**\n     * The index [[BufferAttribute]]. If not provided the index\n     * buffer of the [[Geometry]] will be used.\n     */\n    index?: BufferAttribute;\n\n    /**\n     * Optional additional buffer index used to create an edge object.\n     */\n    edgeIndex?: BufferAttribute;\n\n    /**\n     * The draw [[Group]]]s of this [[Attachment]].\n     */\n    groups: Group[];\n}\n\n/**\n * The data stored in Buffers' elements can be of the following elementary types: float, signed or\n * unsigned integers (8-bit, 16-bit or 32-bit long).\n */\nexport type BufferElementType =\n    | \"float\"\n    | \"uint8\"\n    | \"uint16\"\n    | \"uint32\"\n    | \"int8\"\n    | \"int16\"\n    | \"int32\";\n\n/**\n * Structured clone compliant WebGL buffer and its metadata.\n */\nexport interface BufferAttribute {\n    name: string;\n    buffer: ArrayBufferLike;\n    type: BufferElementType;\n    itemCount: number;\n    normalized?: boolean;\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with text to be rendered.\n * It is composed of buffers with metadata for text objects.\n */\nexport interface TextGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant version of a `three.js` geometry object with points of interest (POIs)\n * to be rendered. It is composed of buffers with metadata for POI objects.\n */\nexport interface PoiGeometry {\n    positions: BufferAttribute;\n    texts: number[];\n    /**\n     * Names of the image texture or the name of the POI as indices into the array `stringCatalog`.\n     */\n    imageTextures?: number[];\n    technique?: number;\n    stringCatalog?: Array<string | undefined>;\n    objInfos?: AttributeMap[];\n}\n\n/**\n * Structured clone compliant WebGL group object and its metadata.\n * Its purpose is to make working with groups of objects easier.\n */\nexport interface Group {\n    start: number;\n    count: number;\n    technique: number;\n\n    /**\n     * Contains tile offsets if its [[Geometry]] has been created.\n     */\n    createdOffsets?: number[];\n}\n\n/**\n * Returns the projection object specified in the parameter.\n *\n * @param projectionName string describing projection to be used\n */\nexport function getProjection(projectionName: string): Projection | never {\n    switch (projectionName) {\n        case \"mercator\":\n            return mercatorProjection;\n        case \"webMercator\":\n            return webMercatorProjection;\n        case \"sphere\":\n            return sphereProjection;\n        case \"normalizedEquirectangular\":\n            return normalizedEquirectangularProjection;\n        case \"equirectangular\":\n            return equirectangularProjection;\n        default:\n            throw new Error(`Unknown projection ${projectionName}`);\n    } // switch\n}\n\n/**\n * String with the projection's name.\n *\n * @param projection `Projection` object containing the name of the projection to retrieve\n */\nexport function getProjectionName(projection: Projection): string | never {\n    if (projection === mercatorProjection) {\n        return \"mercator\";\n    } else if (projection === webMercatorProjection) {\n        return \"webMercator\";\n    } else if (projection === sphereProjection) {\n        return \"sphere\";\n    } else if (projection === normalizedEquirectangularProjection) {\n        return \"normalizedEquirectangular\";\n    } else if (projection === equirectangularProjection) {\n        return \"equirectangular\";\n    }\n    throw new Error(\"Unknown projection\");\n}\n\n/**\n * @returns Feature id from the provided attribute map.\n */\nexport function getFeatureId(attributeMap: AttributeMap | undefined): number {\n    if (attributeMap === undefined) {\n        return 0;\n    }\n\n    if (typeof attributeMap === \"number\") {\n        return attributeMap;\n    }\n\n    if (attributeMap.hasOwnProperty(\"$id\")) {\n        return (attributeMap as any).$id as number;\n    }\n\n    return 0;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `GeoCoordinates` like interface.\n */\nexport interface GeoCoordinatesLike {\n    /** The latitude in degrees. */\n    latitude: number;\n\n    /** The longitude in degrees. */\n    longitude: number;\n\n    /** The optional altitude in meters. */\n    altitude?: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[GeoCoordinatesLike]] data interface.\n */\nexport function isGeoCoordinatesLike(object: any): object is GeoCoordinatesLike {\n    return (\n        object &&\n        typeof object.latitude === \"number\" &&\n        typeof object.longitude === \"number\" &&\n        (typeof object.altitude === \"number\" || typeof object.altitude === \"undefined\")\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * An [[Array]] following the order longitude, latitude, altitude.\n */\nexport type GeoPointLike = [number, number, number?];\n\n/**\n * Type guard to assert that `object` conforms to [[GeoPointLike]] interface.\n */\nexport function isGeoPointLike(geoPoint: any): geoPoint is GeoPointLike {\n    if (Array.isArray(geoPoint)) {\n        const [longitude, latitude, altitude] = geoPoint;\n        return (\n            typeof longitude === \"number\" &&\n            typeof latitude === \"number\" &&\n            (altitude === undefined || typeof altitude === \"number\")\n        );\n    }\n    return false;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Represents an object with `LatLng` like interface.\n */\nexport interface LatLngLike {\n    /** The latitude in degrees. */\n    lat: number;\n\n    /** The longitude in degrees. */\n    lng: number;\n}\n\n/**\n * Type guard to assert that `object` conforms to [[LatLngLike]] interface.\n */\nexport function isLatLngLike(object: any): object is LatLngLike {\n    return object && typeof object.lat === \"number\" && typeof object.lng === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass EquirectangularProjection extends Projection {\n    static geoToWorldScale: number = 1.0 / (2.0 * Math.PI);\n    static worldToGeoScale: number = (2.0 * Math.PI) / 1.0;\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0.0;\n        result.min.y = 0.0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale / 2;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (result === undefined) {\n            /*\n             * The following tslint:disable is due to the fact that the [[WorldCoordinates]]\n             * might be a concrete class which is not available at runtime.\n             * Consider the following example:\n             *\n             *  const x: THREE.Vector3 = new THREE.Vector3(0,0,0);\n             *  const result = EquirectangularProjection.projectPoint<THREE.Vector3>(x);\n             *\n             * Note: type of `result` is Vector3Like and not as expected: THREE.Vector3!\n             */\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x =\n            (THREE.MathUtils.degToRad(geoPoint.longitude) + Math.PI) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.y =\n            (THREE.MathUtils.degToRad(geoPoint.latitude) + Math.PI * 0.5) *\n            EquirectangularProjection.geoToWorldScale *\n            this.unitScale;\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(\n            (worldPoint.y * EquirectangularProjection.worldToGeoScale) / this.unitScale -\n                Math.PI * 0.5,\n            (worldPoint.x * EquirectangularProjection.worldToGeoScale) / this.unitScale - Math.PI,\n            worldPoint.z\n        );\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const worldCenter = this.projectPoint(\n            new GeoCoordinates(geoBox.center.latitude, geoBox.center.longitude, 0)\n        );\n        const { latitudeSpanInRadians, longitudeSpanInRadians, altitudeSpan } = geoBox;\n        const sizeX = longitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        const sizeY = latitudeSpanInRadians * EquirectangularProjection.geoToWorldScale;\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = worldCenter.x - sizeX * 0.5 * this.unitScale;\n            result.min.y = worldCenter.y - sizeY * 0.5 * this.unitScale;\n            result.max.x = worldCenter.x + sizeX * 0.5 * this.unitScale;\n            result.max.y = worldCenter.y + sizeY * 0.5 * this.unitScale;\n            if (altitudeSpan !== undefined) {\n                result.min.z = worldCenter.z - altitudeSpan * 0.5;\n                result.max.z = worldCenter.z + altitudeSpan * 0.5;\n            } else {\n                result.min.z = 0;\n                result.max.z = 0;\n            }\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = worldCenter.x;\n            result.position.y = worldCenter.y;\n            result.position.z = worldCenter.z;\n            result.extents.x = sizeX * 0.5 * this.unitScale;\n            result.extents.y = sizeY * 0.5 * this.unitScale;\n            result.extents.z = Math.max(Number.EPSILON, (altitudeSpan || 0) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to unit coordinates and vice\n * versa.\n */\nexport const normalizedEquirectangularProjection: Projection = new EquirectangularProjection(1);\n\n/**\n * Equirectangular [[Projection]] used to convert geo coordinates to world coordinates and vice\n * versa.\n */\nexport const equirectangularProjection: Projection = new EquirectangularProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n *\n * https://en.wikipedia.org/wiki/Transverse_Mercator_projection\n * http://mathworld.wolfram.com/MercatorProjection.html\n *\n */\nclass TransverseMercatorProjection extends Projection {\n    /**\n     * Like in regular Mercator projection, there are two points on sphere\n     * with radius about 5 degrees, that is out of projected space.\n     *\n     *\n     * in regular Mercator these points are:\n     *     (90, any), (-90, any)\n     *\n     * and in transverse Mercator:\n     *     (0, 90), (0, -90)\n     *\n     * So, in transverse we need to compute distnce to poles, and clamp if\n     * radius is exceeded\n     */\n    static clampGeoPoint(geoPoint: GeoCoordinatesLike, _unitScale: number) {\n        const lat = geoPoint.latitude;\n        const lon = geoPoint.longitude;\n\n        const r = TransverseMercatorUtils.POLE_RADIUS;\n        const rsq = TransverseMercatorUtils.POLE_RADIUS_SQ;\n\n        const nearestQuarter = Math.round(lon / 90);\n        const deltaLon = nearestQuarter * 90 - lon;\n        if (nearestQuarter % 2 === 0 || Math.abs(deltaLon) > r) {\n            return geoPoint;\n        }\n\n        const deltaLat = lat - 0;\n        const distanceToPoleSq = deltaLon * deltaLon + deltaLat * deltaLat;\n        if (distanceToPoleSq < rsq) {\n            const distanceToPole = Math.sqrt(distanceToPoleSq);\n            const scale = (r - distanceToPole) / distanceToPole;\n            // const quarter = ((nearestQuarter % 4) + 4) % 4;\n            // const dir = quarter === 1 ? -1 : quarter === 3 ? 1 : 0;\n            const dir = 1;\n            const offsetLon = deltaLon === 0 && deltaLat === 0 ? r * dir : deltaLon;\n            return new GeoCoordinates(lat + deltaLat * scale, lon + offsetLon * scale);\n        }\n\n        return geoPoint;\n    }\n\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    private m_phi0: number = 0;\n    private m_lambda0: number = 0;\n\n    constructor(readonly unitScale: number) {\n        super(unitScale);\n    }\n\n    /** @override */\n    getScaleFactor(worldPoint: Vector3Like): number {\n        return Math.cosh((worldPoint.x / this.unitScale - 0.5) * 2 * Math.PI);\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = 0;\n        result.min.y = 0;\n        result.min.z = minAltitude;\n        result.max.x = this.unitScale;\n        result.max.y = this.unitScale;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n\n        const clamped = TransverseMercatorProjection.clampGeoPoint(geoPoint, this.unitScale);\n        const normalLon = clamped.longitude / 360 + 0.5;\n        const offset = normalLon === 1 ? 0 : Math.floor(normalLon);\n        const phi = THREE.MathUtils.degToRad(clamped.latitude);\n        const lambda = THREE.MathUtils.degToRad(clamped.longitude - offset * 360) - this.m_lambda0;\n\n        const B = Math.cos(phi) * Math.sin(lambda);\n        // result.x = 1/2 * Math.log((1 + B) / (1 - B));\n        result.x = Math.atanh(B);\n        result.y = Math.atan2(Math.tan(phi), Math.cos(lambda)) - this.m_phi0;\n\n        const outScale = 0.5 / Math.PI;\n        result.x =\n            this.unitScale * (THREE.MathUtils.clamp(result.x * outScale + 0.5, 0, 1) + offset);\n        result.y = this.unitScale * THREE.MathUtils.clamp(result.y * outScale + 0.5, 0, 1);\n\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const tau = Math.PI * 2;\n        const nx = worldPoint.x / this.unitScale;\n        const ny = worldPoint.y / this.unitScale;\n        const offset = nx === 1 ? 0 : Math.floor(nx);\n        const x = tau * (nx - 0.5 - offset);\n        const y = tau * (ny - 0.5);\n        const z = worldPoint.z || 0;\n\n        const D = y + this.m_phi0;\n\n        const phi = Math.asin(Math.sin(D) / Math.cosh(x));\n        const lambda = this.m_lambda0 + Math.atan2(Math.sinh(x), Math.cos(D)) + offset * tau;\n\n        const geoPoint = GeoCoordinates.fromRadians(phi, lambda, z);\n        return geoPoint;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        const { north, south, east, west } = geoBox;\n\n        const pointsToCheck = [\n            geoBox.center,\n            geoBox.northEast,\n            geoBox.southWest,\n            new GeoCoordinates(south, east),\n            new GeoCoordinates(north, west)\n        ];\n\n        const E = TransverseMercatorUtils.POLE_EDGE_DEG;\n\n        const containsWestCut = west < -90 && east > -90;\n        const containsEastCut = west < 90 && east > 90;\n        const containsCenterX = west < 0 && east > 0;\n        const containsCenterY = west < E && east > -E && north > 0 && south < 0;\n\n        if (containsWestCut) {\n            pointsToCheck.push(new GeoCoordinates(north, -90));\n            pointsToCheck.push(new GeoCoordinates(south, -90));\n        }\n\n        if (containsEastCut) {\n            pointsToCheck.push(new GeoCoordinates(north, 90));\n            pointsToCheck.push(new GeoCoordinates(south, 90));\n        }\n\n        if (containsCenterX) {\n            pointsToCheck.push(new GeoCoordinates(north, 0));\n            pointsToCheck.push(new GeoCoordinates(south, 0));\n        }\n\n        if (containsCenterY) {\n            pointsToCheck.push(new GeoCoordinates(0, west));\n            pointsToCheck.push(new GeoCoordinates(0, east));\n        }\n\n        TransverseMercatorUtils.alignLatitude(pointsToCheck, pointsToCheck[0]);\n\n        const projected = pointsToCheck.map(p => this.projectPoint(p));\n        const vx = projected.map(p => p.x);\n        const vy = projected.map(p => p.y);\n        const vz = projected.map(p => p.z);\n\n        const minX = Math.min(...vx);\n        const minY = Math.min(...vy);\n        const minZ = Math.min(...vz);\n        const maxX = Math.max(...vx);\n        const maxY = Math.max(...vy);\n        const maxZ = Math.max(...vz);\n\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        if (isBox3Like(result)) {\n            result.min.x = minX;\n            result.min.y = minY;\n            result.min.z = minZ;\n            result.max.x = maxX;\n            result.max.y = maxY;\n            result.max.z = maxZ;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (minX + maxX) / 2;\n            result.position.y = (minY + maxY) / 2;\n            result.position.z = (minZ + maxZ) / 2;\n            result.extents.x = (maxX - minX) / 2;\n            result.extents.y = (maxY - minY) / 2;\n            result.extents.z = (maxZ - minZ) / 2;\n        } else {\n            throw new Error(\"invalid bounding box\");\n        }\n        return result;\n    }\n\n    /**\n     * There are 8 sub-regions on entire projection space\n     * where both longitude and latitude preserve direction.\n     * If bounding box hits more than one region, it should be splitted\n     * into sub-boxes by regions, (un)projected and then united again.\n     *\n     *\n     * directions in form [latitude / longitude]:\n     *    1 ┌─────────|─────────┐\n     *      │ dr / dl | dl / ul │\n     * 0.75 ----------|----------\n     *      │ ur / dr | ul / ur │\n     * 0.5  ----------|----------\n     *      │ ul / ur | ur / dr │\n     * 0.25 ----------|----------\n     *      │ dl / ul | dr / dl │\n     *      └─────────|─────────┘\n     *     0         0.5        1\n     *     @override\n     */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const s = this.unitScale;\n\n        const min = worldBox.min;\n        const max = worldBox.max;\n        const pointsToCheck = [\n            { x: (min.x + max.x) / 2, y: (min.y + max.y) / 2, z: 0 },\n            min,\n            max,\n            { x: min.x, y: max.y, z: 0 },\n            { x: max.x, y: min.y, z: 0 }\n        ];\n\n        const center = 0.5 * s;\n        const lowerQ = 0.25 * s;\n        const upperQ = 0.75 * s;\n\n        const containsCenterX = min.x < center && max.x > center;\n        const containsCenterY = min.y < center && max.y > center;\n        const containsLowerQY = min.y < lowerQ && max.y > lowerQ;\n        const containsUpperQY = min.y < upperQ && max.y > upperQ;\n\n        if (containsCenterY) {\n            pointsToCheck.push({ x: min.x, y: center, z: 0 });\n            pointsToCheck.push({ x: max.x, y: center, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: center, z: 0 });\n            }\n        }\n        if (containsLowerQY) {\n            pointsToCheck.push({ x: min.x, y: lowerQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: lowerQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: lowerQ, z: 0 });\n            }\n        }\n        if (containsUpperQY) {\n            pointsToCheck.push({ x: min.x, y: upperQ, z: 0 });\n            pointsToCheck.push({ x: max.x, y: upperQ, z: 0 });\n\n            if (containsCenterX) {\n                pointsToCheck.push({ x: center, y: upperQ, z: 0 });\n            }\n        }\n\n        const geoPoints = pointsToCheck.map(p => this.unprojectPoint(p));\n        TransverseMercatorUtils.alignLongitude(geoPoints, geoPoints[0]);\n\n        const latitudes = geoPoints.map(g => g.latitude);\n        const longitudes = geoPoints.filter(g => Math.abs(g.latitude) < 90).map(g => g.longitude);\n        const altitudes = geoPoints.map(g => g.altitude || 0);\n\n        const minGeo = new GeoCoordinates(\n            Math.min(...latitudes),\n            Math.min(...longitudes),\n            Math.min(...altitudes)\n        );\n\n        const maxGeo = new GeoCoordinates(\n            Math.max(...latitudes),\n            Math.max(...longitudes),\n            Math.max(...altitudes)\n        );\n\n        const geoBox = GeoBox.fromCoordinates(minGeo, maxGeo);\n        return geoBox;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: -1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = -1;\n        }\n        return normal;\n    }\n}\n\nexport class TransverseMercatorUtils {\n    static POLE_EDGE: number = 1.4844222297453323;\n    static POLE_EDGE_DEG: number = THREE.MathUtils.radToDeg(TransverseMercatorUtils.POLE_EDGE);\n    static POLE_RADIUS: number = 90 - TransverseMercatorUtils.POLE_EDGE_DEG;\n    static POLE_RADIUS_SQ: number = Math.pow(TransverseMercatorUtils.POLE_RADIUS, 2);\n\n    /**\n     * There are two regions on projected space that have same geo coordinates,\n     * it's the entire lines   { x: [0..1], y: 0 } and { x: [0..1], y: 1 }\n     * they both have geo coordinates of   (0, [-90..+90])\n     * and should be aligned somehow to fall into first or second region\n     * to make proper bounding boxes, tile bounds, etc.\n     */\n    static alignLatitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const EPSILON = 1e-9;\n\n        for (const point of points) {\n            if (point.latitude === 0) {\n                point.latitude = referencePoint.latitude * EPSILON;\n            }\n        }\n    }\n\n    /**\n     * There are two regions on projected plane,\n     * { x: 0.5, y: [0..0.25] }    and    { x: 0.5, y: [0.75..1] }\n     * that represent longitude edge where -180 and +180 met.\n     * Points falling in this regions should be aligned to get proper boxes etc.\n     */\n    static alignLongitude(points: GeoCoordinatesLike[], referencePoint: GeoCoordinatesLike): void {\n        const bad = referencePoint.longitude < 0 ? 180 : -180;\n        const good = referencePoint.longitude < 0 ? -180 : 180;\n\n        for (const point of points) {\n            if (point.longitude === bad) {\n                point.longitude = good;\n            }\n        }\n    }\n}\n\n/**\n * Transverse Mercator [[Projection]] used to convert geo coordinates to world coordinates\n * and vice versa.\n */\nexport const transverseMercatorProjection: Projection = new TransverseMercatorProjection(\n    EarthConstants.EQUATORIAL_CIRCUMFERENCE\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { Box3Like } from \"../math/Box3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection } from \"../projection/Projection\";\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nimport * as THREE from \"three\";\n\n/**\n * `FlatTileBoundingBoxGenerator` generates bounding boxes in world and geo coordinates for a given\n * TilingScheme.\n */\nexport class FlatTileBoundingBoxGenerator {\n    private readonly m_tilingScheme: TilingScheme;\n    private readonly m_worldDimensions: Vector3Like;\n    private readonly m_worldBox: Box3Like;\n    /**\n     * Creates a new `FlatTileBoundingBoxGenerator` that can generate bounding boxes for the given\n     * TilingScheme.\n     *\n     * @param tilingScheme The [[TilingScheme]] used to compute bounding boxes.\n     * @param minElevation The minimum elevation in meters.\n     * @param maxElevation The maximum elevation in meters.\n     */\n    constructor(\n        readonly tilingScheme: TilingScheme,\n        readonly minElevation: number = 0,\n        readonly maxElevation: number = 0\n    ) {\n        this.m_tilingScheme = tilingScheme;\n        this.m_worldBox = tilingScheme.projection.worldExtent(minElevation, maxElevation);\n        const { min, max } = this.m_worldBox;\n        this.m_worldDimensions = { x: max.x - min.x, y: max.y - min.y, z: max.z - min.z };\n    }\n\n    /**\n     * Returns the [[Projection]] of the [[TilingScheme]].\n     */\n    get projection(): Projection {\n        return this.m_tilingScheme.projection;\n    }\n\n    /**\n     * Returns the [[SubdivisionScheme]] of the [[TilingScheme]].\n     */\n    get subdivisionScheme(): SubdivisionScheme {\n        return this.m_tilingScheme.subdivisionScheme;\n    }\n\n    /**\n     * Returns the bounding box in world coordinates of the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const worldBounds = new THREE.Box3();\n     * generator.getWorldBox(geoBox, worldBounds);\n     * console.log(worldBounds.getCenter());\n     * ```\n     *\n     * @param tileKey The TileKey.\n     * @param result The optional object used to store the resulting bounding box in world\n     * coordinates.\n     */\n    getWorldBox(tileKey: TileKey, result?: Box3Like): Box3Like {\n        const level = tileKey.level;\n        const levelDimensionX = this.subdivisionScheme.getLevelDimensionX(level);\n        const levelDimensionY = this.subdivisionScheme.getLevelDimensionY(level);\n        const sizeX = this.m_worldDimensions.x / levelDimensionX;\n        const sizeY = this.m_worldDimensions.y / levelDimensionY;\n        const originX = this.m_worldBox.min.x + sizeX * tileKey.column;\n        const originY = this.m_worldBox.min.y + sizeY * tileKey.row;\n\n        if (!result) {\n            result = new THREE.Box3();\n        }\n\n        result.min.x = originX;\n        result.min.y = originY;\n        result.min.z = this.m_worldBox.min.z;\n        result.max.x = originX + sizeX;\n        result.max.y = originY + sizeY;\n        result.max.z = this.m_worldBox.max.z;\n        return result;\n    }\n\n    /**\n     * Returns the bounding box in geo coordinates for the given [[TileKey]].\n     *\n     * Example:\n     * ```typescript\n     * const geoBox = generator.getGeoBox(worldBounds);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tileKey The [[TileKey]].\n     */\n    getGeoBox(tileKey: TileKey): GeoBox {\n        const worldBox = this.getWorldBox(tileKey);\n        return this.projection.unprojectBox(worldBox);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\n\nclass HalfQuadTreeSubdivisionScheme implements SubdivisionScheme {\n    getSubdivisionX(): number {\n        return 2;\n    }\n    getSubdivisionY(level: number): number {\n        return level === 0 ? 1 : 2;\n    }\n    getLevelDimensionX(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return 1 << level;\n    }\n    getLevelDimensionY(level: number): number {\n        // tslint:disable-next-line:no-bitwise\n        return level !== 0 ? 1 << (level - 1) : 1;\n    }\n}\n\n/**\n * A [[SubdivisionScheme]] used to represent half quadtrees. This particular subdivision scheme is\n * used by the HERE tiling scheme.\n */\nexport const halfQuadTreeSubdivisionScheme: SubdivisionScheme = new HalfQuadTreeSubdivisionScheme();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TileKey } from \"./TileKey\";\n\nexport class SubTiles implements Iterable<TileKey> {\n    constructor(public tileKey: TileKey, public sizeX: number, public sizeY: number) {}\n\n    [Symbol.iterator](): Iterator<TileKey> {\n        return this.sizeX === 2 && this.sizeY === 2\n            ? SubTiles.ZCurveIterator(this.tileKey)\n            : SubTiles.RowColumnIterator(this.tileKey, this.sizeX, this.sizeY);\n    }\n}\n\nexport namespace SubTiles {\n    export function* RowColumnIterator(\n        parentKey: TileKey,\n        sizeX: number,\n        sizeY: number\n    ): Iterator<TileKey> {\n        for (let y = 0; y < sizeY; y++) {\n            for (let x = 0; x < sizeX; x++) {\n                yield TileKey.fromRowColumnLevel(\n                    parentKey.row * sizeY + y,\n                    parentKey.column * sizeX + x,\n                    parentKey.level + 1\n                );\n            }\n        }\n    }\n\n    export function* ZCurveIterator(parentKey: TileKey): Iterator<TileKey> {\n        // tslint:disable:no-bitwise\n        for (let i = 0; i < 4; i++) {\n            yield TileKey.fromRowColumnLevel(\n                (parentKey.row << 1) | (i >> 1),\n                (parentKey.column << 1) | (i & 1),\n                parentKey.level + 1\n            );\n        }\n        // tslint:enableno-bitwise\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\nexport class TileKeyUtils {\n    static geoCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        geoPoint: GeoCoordinatesLike,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const worldPoint = projection.projectPoint(geoPoint);\n\n        return this.worldCoordinatesToTileKey(tilingScheme, worldPoint, level);\n    }\n\n    static worldCoordinatesToTileKey(\n        tilingScheme: TilingScheme,\n        worldPoint: Vector3Like,\n        level: number\n    ): TileKey | null {\n        const projection = tilingScheme.projection;\n        const subdivisionScheme = tilingScheme.subdivisionScheme;\n\n        const cx = subdivisionScheme.getLevelDimensionX(level);\n        const cy = subdivisionScheme.getLevelDimensionY(level);\n\n        const { min, max } = projection.worldExtent(0, 0);\n        const worldSizeX = max.x - min.x;\n        const worldSizeY = max.y - min.y;\n\n        if (worldPoint.x < min.x || worldPoint.x > max.x) {\n            return null;\n        }\n\n        if (worldPoint.y < min.y || worldPoint.y > max.y) {\n            return null;\n        }\n\n        const column = Math.min(cx - 1, Math.floor((cx * (worldPoint.x - min.x)) / worldSizeX));\n        const row = Math.min(cy - 1, Math.floor((cy * (worldPoint.y - min.y)) / worldSizeY));\n\n        return TileKey.fromRowColumnLevel(row, column, level);\n    }\n\n    static geoRectangleToTileKeys(\n        tilingScheme: TilingScheme,\n        geoBox: GeoBox,\n        level: number\n    ): TileKey[] {\n        const wrap = (value: number, lower: number, upper: number) => {\n            if (value < lower) {\n                return upper - ((lower - value) % (upper - lower));\n            }\n\n            return lower + ((value - lower) % (upper - lower));\n        };\n\n        const clamp = (x: number, minVal: number, maxVal: number) => {\n            return Math.min(Math.max(x, minVal), maxVal);\n        };\n\n        // Clamp at the poles and wrap around the international date line.\n        const southWestLongitude = wrap(geoBox.southWest.longitudeInRadians, -Math.PI, Math.PI);\n        const southWestLatitude = clamp(\n            geoBox.southWest.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const northEastLongitude = wrap(geoBox.northEast.longitudeInRadians, -Math.PI, Math.PI);\n        const northEastLatitude = clamp(\n            geoBox.northEast.latitudeInRadians,\n            -(Math.PI * 0.5),\n            Math.PI * 0.5\n        );\n        const minTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(southWestLatitude, southWestLongitude),\n            level\n        );\n        const maxTileKey = TileKeyUtils.geoCoordinatesToTileKey(\n            tilingScheme,\n            GeoCoordinates.fromRadians(northEastLatitude, northEastLongitude),\n            level\n        );\n        const columnCount = tilingScheme.subdivisionScheme.getLevelDimensionX(level);\n\n        if (!minTileKey || !maxTileKey) {\n            throw new Error(\"Invalid coordinates\");\n        }\n\n        const minColumn = minTileKey.column;\n        let maxColumn = maxTileKey.column;\n\n        // wrap around case\n        if (southWestLongitude > northEastLongitude) {\n            if (maxColumn !== minColumn) {\n                maxColumn += columnCount;\n            } else {\n                // do not duplicate\n                maxColumn += columnCount - 1;\n            }\n        }\n\n        const minRow = Math.min(minTileKey.row, maxTileKey.row);\n        const maxRow = Math.max(minTileKey.row, maxTileKey.row);\n\n        const keys = new Array<TileKey>();\n\n        for (let row = minRow; row <= maxRow; ++row) {\n            for (let column = minColumn; column <= maxColumn; ++column) {\n                keys.push(TileKey.fromRowColumnLevel(row, column % columnCount, level));\n            }\n        }\n\n        return keys;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { SubdivisionScheme } from \"./SubdivisionScheme\";\nimport { SubTiles } from \"./SubTiles\";\nimport { TileKey } from \"./TileKey\";\n\nexport class TileTreeTraverse {\n    private m_subdivisionScheme: SubdivisionScheme;\n\n    constructor(subdivisionScheme: SubdivisionScheme) {\n        this.m_subdivisionScheme = subdivisionScheme;\n    }\n\n    subTiles(tileKey: TileKey): Iterable<TileKey> {\n        const divX = this.m_subdivisionScheme.getSubdivisionX(tileKey.level);\n        const divY = this.m_subdivisionScheme.getSubdivisionY(tileKey.level);\n\n        return new SubTiles(tileKey, divX, divY);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    isJsonExpr,\n    JsonExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\nimport { ExprPool } from \"./ExprPool\";\nimport {} from \"./InterpolatedProperty\";\nimport {\n    interpolatedPropertyDefinitionToJsonExpr,\n    isInterpolatedPropertyDefinition\n} from \"./InterpolatedPropertyDefs\";\nimport { AttrScope, mergeTechniqueDescriptor } from \"./TechniqueDescriptor\";\nimport { IndexedTechnique, Technique, techniqueDescriptors } from \"./Techniques\";\nimport {\n    Definitions,\n    isActualSelectorDefinition,\n    isJsonExprReference,\n    LineStyle,\n    Style,\n    StyleDeclaration,\n    StyleSelector,\n    StyleSet\n} from \"./Theme\";\n\nconst logger = LoggerManager.instance.create(\"StyleSetEvaluator\");\n\nconst emptyTechniqueDescriptor = mergeTechniqueDescriptor<Technique>({});\n\ninterface StyleInternalParams {\n    /**\n     * Optimization: Lazy creation and storage of expression in a style object.\n     */\n    _whenExpr?: Expr;\n    _minZoomLevelExpr?: Expr;\n    _maxZoomLevelExpr?: Expr;\n\n    _staticAttributes?: Array<[string, Value]>;\n\n    /**\n     * These attributes are used to instantiate Technique variants.\n     *\n     * @see [[TechiqueDescriptor.techniquePropNames]]\n     */\n    _dynamicTechniqueAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes must be evaluated basing with feature env.\n     *\n     * They are not propagated to rendering scope.\n     *\n     * @see [[TechniqueAttrScope.Feature]]\n     */\n    _dynamicFeatureAttributes?: Array<[string, Expr]>;\n\n    /**\n     * These attributes are forwarded as serialized by decoder to main thread, so they are resolved\n     * directly in render loop.\n     *\n     * Will contain attributes from these lists\n     *  - interpolants from [[TechiqueDescriptor.techniquePropNames]]\n     *  - expressions [[TechniqueDescriptor.dynamicPropNames]] (Future)\n     */\n    _dynamicForwardedAttributes?: Array<[string, Expr]>;\n    _dynamicTechniques?: Map<string, IndexedTechnique>;\n\n    /**\n     * Optimization: Index into table in StyleSetEvaluator.\n     * @hidden\n     */\n    _staticTechnique?: IndexedTechnique;\n\n    /**\n     * Optimization: StyleSet index.\n     * @hidden\n     */\n    _styleSetIndex?: number;\n\n    /**\n     * Optimization: Requested $geometryType.\n     * @hidden\n     */\n    _geometryType?: string;\n\n    /**\n     * `true` if any of the properties of this technique\n     * requires access to the feature's state.\n     */\n    _usesFeatureState?: boolean;\n}\n\ntype InternalStyle = Style & StyleSelector & StyleInternalParams;\n\n/**\n * [[StyleConditionClassifier]] searches for usages of `$layer` in `when` conditions\n * associated with styling rules.\n *\n * @hidden\n */\nclass StyleConditionClassifier implements ExprVisitor<Expr | undefined, Expr | undefined> {\n    private _style!: InternalStyle;\n\n    classify(style: InternalStyle) {\n        if (style._whenExpr) {\n            const savedStyle = this.switchStyle(style);\n            style._whenExpr = style._whenExpr.accept(this, undefined);\n            this._style = savedStyle;\n        }\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCaseExpr(expr: CaseExpr, enclosingExpr: Expr | undefined): Expr {\n        return expr;\n    }\n\n    visitCallExpr(call: CallExpr, enclosingExpr: Expr | undefined): Expr | undefined {\n        if (call.op === \"all\") {\n            // processing of an `[\"all\", e1, e2, ... eN]` expression. In this case\n            // search for expressions matching comparison of `$layer` and string literals\n            // in the sub expressions.\n            const children = call.args\n                .map(childExpr => childExpr.accept(this, call))\n                .filter(childExpr => childExpr !== undefined) as Expr[];\n\n            return new CallExpr(call.op, children);\n        } else if (enclosingExpr) {\n            // `call` is a direct child expression of an `\"all\"` operator.\n            const matched = this.matchVarStringComparison(call);\n\n            if (matched) {\n                if (this._style.layer === undefined && matched.name === \"$layer\") {\n                    // found a subexpression `[\"==\", [\"get\", \"$layer\"], \"some layer name\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $layer in\n                    // [[StyleInternalParams]].\n\n                    this._style.layer = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                } else if (\n                    this._style._geometryType === undefined &&\n                    matched.name === \"$geometryType\"\n                ) {\n                    // found a subexpression `[\"==\", [\"get\", \"$geometryType\"], \"geometry\"]`\n                    // enclosed in an `[\"all\", e1...eN]` expression. Remove it from\n                    // its parent expression and store the value of the expected $geometryType in\n                    // [[StyleInternalParams]].\n\n                    this._style._geometryType = matched.value;\n\n                    // return `undefined` to remove this sub expression from its parent.\n                    return undefined;\n                }\n            }\n        }\n\n        return call;\n    }\n\n    /**\n     * Tests if the given `call` matches the structure [\"==\", [\"get\", name], value].\n     * If a match is found returns an object containing the `name` and the `value`;\n     *\n     * @param call The expression to match.\n     */\n    private matchVarStringComparison(call: CallExpr) {\n        if (call.op === \"==\") {\n            const left = call.args[0];\n            const right = call.args[1];\n\n            if (left instanceof VarExpr && right instanceof StringLiteralExpr) {\n                return { name: left.name, value: right.value };\n            }\n\n            if (right instanceof VarExpr && left instanceof StringLiteralExpr) {\n                return { name: right.name, value: left.value };\n            }\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Sets the given `style` as current.\n     *\n     * @returns The previous `style`.\n     */\n    private switchStyle(style: InternalStyle) {\n        const saved = this._style;\n        this._style = style;\n        return saved;\n    }\n}\n\nclass OptimizedSubSetKey {\n    key: string;\n    layer: string | undefined;\n    geometryType: string | undefined;\n\n    cachedStyleSet?: InternalStyle[];\n\n    constructor(layer?: string | undefined, geometryType?: string | undefined) {\n        this.key = \"\";\n        this.set(layer, geometryType);\n    }\n\n    set(\n        layer: string | undefined,\n        geometryType: string | undefined,\n        env?: Env\n    ): OptimizedSubSetKey {\n        let keyUpdateNeeded: boolean = false;\n        if (layer === undefined) {\n            const envLayer = env !== undefined ? env.lookup(\"$layer\") : undefined;\n            layer = typeof envLayer === \"string\" ? envLayer : undefined;\n        }\n        if (this.layer !== layer) {\n            this.layer = layer;\n            keyUpdateNeeded = true;\n        }\n\n        if (geometryType === undefined) {\n            const envGeometryType = env !== undefined ? env.lookup(\"$geometryType\") : undefined;\n            geometryType = typeof envGeometryType === \"string\" ? envGeometryType : undefined;\n        }\n        if (this.geometryType !== geometryType) {\n            this.geometryType = geometryType;\n            keyUpdateNeeded = true;\n        }\n\n        if (keyUpdateNeeded) {\n            this.updateKey();\n        }\n        return this;\n    }\n\n    private updateKey() {\n        if (this.layer !== undefined) {\n            // tslint:disable-next-line:prefer-conditional-expression\n            if (this.geometryType !== undefined) {\n                this.key = `${this.layer}:${this.geometryType}`;\n            } else {\n                this.key = `${this.layer}:`;\n            }\n        } else {\n            if (this.geometryType !== undefined) {\n                this.key = `:${this.geometryType}`;\n            } else {\n                this.key = \"all\";\n            }\n        }\n        this.cachedStyleSet = undefined;\n    }\n}\n\n/**\n * Combine data from datasource and apply the rules from a specified theme to show it on the map.\n */\nexport class StyleSetEvaluator {\n    readonly styleSet: InternalStyle[];\n\n    private readonly m_techniques: IndexedTechnique[] = [];\n    private readonly m_exprPool = new ExprPool();\n    private readonly m_cachedResults = new Map<Expr, Value>();\n    private readonly m_styleConditionClassifier = new StyleConditionClassifier();\n    private readonly m_subStyleSetCache = new Map<string, InternalStyle[]>();\n    private readonly m_definitions?: Definitions;\n    private readonly m_definitionExprCache = new Map<string, Expr>();\n    private readonly m_tmpOptimizedSubSetKey: OptimizedSubSetKey = new OptimizedSubSetKey();\n    private readonly m_emptyEnv = new Env();\n    private m_featureDependencies: string[] = [];\n    private m_layer: string | undefined;\n    private m_geometryType: string | undefined;\n    private m_zoomLevel: number | undefined;\n    private m_previousResult: IndexedTechnique[] | undefined;\n    private m_previousEnv: Env | undefined;\n\n    constructor(styleSet: StyleSet, definitions?: Definitions) {\n        this.m_definitions = definitions;\n        this.styleSet = resolveReferences(styleSet, definitions);\n        computeDefaultRenderOrder(this.styleSet);\n        this.compileStyleSet();\n    }\n\n    /**\n     * Find all techniques that fit the current objects' environment.\n     * *The techniques in the resulting array may not be modified* since they are being reused for\n     * identical objects.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     * representation.\n     * @param layer The optional layer name used to filter techniques.\n     * @param geometryType The optional geometryType used to filter techniques.\n     */\n    getMatchingTechniques(\n        env: Env,\n        layer?: string | undefined,\n        geometryType?: string | undefined\n    ): IndexedTechnique[] {\n        if (\n            this.m_previousResult &&\n            this.m_previousEnv &&\n            this.m_featureDependencies.every(p => this.m_previousEnv?.lookup(p) === env.lookup(p))\n        ) {\n            return this.m_previousResult;\n        }\n\n        const result: IndexedTechnique[] = [];\n        this.m_cachedResults.clear();\n\n        const optimizedSubSetKey = this.m_tmpOptimizedSubSetKey;\n        optimizedSubSetKey.set(layer, geometryType, env);\n\n        // get the requested $layer and $geometryType, if any.\n        this.m_layer = optimizedSubSetKey.layer;\n        this.m_geometryType = optimizedSubSetKey.geometryType;\n        this.m_zoomLevel = env.lookup(\"$zoom\") as number | undefined;\n\n        const searchedStyleSet = this.getOptimizedStyleSet(optimizedSubSetKey);\n\n        for (const currStyle of searchedStyleSet) {\n            if (this.processStyle(env, currStyle, result)) {\n                break;\n            }\n        }\n\n        this.m_previousResult = result;\n        this.m_previousEnv = env;\n\n        return result;\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to `layer`.\n     *\n     * @param layer name of layer\n     */\n    wantsLayer(layer: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, undefined)).length > 0\n        );\n    }\n\n    /**\n     * Check if `styleSet` contains any rule related to particular `[layer, geometryType]` pair.\n     *\n     * @param layer name of layer\n     * @param geometryType type of layer - `point`, `line` or `polygon`\n     */\n    wantsFeature(layer: string, geometryType?: string): boolean {\n        return (\n            this.getOptimizedStyleSet(this.m_tmpOptimizedSubSetKey.set(layer, geometryType))\n                .length > 0\n        );\n    }\n\n    /**\n     * Get the expression evaluation cache, for further feature processing.\n     *\n     * This object is valid until next `getMatchingTechniques` call.\n     */\n    get expressionEvaluatorCache() {\n        return this.m_cachedResults;\n    }\n\n    /**\n     * Reset array of techniques.\n     *\n     * Cleans technique array and indices, so it doesn't accumulate accross several decoding runs.\n     */\n    resetTechniques() {\n        for (const techinque of this.m_techniques) {\n            techinque._index = undefined!;\n        }\n        this.m_techniques.length = 0;\n        this.m_previousResult = undefined;\n        this.m_previousEnv = undefined;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get techniques(): IndexedTechnique[] {\n        return this.m_techniques;\n    }\n\n    /**\n     * Get the (current) array of techniques that have been created during decoding.\n     */\n    get decodedTechniques(): IndexedTechnique[] {\n        return this.m_techniques.map(makeDecodedTechnique);\n    }\n\n    private getOptimizedStyleSet(subSetKey: OptimizedSubSetKey): InternalStyle[] {\n        if (subSetKey.cachedStyleSet !== undefined) {\n            return subSetKey.cachedStyleSet;\n        }\n        let optimizedStyleSet = this.m_subStyleSetCache.get(subSetKey.key);\n        if (optimizedStyleSet !== undefined) {\n            subSetKey.cachedStyleSet = optimizedStyleSet;\n            return optimizedStyleSet;\n        }\n        optimizedStyleSet = this.createPreFilteredStyleSet(subSetKey);\n        this.m_subStyleSetCache.set(subSetKey.key, optimizedStyleSet);\n        subSetKey.cachedStyleSet = optimizedStyleSet;\n        return optimizedStyleSet;\n    }\n\n    private createPreFilteredStyleSet(subSetKey: OptimizedSubSetKey) {\n        const { layer, geometryType } = subSetKey;\n\n        return this.styleSet.filter(style => {\n            if (layer !== undefined && style.layer !== undefined && style.layer !== layer) {\n                return false;\n            }\n            if (\n                geometryType !== undefined &&\n                style._geometryType !== undefined &&\n                style._geometryType !== geometryType\n            ) {\n                return false;\n            }\n            return true;\n        });\n    }\n\n    /**\n     * Compile the `when` conditions found when traversting the styling rules.\n     */\n    private compileStyleSet() {\n        this.m_featureDependencies = [\"$layer\", \"$geometryType\", \"$zoom\"];\n\n        this.styleSet.forEach(style => this.compileStyle(style));\n\n        // Create optimized styleSets for each `layer` & `geometryType` tuple.\n        this.styleSet.forEach(style => {\n            this.getOptimizedStyleSet(\n                this.m_tmpOptimizedSubSetKey.set(style.layer, style._geometryType)\n            );\n        });\n    }\n\n    /**\n     * Compile the `when` conditions reachable from the given `style`.\n     *\n     * @param style The current style.\n     */\n    private compileStyle(style: InternalStyle) {\n        this.checkStyleDynamicAttributes(style);\n\n        if (style.when !== undefined) {\n            try {\n                style._whenExpr = Array.isArray(style.when)\n                    ? Expr.fromJSON(style.when, this.m_definitions, this.m_definitionExprCache)\n                    : // tslint:disable-next-line: deprecation\n                      Expr.parse(style.when);\n\n                // search for usages of '$layer' and any other\n                // special symbol that can be used to speed up the evaluation\n                // of the `when` conditions associated to this `style`.\n                this.m_styleConditionClassifier.classify(style);\n\n                if (style._whenExpr !== undefined) {\n                    style._whenExpr = style._whenExpr.intern(this.m_exprPool);\n                }\n\n                const deps = style._whenExpr.dependencies();\n\n                deps?.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                if (isJsonExpr(style.minZoomLevel)) {\n                    style._minZoomLevelExpr = Expr.fromJSON(style.minZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n\n                if (isJsonExpr(style.maxZoomLevel)) {\n                    style._maxZoomLevelExpr = Expr.fromJSON(style.maxZoomLevel).intern(\n                        this.m_exprPool\n                    );\n                }\n            } catch (err) {\n                logger.log(\n                    \"failed to evaluate expression\",\n                    JSON.stringify(style.when),\n                    \"error\",\n                    String(err)\n                );\n            }\n        }\n    }\n\n    /**\n     * Process a style (and its sub-styles) hierarchically to look for the technique that fits the\n     * current objects' environment. The attributes of the styles are assembled to create a unique\n     * technique for every object.\n     *\n     * @param env The objects environment, i.e. the attributes that are relevant for its\n     *            representation.\n     * @param style Current style (could also be top of stack).\n     * @param result The array of resulting techniques. There may be more than one technique per\n     *               object, resulting in multiple graphical objects for representation.\n     * @returns `true` if style has been found and processing is finished. `false` if not found, or\n     *          more than one technique should be applied.\n     */\n    private processStyle(env: Env, style: InternalStyle, result: Technique[]): boolean {\n        if (!this.checkZoomLevel(env, style)) {\n            return false;\n        }\n\n        if (\n            this.m_layer !== undefined &&\n            style.layer !== undefined &&\n            style.layer !== this.m_layer\n        ) {\n            return false;\n        }\n        if (\n            this.m_geometryType !== undefined &&\n            style._geometryType !== undefined &&\n            style._geometryType !== this.m_geometryType\n        ) {\n            return false;\n        }\n\n        if (style._whenExpr) {\n            try {\n                if (!style._whenExpr.evaluate(env, ExprScope.Condition, this.m_cachedResults)) {\n                    // Stop processing this styling rule. The `when` condition\n                    // associated with the current `style` evaluates to false so\n                    // no techinque defined by this style should be applied.\n                    return false;\n                }\n            } catch (error) {\n                logger.error(\n                    `failed to evaluate expression '${JSON.stringify(style.when)}': ${error}`\n                );\n                return false;\n            }\n        }\n\n        if (style.technique === undefined) {\n            return false;\n        }\n        // we found a technique!\n        if (style.technique !== \"none\") {\n            result.push(this.getTechniqueForStyleMatch(env, style));\n        }\n        // stop processing if \"final\" is set\n        return style.final === true;\n    }\n\n    private checkZoomLevel(env: Env, style: InternalStyle) {\n        if (style.minZoomLevel === undefined && style.maxZoomLevel === undefined) {\n            return true;\n        }\n\n        const zoomLevel = this.m_zoomLevel;\n        if (zoomLevel === undefined) {\n            return true;\n        }\n\n        if (style.minZoomLevel !== undefined) {\n            let minZoomLevel: Value = style.minZoomLevel;\n\n            if (style._minZoomLevelExpr) {\n                // the constraint is defined as expression, evaluate it and\n                // use its value\n                try {\n                    minZoomLevel = style._minZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._minZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof minZoomLevel === \"number\" && zoomLevel < minZoomLevel) {\n                return false;\n            }\n        }\n\n        if (style.maxZoomLevel !== undefined) {\n            let maxZoomLevel: Value = style.maxZoomLevel;\n\n            if (style._maxZoomLevelExpr) {\n                try {\n                    maxZoomLevel = style._maxZoomLevelExpr.evaluate(\n                        env,\n                        ExprScope.Condition,\n                        this.m_cachedResults\n                    );\n                } catch (error) {\n                    logger.error(\n                        `failed to evaluate expression '${JSON.stringify(\n                            style._maxZoomLevelExpr\n                        )}': ${error}`\n                    );\n                }\n            }\n\n            if (typeof maxZoomLevel === \"number\" && zoomLevel > maxZoomLevel) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private getTechniqueForStyleMatch(env: Env, style: InternalStyle) {\n        let technique: IndexedTechnique | undefined;\n        if (style._dynamicTechniques !== undefined) {\n            const dynamicAttributes = this.evaluateTechniqueProperties(style, env);\n            const key = this.getDynamicTechniqueKey(style, dynamicAttributes);\n            technique = style._dynamicTechniques!.get(key);\n            if (technique === undefined) {\n                technique = this.createTechnique(style, key, dynamicAttributes);\n                style._dynamicTechniques!.set(key, technique);\n            }\n        } else {\n            technique = style._staticTechnique;\n            if (technique === undefined) {\n                style._staticTechnique = technique = this.createTechnique(\n                    style,\n                    `${style._styleSetIndex}`,\n                    []\n                ) as IndexedTechnique;\n            }\n        }\n\n        if (technique._index === undefined) {\n            technique._index = this.m_techniques.length;\n            this.m_techniques.push(technique);\n        }\n        return technique;\n    }\n\n    private getDynamicTechniqueKey(\n        style: InternalStyle,\n        dynamicAttributes: Array<[string, Value]>\n    ) {\n        const dynamicAttrKey = dynamicAttributes\n            .map(([_attrName, attrValue]) => {\n                if (attrValue === undefined) {\n                    return \"U\";\n                } else {\n                    return JSON.stringify(attrValue);\n                }\n            })\n            .join(\":\");\n        return `${style._styleSetIndex!}:${dynamicAttrKey}`;\n    }\n\n    private checkStyleDynamicAttributes(style: InternalStyle) {\n        if (style._dynamicTechniqueAttributes !== undefined || style.technique === \"none\") {\n            return;\n        }\n\n        style._dynamicTechniqueAttributes = [];\n        style._dynamicFeatureAttributes = [];\n        style._dynamicForwardedAttributes = [];\n        style._staticAttributes = [];\n\n        const dynamicFeatureAttributes = style._dynamicFeatureAttributes;\n        const dynamicTechniqueAttributes = style._dynamicTechniqueAttributes;\n        const dynamicForwardedAttributes = style._dynamicForwardedAttributes;\n        const targetStaticAttributes = style._staticAttributes;\n\n        const techniqueDescriptor =\n            techniqueDescriptors[style.technique] || emptyTechniqueDescriptor;\n\n        const processAttribute = (attrName: string, attrValue: Value | JsonExpr | undefined) => {\n            if (attrValue === undefined) {\n                return;\n            }\n\n            if (isJsonExpr(attrValue)) {\n                attrValue = Expr.fromJSON(\n                    attrValue,\n                    this.m_definitions,\n                    this.m_definitionExprCache\n                ).intern(this.m_exprPool);\n            } else if (isInterpolatedPropertyDefinition(attrValue)) {\n                // found a property using an object-like interpolation definition.\n                attrValue = Expr.fromJSON(\n                    interpolatedPropertyDefinitionToJsonExpr(attrValue)\n                ).intern(this.m_exprPool);\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                const deps = attrValue.dependencies();\n\n                if (deps.featureState) {\n                    if (attrName !== \"enabled\") {\n                        logger.log(\"feature-state is not supported in this context\");\n                    } else {\n                        style._usesFeatureState = true;\n                    }\n                }\n\n                if (deps.properties.size === 0 && !attrValue.isDynamic()) {\n                    // no data-dependencies detected.\n                    attrValue = attrValue.evaluate(this.m_emptyEnv);\n                }\n            }\n\n            if (Expr.isExpr(attrValue)) {\n                let attrScope: AttrScope | undefined = (techniqueDescriptor.attrScopes as any)[\n                    attrName as any\n                ];\n\n                if (attrScope === undefined) {\n                    // Use [[AttrScope.TechniqueGeometry]] as default scope for the attribute.\n                    attrScope = AttrScope.TechniqueGeometry;\n                }\n\n                const deps = attrValue.dependencies();\n\n                deps.properties.forEach(prop => {\n                    if (!this.m_featureDependencies.includes(prop)) {\n                        this.m_featureDependencies.push(prop);\n                    }\n                });\n\n                switch (attrScope) {\n                    case AttrScope.FeatureGeometry:\n                        dynamicFeatureAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueGeometry:\n                        dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        break;\n                    case AttrScope.TechniqueRendering:\n                        if (deps.properties.size === 0) {\n                            dynamicForwardedAttributes.push([attrName, attrValue]);\n                        } else {\n                            dynamicTechniqueAttributes.push([attrName, attrValue]);\n                        }\n                        break;\n                }\n            } else if (attrValue !== undefined && attrValue !== null) {\n                targetStaticAttributes.push([attrName, attrValue]);\n            }\n        };\n\n        processAttribute(\"_category\", style.category);\n        processAttribute(\"_secondaryCategory\", (style as LineStyle).secondaryCategory);\n\n        processAttribute(\"renderOrder\", style.renderOrder);\n\n        // TODO: What the heck is that !?\n        processAttribute(\"label\", style.labelProperty);\n\n        // line & solid-line secondaryRenderOrder should be generic attr\n        // TODO: maybe just warn and force move it to `attr` ?\n        processAttribute(\"secondaryRenderOrder\", (style as LineStyle).secondaryRenderOrder);\n\n        if (style.attr !== undefined) {\n            for (const attrName in style.attr) {\n                if (!style.attr.hasOwnProperty(attrName)) {\n                    continue;\n                }\n                processAttribute(attrName, (style.attr as any)[attrName]);\n            }\n        }\n\n        if (dynamicTechniqueAttributes.length > 0) {\n            style._dynamicTechniques = new Map();\n        }\n    }\n\n    private evaluateTechniqueProperties(style: InternalStyle, env: Env): Array<[string, Value]> {\n        if (style._dynamicTechniqueAttributes === undefined) {\n            return [];\n        }\n\n        const instantiationContext = { env };\n\n        return style._dynamicTechniqueAttributes.map(([attrName, attrExpr]) => {\n            try {\n                if (attrExpr.isDynamic()) {\n                    const reducedExpr = attrExpr.instantiate(instantiationContext);\n                    return [attrName, reducedExpr];\n                }\n\n                const evaluatedValue = attrExpr.evaluate(\n                    env,\n                    ExprScope.Value,\n                    this.m_cachedResults\n                );\n                return [attrName, evaluatedValue];\n            } catch (error) {\n                logger.error(`failed to evaluate expression '${attrExpr.toJSON()}': ${error}`);\n                return [attrName, null];\n            }\n        });\n    }\n\n    private createTechnique(\n        style: InternalStyle,\n        key: string,\n        dynamicAttrs: Array<[string, Value]>\n    ) {\n        const technique: any = {};\n        technique.name = style.technique;\n        if (style._staticAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._staticAttributes) {\n                if (attrValue !== null) {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n        for (const [attrName, attrValue] of dynamicAttrs) {\n            if (attrValue !== null) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicFeatureAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicFeatureAttributes) {\n                technique[attrName] = attrValue;\n            }\n        }\n\n        if (style._dynamicForwardedAttributes !== undefined) {\n            for (const [attrName, attrValue] of style._dynamicForwardedAttributes) {\n                // tslint:disable-next-line: prefer-conditional-expression\n                if (Expr.isExpr(attrValue)) {\n                    technique[attrName] = attrValue.toJSON();\n                } else {\n                    technique[attrName] = attrValue;\n                }\n            }\n        }\n\n        technique._index = this.m_techniques.length;\n        technique._styleSetIndex = style._styleSetIndex!;\n        if (style.styleSet !== undefined) {\n            technique._styleSet = style.styleSet;\n        }\n        if (style._usesFeatureState !== undefined) {\n            technique._usesFeatureState = style._usesFeatureState;\n        }\n        this.m_techniques.push(technique as IndexedTechnique);\n        return technique as IndexedTechnique;\n    }\n}\n\nfunction computeDefaultRenderOrder(styleSet: InternalStyle[]) {\n    let techniqueRenderOrder = 0;\n    let styleSetIndex = 0;\n    for (const style of styleSet) {\n        style._styleSetIndex = styleSetIndex++;\n        if (style.technique !== undefined && style.renderOrder === undefined) {\n            style.renderOrder = techniqueRenderOrder++;\n        }\n    }\n}\n\nfunction resolveReferences(styleSet: StyleDeclaration[], definitions: Definitions | undefined) {\n    return styleSet.map(style => resolveStyleReferences(style, definitions));\n}\n\nfunction resolveStyleReferences(\n    style: StyleDeclaration,\n    definitions: Definitions | undefined\n): InternalStyle {\n    if (isJsonExpr(style)) {\n        if (!isJsonExprReference(style)) {\n            throw new Error(\"invalid expression in this context, only 'ref's are supported\");\n        }\n        // expand and instantiate references to style definitions.\n        const definitionName = style[1];\n        const def = definitions && definitions[definitionName];\n        if (!def) {\n            throw new Error(`invalid reference '${definitionName}' - not found`);\n        }\n        if (!isActualSelectorDefinition(def)) {\n            throw new Error(`invalid reference '${definitionName}' - expected style definition`);\n        }\n        // instantiate the style\n        return resolveStyleReferences(def, definitions);\n    }\n\n    return { ...style };\n}\n\n/**\n * Create transferable representation of dynamic technique.\n *\n * Converts  non-transferable [[Expr]]instances back to JSON form.\n */\nexport function makeDecodedTechnique(technique: IndexedTechnique): IndexedTechnique {\n    const result: Partial<IndexedTechnique> = {};\n    for (const attrName in technique) {\n        if (!technique.hasOwnProperty(attrName)) {\n            continue;\n        }\n        let attrValue: any = (technique as any)[attrName];\n        if (Expr.isExpr(attrValue)) {\n            attrValue = attrValue.toJSON();\n        }\n        (result as any)[attrName] = attrValue;\n    }\n    return (result as any) as IndexedTechnique;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { Env, Expr, ExprScope, MapEnv, Value } from \"./Expr\";\n\nconst logger = LoggerManager.instance.create(\"TechniqueAttr\");\n\nexport interface AttrEvaluationContext {\n    /**\n     * Expression evaluation environment containing variable bindings.\n     */\n    env: MapEnv;\n\n    /**\n     * Storage level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    storageLevel: number;\n\n    /**\n     * Zoom level of tile containing this feature.\n     *\n     * To be removed, when interpolators will be based on [[Expr]].\n     */\n    zoomLevel: number;\n\n    /**\n     * Optional, cache of expression results.\n     *\n     * @see [[Expr.evaluate]]\n     */\n    cachedExprResults?: Map<Expr, Value>;\n}\n\n/**\n * Evaluate feature attr _without_ default value.\n *\n * @returns actual value or `undefined`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined\n): T | undefined;\n\n/**\n * Evaluate feature attr _with_ default value.\n *\n * @returns actual value or `defaultValue`\n */\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue: T\n): T;\n\nexport function evaluateTechniqueAttr<T = Value>(\n    context: Env | AttrEvaluationContext,\n    attrValue: T | Expr | undefined,\n    defaultValue?: T\n): T | undefined {\n    const env = context instanceof Env ? context : context.env;\n\n    let evaluated: Value | undefined;\n    if (Expr.isExpr(attrValue)) {\n        try {\n            evaluated = attrValue.evaluate(\n                env,\n                ExprScope.Dynamic,\n                !(context instanceof Env) ? context.cachedExprResults : undefined\n            );\n        } catch (error) {\n            logger.error(`failed to evaluate expression '${JSON.stringify(attrValue)}': ${error}`);\n            evaluated = undefined;\n        }\n    } else {\n        evaluated = (attrValue as unknown) as Value;\n    }\n    if (evaluated === undefined || evaluated === null) {\n        return defaultValue;\n    } else {\n        return (evaluated as unknown) as T;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/ThemedTileDecoder\";\nexport * from \"./lib/TileDecoderService\";\nexport * from \"./lib/TilerService\";\nexport * from \"./lib/WorkerService\";\nexport * from \"./lib/WorkerServiceManager\";\nexport * from \"./lib/GeoJsonTiler\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson, ITiler } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\n\n// tslint:disable-next-line:no-var-requires\nconst geojsonvtExport = require(\"geojson-vt\");\n// to be able to run tests on nodejs\nconst geojsonvt = geojsonvtExport.default || geojsonvtExport;\n\ninterface GeoJsonVtIndex {\n    geojson: GeoJson;\n    getTile(level: number, column: number, row: number): any;\n}\n\nexport class GeoJsonTiler implements ITiler {\n    indexes: Map<string, GeoJsonVtIndex>;\n\n    constructor() {\n        this.indexes = new Map();\n    }\n\n    dispose() {\n        /* */\n    }\n\n    async connect(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    async registerIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (this.indexes.has(indexId)) {\n            return;\n        }\n        return this.updateIndex(indexId, input);\n    }\n\n    async updateIndex(indexId: string, input: URL | GeoJson): Promise<void> {\n        if (input instanceof URL) {\n            const response = await fetch(input.href);\n            if (!response.ok) {\n                throw new Error(\n                    `GeoJsonTiler: Unable to fetch ${input.href}: ${response.statusText}`\n                );\n            }\n            input = await response.json();\n        } else {\n            input = input as GeoJson;\n        }\n\n        const index = geojsonvt(input, {\n            maxZoom: 20, // max zoom to preserve detail on\n            indexMaxZoom: 5, // max zoom in the tile index\n            indexMaxPoints: 100000, // max number of points per tile in the tile index\n            tolerance: 3, // simplification tolerance (higher means simpler)\n            extent: 4096, // tile extent\n            buffer: 0, // tile buffer on each side\n            lineMetrics: false, // whether to calculate line metrics\n            promoteId: null, // name of a feature property to be promoted to feature.id\n            generateId: true, // whether to generate feature ids. Cannot be used with promoteId\n            debug: 0 // logging level (0, 1 or 2)\n        });\n        index.geojson = input;\n\n        this.indexes.set(indexId, index);\n    }\n\n    async getTile(indexId: string, tileKey: TileKey): Promise<{}> {\n        const index = this.indexes.get(indexId);\n        if (index === undefined) {\n            throw new Error(\"Tile not found\");\n        }\n        const tile = index.getTile(tileKey.level, tileKey.column, tileKey.row);\n        if (tile !== null) {\n            tile.layer = indexId;\n            for (const feature of tile.features) {\n                feature.originalGeometry = this.getOriginalGeometry(feature, index.geojson);\n            }\n        }\n        return tile || {};\n    }\n\n    private getOriginalGeometry(feature: any, geojson: GeoJson): any {\n        switch (geojson.type) {\n            case \"Point\":\n            case \"MultiPoint\":\n            case \"LineString\":\n            case \"MultiLineString\":\n            case \"Polygon\":\n            case \"MultiPolygon\":\n            case \"GeometryCollection\":\n                return geojson;\n            case \"Feature\":\n                return geojson.geometry;\n            case \"FeatureCollection\":\n                return geojson.features[feature.id].geometry;\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    FeatureGeometry,\n    GeometryCollection,\n    MapEnv,\n    ValueMap\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { GeoBox, GeoCoordinates, TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport { Vector2 } from \"three\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\n\nconst VT_JSON_EXTENTS = 4096;\n\ntype VTJsonPosition = [number, number];\n\nenum VTJsonGeometryType {\n    Unknown,\n    Point,\n    LineString,\n    Polygon\n}\n\ninterface VTJsonFeatureInterface {\n    geometry: VTJsonPosition[] | VTJsonPosition[][];\n    originalGeometry: FeatureGeometry | GeometryCollection;\n    id: string;\n    tags: ValueMap;\n    type: VTJsonGeometryType;\n}\n\ninterface VTJsonSourceInterface {\n    geometry: number[];\n    length: number;\n    id: string;\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    tags: ValueMap;\n    type: string;\n}\n\ninterface VTJsonTileInterface {\n    features: VTJsonFeatureInterface[];\n    maxX: number;\n    maxY: number;\n    minX: number;\n    minY: number;\n    numFeatures: number;\n    numPoints: number;\n    numSimplified: number;\n    source: VTJsonSourceInterface[];\n    transformed: boolean;\n    x: number;\n    y: number;\n    z: number;\n    layer: string;\n}\n\n/**\n * [[OmvDataAdapter]] id for [[VTJsonDataAdapter]].\n */\nexport const VTJsonDataAdapterId: string = \"vt-json\";\n\n/**\n * The class [[VTJsonDataAdapter]] converts VT-json data to geometries for the given\n * [[IGeometryProcessor]].\n */\nexport class VTJsonDataAdapter implements OmvDataAdapter {\n    id = VTJsonDataAdapterId;\n\n    constructor(\n        readonly m_processor: IGeometryProcessor,\n        private m_dataFilter?: OmvFeatureFilter,\n        readonly m_logger?: ILogger\n    ) {}\n\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        if (isArrayBufferLike(data)) {\n            return false;\n        }\n\n        const tile = data as VTJsonTileInterface;\n        if (\n            tile.features === undefined ||\n            tile.source === undefined ||\n            tile.x === undefined ||\n            tile.y === undefined ||\n            tile.z === undefined\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    process(tile: VTJsonTileInterface, tileKey: TileKey, geoBox: GeoBox) {\n        for (const feature of tile.features) {\n            const env = new MapEnv({\n                $layer: tile.layer,\n                $geometryType: this.convertGeometryType(feature.type),\n                $level: tileKey.level,\n                $zoom: Math.max(0, tileKey.level - (this.m_processor.storageLevelOffset || 0)),\n                $id: feature.id,\n                ...feature.tags\n            });\n\n            switch (feature.type) {\n                case VTJsonGeometryType.Point: {\n                    for (const pointGeometry of feature.geometry) {\n                        const x = (pointGeometry as VTJsonPosition)[0];\n                        const y = (pointGeometry as VTJsonPosition)[1];\n\n                        const position = new Vector2(x, y);\n\n                        this.m_processor.processPointFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [position],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.LineString: {\n                    let untiledPositions: GeoCoordinates[] | undefined;\n                    if (feature.originalGeometry.type === \"LineString\") {\n                        untiledPositions = [];\n                        for (const [x, y] of feature.originalGeometry.coordinates) {\n                            untiledPositions.push(new GeoCoordinates(y, x));\n                        }\n                    } else if (feature.originalGeometry.type === \"MultiLineString\") {\n                        untiledPositions = [];\n                        for (const lineGeometry of feature.originalGeometry\n                            .coordinates as VTJsonPosition[][]) {\n                            for (const [x, y] of lineGeometry) {\n                                untiledPositions.push(new GeoCoordinates(y, x));\n                            }\n                        }\n                    }\n\n                    for (const lineGeometry of feature.geometry as VTJsonPosition[][]) {\n                        const line: ILineGeometry = { positions: [], untiledPositions };\n                        for (const [x, y] of lineGeometry) {\n                            const position = new Vector2(x, y);\n                            line.positions.push(position);\n                        }\n\n                        this.m_processor.processLineFeature(\n                            tile.layer,\n                            VT_JSON_EXTENTS,\n                            [line],\n                            env,\n                            tileKey.level\n                        );\n                    }\n                    break;\n                }\n                case VTJsonGeometryType.Polygon: {\n                    const polygon: IPolygonGeometry = { rings: [] };\n                    for (const outline of feature.geometry as VTJsonPosition[][]) {\n                        const ring: Vector2[] = [];\n                        for (const [currX, currY] of outline) {\n                            const position = new Vector2(currX, currY);\n                            ring.push(position);\n                        }\n                        polygon.rings.push(ring);\n                    }\n\n                    this.m_processor.processPolygonFeature(\n                        tile.layer,\n                        VT_JSON_EXTENTS,\n                        [polygon],\n                        env,\n                        tileKey.level\n                    );\n\n                    break;\n                }\n                case VTJsonGeometryType.Unknown: {\n                    break;\n                }\n            }\n        }\n    }\n\n    private convertGeometryType(type: VTJsonGeometryType): string {\n        switch (type) {\n            case VTJsonGeometryType.Point:\n                return \"point\";\n            case VTJsonGeometryType.LineString:\n                return \"line\";\n            case VTJsonGeometryType.Polygon:\n                return \"polygon\";\n            default:\n                return \"unknown\";\n        }\n    }\n}\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = util.Buffer\n    ? function create_buffer_setup() {\n        return (Writer.create = function create_buffer() {\n            return new BufferWriter();\n        })();\n    }\n    /* istanbul ignore next */\n    : function create_array() {\n        return new Writer();\n    };\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = util.Buffer\n    ? function create_buffer_setup(buffer) {\n        return (Reader.create = function create_buffer(buffer) {\n            return util.Buffer.isBuffer(buffer)\n                ? new BufferReader(buffer)\n                /* istanbul ignore next */\n                : create_array(buffer);\n        })(buffer);\n    }\n    /* istanbul ignore next */\n    : create_array;\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { GeometryKind, GeometryKindSet } from \"@here/harp-datasource-protocol\";\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport {\n    OmvFeatureFilterDescription,\n    OmvFilterDescription,\n    OmvFilterFeatureAttribute,\n    OmvFilterString,\n    OmvGeometryType,\n    OmvLayerFilterDescription\n} from \"./OmvDecoderDefs\";\n\n/**\n * The `OmvFeatureFilter` is designed to work in an `OmvVisitor`/`visitOmv` combination (for\n * example, `OmvDecoder`). Returning `false` from any of the calls terminates processing of that\n * layer or feature.\n *\n * The `OmvFeatureFilter` is an \"early-opt-out\" filter, which cannot filter individual features,\n * because at that point the features are not really decoded. Use the [[OmvFeatureModifier]] to\n * filter for individual features.\n */\nexport interface OmvFeatureFilter {\n    /**\n     * Returns `true` if the filter contains rules for specific kinds.\n     */\n    hasKindFilter: boolean;\n\n    /**\n     * Return `false` if the layer should not be processed.\n     *\n     * @param layer Current layer.\n     * @param level Level of tile.\n     */\n    wantsLayer(layer: string, level: number): boolean;\n\n    /**\n     * Return `false` if the point feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the line feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if the polygon feature should not be processed.\n     *\n     * @param layer Current layer.\n     * @param feature Current feature.\n     * @param level Level of tile.\n     */\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean;\n\n    /**\n     * Return `false` if kind of object is not enabled and the geometry should not be created.\n     *\n     * @param {(string | string[])} kind Tag \"kind\" of the tag.\n     * @returns {boolean}\n     */\n    wantsKind(kind: string | string[]): boolean;\n}\n\n/**\n * The `OmvFeatureModifier` can be used to filter individual features. It gets passed in the [[Env]]\n * of the feature, which contains all the values that can be searched for in a style. If a filter\n * function returns false, the feature is ignored, and no geometry is being created.\n *\n * In addition to pure filtering, the `OmvFeatureModifier` can also modify the [[Env]] of the\n * feature, or even add new properties to the feature, for example, traffic states. The\n * `OmvFeatureModifier` is executed before the styles are selected, so the geometry is created with\n * the modified feature properties.\n */\nexport interface OmvFeatureModifier {\n    /**\n     * Check if the point feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of point feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPointFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the line feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of line feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessLineFeature(layer: string, env: MapEnv, level: number): boolean;\n\n    /**\n     * Check if the polygon feature described by `env` should be processed. The properties can be\n     * modified or added to.\n     *\n     * @param layer Current layer.\n     * @param env Properties of polygon feature.\n     * @param level Level of tile.\n     * @returns `false` to ignore feature.\n     */\n    doProcessPolygonFeature(layer: string, env: MapEnv, level: number): boolean;\n}\n\n/**\n * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as well\n * as an [[OmvFeatureModifier]].\n *\n */\nexport class OmvFeatureFilterDescriptionBuilder {\n    private m_processLayersDefault: boolean = true;\n    private m_processPointsDefault: boolean = true;\n    private m_processLinesDefault: boolean = true;\n    private m_processPolygonsDefault: boolean = true;\n\n    private readonly m_layersToProcess = new Array<OmvLayerFilterDescription>();\n    private readonly m_layersToIgnore = new Array<OmvLayerFilterDescription>();\n    private readonly m_pointsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_ignoredPoints = new Array<OmvFilterDescription>();\n    private readonly m_linesToProcess = new Array<OmvFilterDescription>();\n    private readonly m_linesToIgnore = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToProcess = new Array<OmvFilterDescription>();\n    private readonly m_polygonsToIgnore = new Array<OmvFilterDescription>();\n\n    private m_kindsToProcess: string[] = [];\n    private m_kindsToIgnore: string[] = [];\n\n    /**\n     * Builds an `OmvFilterDescription` (internal type) that specifies an [[OmvFeatureFilter]] as\n     * well as an [[OmvFeatureModifier]].\n     *\n     * @param processLayersDefault If `true`, all unspecified layers will be processed. If `false`,\n     * all unspecified layers will be ignored.\n     * @param processPointsDefault If `true`, all unspecified point features will be processed. If\n     * `false`, all unspecified point features will be ignored.\n     * @param processLinesDefault If `true`, all unspecified line features will be processed. If\n     * `false`, all unspecified line features will be ignored.\n     * @param processPolygonsDefault If `true`, all unspecified polygon features will be processed.\n     * If `false`, all unspecified polygon features will be ignored.\n     */\n    constructor(\n        options?: OmvFeatureFilterDescriptionBuilder.OmvFeatureFilterDescriptionBuilderOptions\n    ) {\n        if (options) {\n            this.m_processLayersDefault =\n                options.processLayersDefault !== undefined ? options.processLayersDefault : true;\n            this.m_processPointsDefault =\n                options.processPointsDefault !== undefined ? options.processPointsDefault : true;\n            this.m_processLinesDefault =\n                options.processLinesDefault !== undefined ? options.processLinesDefault : true;\n            this.m_processPolygonsDefault =\n                options.processPolygonsDefault !== undefined\n                    ? options.processPolygonsDefault\n                    : true;\n        }\n    }\n\n    /**\n     * Add a layer that should be processed.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    processLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToProcess.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a layer that should be ignored.\n     *\n     * @param layer Layer name to be matched.\n     * @param match Match condition.\n     */\n    ignoreLayer(\n        layer: string,\n        match = OmvFilterString.StringMatch.Match,\n        minLevel: number = 0,\n        maxLevel: number = Infinity\n    ) {\n        this.m_layersToIgnore.push({\n            name: { value: layer, match },\n            minLevel,\n            maxLevel\n        });\n    }\n\n    /**\n     * Add a valid point feature.\n     *\n     * @param options Feature options.\n     */\n    processPoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add valid point features.\n     *\n     * @param options Multi feature options.\n     */\n    processPoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_pointsToProcess, options);\n    }\n\n    /**\n     * Add a point feature that should be ignored.\n     *\n     * @param options Feature options.\n     */\n    ignorePoint(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add point features that should be ignored.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePoints(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_ignoredPoints, options);\n    }\n\n    /**\n     * Add a valid line feature.\n     *\n     * @param options Feature options.\n     */\n    processLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Add valid line features.\n     *\n     * @param options Multi feature options.\n     */\n    processLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToProcess, options);\n    }\n\n    /**\n     * Ignore a line feature.\n     *\n     * @param options Feature options.\n     */\n    ignoreLine(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Ignore line features.\n     *\n     * @param options Multi feature options.\n     */\n    ignoreLines(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_linesToIgnore, options);\n    }\n\n    /**\n     * Add a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    processPolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Add valid polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    processPolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToProcess, options);\n    }\n\n    /**\n     * Ignore a valid polygon feature.\n     *\n     * @param options Feature options.\n     */\n    ignorePolygon(options: OmvFeatureFilterDescriptionBuilder.FeatureOption) {\n        this.addItem(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Ignore polygon features.\n     *\n     * @param options Multi feature options.\n     */\n    ignorePolygons(options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption) {\n        this.addItems(this.m_polygonsToIgnore, options);\n    }\n\n    /**\n     * Add all the specified strings as \"enabledKinds\".\n     *\n     * @param {string[]} enabledKinds List of kinds that should be generated.\n     */\n    processKinds(enabledKinds: string[]) {\n        this.m_kindsToProcess = this.m_kindsToProcess.concat(enabledKinds);\n    }\n\n    /**\n     * Add all the specified strings as \"disabledKinds\".\n     *\n     * @param {string[]} disabledKinds List of kinds that should _not_ be generated.\n     */\n    ignoreKinds(disabledKinds: string[]) {\n        this.m_kindsToIgnore = this.m_kindsToIgnore.concat(disabledKinds);\n    }\n\n    /**\n     * Create a filter description that can be passed as an option to the [[OmvDataSource]].\n     */\n    createDescription(): OmvFeatureFilterDescription {\n        return {\n            processLayersDefault: this.m_processLayersDefault,\n            processPointsDefault: this.m_processPointsDefault,\n            processLinesDefault: this.m_processLinesDefault,\n            processPolygonsDefault: this.m_processPolygonsDefault,\n\n            layersToProcess: this.m_layersToProcess,\n            layersToIgnore: this.m_layersToIgnore,\n            pointsToProcess: this.m_pointsToProcess,\n            pointsToIgnore: this.m_ignoredPoints,\n            linesToProcess: this.m_linesToProcess,\n            linesToIgnore: this.m_linesToIgnore,\n            polygonsToProcess: this.m_polygonsToProcess,\n            polygonsToIgnore: this.m_polygonsToIgnore,\n\n            kindsToProcess: this.m_kindsToProcess,\n            kindsToIgnore: this.m_kindsToIgnore\n        };\n    }\n\n    private addItem(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.FeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomType !== undefined\n                    ? Array.isArray(options.geomType)\n                        ? options.geomType\n                        : [options.geomType]\n                    : undefined,\n            classes: [\n                {\n                    value: options.featureClass,\n                    match:\n                        options.matchClass === undefined\n                            ? OmvFilterString.StringMatch.Match\n                            : options.matchClass\n                }\n            ],\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n\n    private addItems(\n        items: OmvFilterDescription[],\n        options: OmvFeatureFilterDescriptionBuilder.MultiFeatureOption\n    ) {\n        if (options.minLevel === undefined || isNaN(options.minLevel)) {\n            options.minLevel = 0;\n        }\n        if (options.maxLevel === undefined || isNaN(options.maxLevel)) {\n            options.maxLevel = Infinity;\n        }\n\n        const item: OmvFilterDescription = {\n            layerName: {\n                value: options.layer,\n                match:\n                    options.matchLayer === undefined\n                        ? OmvFilterString.StringMatch.Match\n                        : options.matchLayer\n            },\n            geometryTypes:\n                options.geomTypes !== undefined\n                    ? Array.isArray(options.geomTypes)\n                        ? options.geomTypes\n                        : [options.geomTypes]\n                    : undefined,\n            classes: options.featureClasses,\n            minLevel: options.minLevel,\n            maxLevel: options.maxLevel,\n            featureAttribute: options.featureAttribute\n        };\n\n        items.push(item);\n    }\n}\n\nexport namespace OmvFeatureFilterDescriptionBuilder {\n    /**\n     * Options for `OmvFeatureFilterDescriptionBuilder`.\n     */\n    export interface OmvFeatureFilterDescriptionBuilderOptions {\n        /**\n         * If `true`, all unspecified layers will be processed. If `false`, all unspecified layers\n         * will be ignored.\n         */\n        processLayersDefault?: boolean;\n        /**\n         * If `true`, all unspecified point features will be processed. If `false`, all unspecified\n         * point features will be ignored.\n         */\n        processPointsDefault?: boolean;\n        /**\n         * If `true`, all unspecified line features will be processed. If `false`, all unspecified\n         * line\n         * features will be ignored.\n         */\n        processLinesDefault?: boolean;\n        /**\n         * If `true`, all unspecified polygon features will be processed. If `false`, all\n         * unspecified polygon features will be ignored.\n         */\n        processPolygonsDefault?: boolean;\n    }\n\n    /**\n     * Description of a single feature.\n     */\n    export interface FeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomType: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional class to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClass: string;\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Match condition for `featureClass`.\n         */\n        matchClass?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n\n    /**\n     * Description for multiple features.\n     */\n    export interface MultiFeatureOption {\n        /**\n         * Layer name to be matched.\n         */\n        layer: string;\n        /**\n         * Optional geometry type to be limited to. If specified, but does not match, the feature is\n         * ignored.\n         */\n        geomTypes?: OmvGeometryType | OmvGeometryType[] | undefined;\n        /**\n         * Optional classes to match. If specified, but does not match, the feature is ignored.\n         */\n        featureClasses?: OmvFilterString[];\n        /**\n         * Match condition for the layer name.\n         */\n        matchLayer?: OmvFilterString.StringMatch;\n        /**\n         * Minimum tile level to match.\n         */\n        minLevel?: number;\n        /**\n         * Maximum tile level to match.\n         */\n        maxLevel?: number;\n        /**\n         * Feature attribute to match.\n         */\n        featureAttribute?: OmvFilterFeatureAttribute;\n    }\n}\n\n/**\n * `OmvFeatureFilter` implementation that uses a `OmvFeatureFilterDescription` to filter `TileData`\n * features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureFilter implements OmvFeatureFilter {\n    private static matchLayer(\n        layer: string,\n        layerItems: OmvLayerFilterDescription[],\n        level: number\n    ): boolean {\n        for (const layerItem of layerItems) {\n            if (level < layerItem.minLevel || level > layerItem.maxLevel) {\n                continue;\n            }\n\n            if (OmvFilterString.matchString(layer, layerItem.name)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private disabledKinds: GeometryKindSet | undefined;\n    private enabledKinds: GeometryKindSet | undefined;\n\n    constructor(private description: OmvFeatureFilterDescription) {\n        if (this.description.kindsToProcess.length > 0) {\n            this.enabledKinds = new GeometryKindSet(\n                this.description.kindsToProcess as GeometryKind[]\n            );\n        }\n        if (this.description.kindsToIgnore.length > 0) {\n            this.disabledKinds = new GeometryKindSet(\n                this.description.kindsToIgnore as GeometryKind[]\n            );\n        }\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToProcess, level)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureFilter.matchLayer(layer, this.description.layersToIgnore, level)) {\n            return false;\n        }\n\n        return this.description.processLayersDefault;\n    }\n\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPointsDefault\n        );\n    }\n\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processLinesDefault\n        );\n    }\n\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.wantsFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            geometryType,\n            level,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    wantsKind(kind: string | string[]): boolean {\n        // undefined -> no way to filter\n        if (kind === undefined) {\n            return true;\n        }\n\n        return (\n            !(\n                this.disabledKinds !== undefined &&\n                this.disabledKinds.hasOrIntersects(kind as GeometryKind)\n            ) ||\n            (this.enabledKinds !== undefined &&\n                this.enabledKinds.hasOrIntersects(kind as GeometryKind))\n        );\n    }\n\n    get hasKindFilter(): boolean {\n        return this.enabledKinds !== undefined || this.disabledKinds !== undefined;\n    }\n\n    private wantsFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        geometryType: OmvGeometryType,\n        level: number,\n        defaultResult: boolean\n    ): boolean {\n        for (const item of itemsToProcess) {\n            if (level < item.minLevel || level > item.maxLevel) {\n                continue;\n            }\n\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return true;\n            }\n        }\n\n        for (const item of itemsToIgnore) {\n            if (!OmvFilterString.matchString(layer, item.layerName)) {\n                // this rule is not for this layer\n                continue;\n            }\n\n            if (item.geometryTypes !== undefined && item.geometryTypes.indexOf(geometryType) >= 0) {\n                return false;\n            }\n        }\n\n        return defaultResult;\n    }\n}\n\n/**\n * An [[OmvFeatureFilter]] implementation that delegates all filter decision\n * returning `true` for any predicate if all delegates return `true`.\n */\nexport class ComposedDataFilter implements OmvFeatureFilter {\n    constructor(readonly filters: OmvFeatureFilter[]) {}\n\n    get hasKindFilter() {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.hasKindFilter,\n            true\n        );\n    }\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLayer(layer, level),\n            true\n        );\n    }\n    wantsPointFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPointFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsLineFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsLineFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsPolygonFeature(layer: string, geometryType: OmvGeometryType, level: number): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsPolygonFeature(layer, geometryType, level),\n            true\n        );\n    }\n    wantsKind(kind: string | string[]): boolean {\n        return this.filters.reduce<boolean>(\n            (result, filter) => result && filter.wantsKind(kind),\n            true\n        );\n    }\n}\n/**\n * `OmvFeatureModifier` implementation that uses a `OmvFeatureFilterDescription` to filter\n * `TileData` features before they are completely decoded.\n *\n * @hidden\n */\nexport class OmvGenericFeatureModifier implements OmvFeatureModifier {\n    static matchItems(\n        layerName: string,\n        featureClass: string,\n        items: OmvFilterDescription[]\n    ): boolean {\n        for (const item of items) {\n            if (item.classes !== undefined) {\n                if (!OmvFilterString.matchString(layerName, item.layerName)) {\n                    continue;\n                }\n                for (const matchClass of item.classes) {\n                    if (OmvFilterString.matchString(featureClass, matchClass)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        return false;\n    }\n\n    static matchAttribute(layerName: string, env: MapEnv, items: OmvFilterDescription[]): boolean {\n        for (const item of items) {\n            if (item.featureAttribute !== undefined) {\n                if (\n                    OmvFilterString.matchString(layerName, item.layerName) &&\n                    env.lookup(item.featureAttribute.key) === item.featureAttribute.value\n                ) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    constructor(private description: OmvFeatureFilterDescription) {}\n\n    doProcessPointFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.pointsToProcess,\n            this.description.pointsToIgnore,\n            layer,\n            env,\n            this.description.processPointsDefault\n        );\n    }\n\n    doProcessLineFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.linesToProcess,\n            this.description.linesToIgnore,\n            layer,\n            env,\n            this.description.processLinesDefault\n        );\n    }\n\n    doProcessPolygonFeature(layer: string, env: MapEnv): boolean {\n        return this.doProcessFeature(\n            this.description.polygonsToProcess,\n            this.description.polygonsToIgnore,\n            layer,\n            env,\n            this.description.processPolygonsDefault\n        );\n    }\n\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        if (layer === undefined || (itemsToProcess.length === 0 && itemsToIgnore.length === 0)) {\n            return defaultResult;\n        }\n\n        let featureClass: string | undefined;\n        const featureClassThing = env.lookup(\"class\");\n\n        if (featureClassThing !== undefined && featureClassThing !== null) {\n            featureClass = featureClassThing.toString();\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToProcess)\n        ) {\n            return true;\n        }\n\n        if (\n            featureClass &&\n            OmvGenericFeatureModifier.matchItems(layer, featureClass, itemsToIgnore)\n        ) {\n            return false;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToProcess)) {\n            return true;\n        }\n\n        if (OmvGenericFeatureModifier.matchAttribute(layer, env, itemsToIgnore)) {\n            return false;\n        }\n\n        return defaultResult;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { BufferAttribute, BufferGeometry, Vector3 } from \"three\";\n\nconst tmpVectorA = new Vector3();\nconst tmpVectorB = new Vector3();\nconst tmpVectorC = new Vector3();\n\n/**\n * The [[SubdivisionModifier]] subdivides triangle mesh geometries.\n */\nexport abstract class SubdivisionModifier {\n    /**\n     * Constructs a new [[SubdivisionModifier]].\n     */\n    constructor() {\n        // nothing to do\n    }\n\n    /**\n     * Subdivides the faces of the given [[THREE.BufferGeometry]].\n     *\n     * This method modifies (in-place) the vertices and the faces of the geometry.\n     * Please note that only the vertex position and their UV coordinates are subdivided.\n     * Normals, vertex colors and other attributes are left unmodified.\n     *\n     * @param geometry The [[THREE.BufferGeometry]] to subdivide.\n     */\n    modify(geometry: BufferGeometry): BufferGeometry {\n        const positionAttr = geometry.getAttribute(\"position\") as BufferAttribute;\n        const position = Array.from(positionAttr.array);\n\n        const uvAttr = geometry.getAttribute(\"uv\") as BufferAttribute;\n        const uv = uvAttr !== undefined ? Array.from(uvAttr.array) : undefined;\n\n        const edgeAttr = geometry.getAttribute(\"edge\") as BufferAttribute;\n        const edge = edgeAttr !== undefined ? Array.from(edgeAttr.array) : undefined;\n\n        const wallAttr = geometry.getAttribute(\"wall\") as BufferAttribute;\n        const wall = wallAttr !== undefined ? Array.from(wallAttr.array) : undefined;\n\n        const indexAttr = geometry.getIndex() as BufferAttribute;\n        const indices = Array.from(indexAttr.array);\n\n        // A cache containing the indices of the vertices added\n        // when subdiving the faces of the geometry.\n        const cache = new Map<string, number>();\n\n        /**\n         * Returns the index of the vertex positioned in the middle of the given vertices.\n         */\n        function middleVertex(i: number, j: number): number {\n            // Build a unique `key` for the pair of indices `(i, j)`.\n            const key = `${Math.min(i, j)}_${Math.max(i, j)}`;\n\n            const h = cache.get(key);\n\n            if (h !== undefined) {\n                // Nothing to do, a vertex in the middle of (i, j) was already created.\n                return h;\n            }\n\n            // The position of the new vertex.\n            tmpVectorA.set(position[i * 3], position[i * 3 + 1], position[i * 3 + 2]);\n            tmpVectorB.set(position[j * 3], position[j * 3 + 1], position[j * 3 + 2]);\n            tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n\n            // The index of the new vertex.\n            const index = position.length / 3;\n            position.push(...tmpVectorC.toArray());\n            // Cache the position of the new vertex.\n            cache.set(key, index);\n\n            // The uvs of the new vertex.\n            if (uv !== undefined) {\n                tmpVectorA.set(uv[i * 2], uv[i * 2 + 1], 0);\n                tmpVectorB.set(uv[j * 2], uv[j * 2 + 1], 0);\n                tmpVectorC.lerpVectors(tmpVectorA, tmpVectorB, 0.5);\n                uv.push(tmpVectorC.x, tmpVectorC.y);\n            }\n\n            // The edge and wall attributes of the new vertex.\n            // If a new vertex has been introduced between i and j, connect the elements\n            // accordingly.\n            if (edge !== undefined) {\n                if (edge[i] === j) {\n                    edge.push(j);\n                    edge[i] = index;\n                } else if (edge[j] === i) {\n                    edge.push(i);\n                    edge[j] = index;\n                } else {\n                    edge.push(-1);\n                }\n            }\n            if (wall !== undefined) {\n                if (wall[i] === j) {\n                    wall.push(j);\n                    wall[i] = index;\n                } else if (wall[j] === i) {\n                    wall.push(i);\n                    wall[j] = index;\n                } else {\n                    wall.push(-1);\n                }\n            }\n\n            return index;\n        }\n\n        const newIndices = [];\n        while (indices.length >= 3) {\n            const v0 = indices.shift()!;\n            const v1 = indices.shift()!;\n            const v2 = indices.shift()!;\n\n            tmpVectorA.set(position[v0 * 3], position[v0 * 3 + 1], position[v0 * 3 + 2]);\n            tmpVectorB.set(position[v1 * 3], position[v1 * 3 + 1], position[v1 * 3 + 2]);\n            tmpVectorC.set(position[v2 * 3], position[v2 * 3 + 1], position[v2 * 3 + 2]);\n\n            const edgeToSplit = this.shouldSplitTriangle(tmpVectorA, tmpVectorB, tmpVectorC);\n\n            switch (edgeToSplit) {\n                case 0: {\n                    const v3 = middleVertex(v0, v1);\n                    indices.push(v0, v3, v2, v3, v1, v2);\n                    break;\n                }\n\n                case 1: {\n                    const v3 = middleVertex(v1, v2);\n                    indices.push(v0, v1, v3, v0, v3, v2);\n                    break;\n                }\n\n                case 2: {\n                    const v3 = middleVertex(v2, v0);\n                    indices.push(v0, v1, v3, v3, v1, v2);\n                    break;\n                }\n\n                case undefined: {\n                    newIndices.push(v0, v1, v2);\n                    break;\n                }\n\n                default:\n                    throw new Error(\"failed to subdivide the given geometry\");\n            }\n        }\n\n        positionAttr.array = new Float32Array(position);\n        positionAttr.count = position.length / positionAttr.itemSize;\n        positionAttr.needsUpdate = true;\n\n        geometry.setIndex(newIndices);\n\n        if (uv !== undefined) {\n            uvAttr.array = new Float32Array(uv);\n            uvAttr.count = uv.length / uvAttr.itemSize;\n            uvAttr.needsUpdate = true;\n        }\n\n        if (edge !== undefined) {\n            edgeAttr.array = new Float32Array(edge);\n            edgeAttr.count = edge.length / edgeAttr.itemSize;\n            edgeAttr.needsUpdate = true;\n        }\n\n        return geometry;\n    }\n\n    /**\n     * Returns if the given triangle should be subdivide.\n     *\n     * Implementations of this function should return the index of\n     * the edge of the triangle to split (0, 1, or 2) or undefined if\n     * the triangle doesn't need to be subdivided.\n     *\n     * @param a The position of the first vertex of the triangle.\n     * @param b The position of the second vertex of the triangle.\n     * @param c The position of the third vertex of the triangle.\n     */\n    protected abstract shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare let self: Worker & {\n    importScripts(..._scripts: string[]): void;\n};\n\nself.importScripts(\"three.min.js\");\n\nimport { OmvTileDecoderService } from \"@here/harp-omv-datasource/index-worker\";\n\nOmvTileDecoderService.start();\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/OmvDecoder\";\nexport * from \"./lib/OmvTiler\";\nexport * from \"./lib/OmvDecoderDefs\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./lib/GroupedPriorityList\";\nexport * from \"./lib/Logger\";\nexport * from \"./lib/Math2D\";\nexport * from \"./lib/MathUtils\";\nexport * from \"./lib/Mixins\";\nexport * from \"./lib/assert\";\nexport * from \"./lib/CachedResource\";\nexport * from \"./lib/ContextLogger\";\nexport * from \"./lib/PerformanceTimer\";\nexport * from \"./lib/ObjectUtils\";\nexport * from \"./lib/OptionsUtils\";\nexport * from \"./lib/UriResolver\";\nexport * from \"./lib/UrlUtils\";\nexport * from \"./lib/Functions\";\nexport * from \"./lib/SampleBilinear\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * A `PriorityListElement` has a priority to assist in sorting. The idea is that the items in a\n * grouped priority list will not modify their priority during processing to such an amount, that\n * they will change into another group. Smaller lists are smaller to sort, and in case of resource\n * limitation (maximum number of rendered objects reached), not all items have to be sorted at all.\n */\nexport interface PriorityListElement {\n    /**\n     * The integer value of this priority is used to group objects of \"same\" priority.\n     */\n    priority: number;\n}\n\n/**\n * The `PriorityListGroup` contains a list of [[PriorityListElement]]s that all have the same\n * (integer) priority.\n */\nexport class PriorityListGroup<T extends PriorityListElement> {\n    constructor(readonly priority: number, public elements: T[] = new Array()) {}\n\n    /**\n     * Create and return a deep copy of the `PriorityListGroup<T>`.\n     *\n     * @returns A clone of the `PriorityListGroup<T>`.\n     */\n    clone(): PriorityListGroup<T> {\n        return new PriorityListGroup<T>(this.priority, this.elements.slice());\n    }\n\n    /**\n     * Removes an element from the group.\n     * @param element The element to remove.\n     * @returns true if the element was removed, false if it was not found in the group.\n     */\n    remove(element: T): boolean {\n        const foundIndex = this.elements.indexOf(element);\n        if (foundIndex === -1) {\n            return false;\n        }\n        this.elements.splice(foundIndex, 1);\n        return true;\n    }\n}\n\n/**\n * The `PriorityListGroupMap` is a map to map the (integer) priority to a [[PriorityListGroup]].\n */\nexport type PriorityListGroupMap<T extends PriorityListElement> = Map<number, PriorityListGroup<T>>;\n\n/**\n * The `GroupedPriorityList` contains a [[PriorityListGroupMap]] to manage a larger number of items\n * in priority groups.\n */\nexport class GroupedPriorityList<T extends PriorityListElement> {\n    readonly groups: PriorityListGroupMap<T> = new Map();\n    /**\n     * Add an element to the `GroupedPriorityList`. Selects group based on the elements priority.\n     *\n     * @param element Element to be added.\n     */\n    add(element: T): void {\n        this.getGroup(element.priority).elements.push(element);\n    }\n\n    /**\n     * Remove an element from the `GroupedPriorityList`.\n     *\n     * Note: It is required that the priority is the same as it was when the element has been added.\n     * Otherwise, the removal will fail.\n     *\n     * @param element Element to be removed.\n     * @returns `True` if the element was removed, `false` otherwise.\n     */\n    remove(element: T): boolean {\n        const group = this.findGroup(element.priority);\n        if (group !== undefined && group.remove(element)) {\n            if (group.elements.length === 0) {\n                this.groups.delete(group.priority);\n            }\n\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Remove all internal [[PriorityListGroup]]s.\n     */\n    clear(): void {\n        this.groups.clear();\n    }\n\n    /**\n     * Merge another [[GroupedPriorityList]] into this one.\n     *\n     * @param other Other group to merge.\n     */\n    merge(other: GroupedPriorityList<T>): GroupedPriorityList<T> {\n        for (const otherGroup of other.groups) {\n            const group = this.findGroup(otherGroup[1].priority);\n            if (group === undefined) {\n                this.groups.set(Math.floor(otherGroup[1].priority), otherGroup[1].clone());\n                continue;\n            }\n            group.elements = group.elements.concat(otherGroup[1].elements);\n        }\n        return this;\n    }\n\n    clone(): GroupedPriorityList<T> {\n        const clone = new GroupedPriorityList<T>();\n        for (const [priority, group] of this.groups) {\n            clone.groups.set(priority, group.clone());\n        }\n        return clone;\n    }\n\n    /**\n     * Apply function to all elements in this `GroupedPriorityList`.\n     *\n     * @param {(element: T) => void} fun Function to apply.\n     */\n    forEach(fun: (element: T) => void): void {\n        for (const group of this.groups) {\n            group[1].elements.forEach(fun);\n        }\n    }\n\n    /**\n     * Count the number of elements in this `GroupedPriorityList`.\n     */\n    count(): number {\n        let n = 0;\n        for (const group of this.groups) {\n            n += group[1].elements.length;\n        }\n        return n;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private findGroup(priority: number): PriorityListGroup<T> | undefined {\n        const normalizedPriority = Math.floor(priority);\n        const group = this.groups.get(normalizedPriority);\n        return group;\n    }\n\n    /**\n     * Get group of elements that have the same (integer) priority.\n     *\n     * @param priority The priority to retrieve all elements from.\n     */\n    private getGroup(priority: number): PriorityListGroup<T> {\n        let group = this.findGroup(priority);\n\n        if (group === undefined) {\n            const normalizedPriority = Math.floor(priority);\n            group = new PriorityListGroup<T>(normalizedPriority);\n            this.groups.set(group.priority, group);\n        }\n\n        return group;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport * from \"./ConsoleChannel\";\nexport * from \"./IChannel\";\nexport * from \"./ILogger\";\nexport * from \"./Logger\";\nexport * from \"./LoggerManager\";\nexport * from \"./MultiChannel\";\nexport * from \"./WorkerChannel\";\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { LoggerManagerImpl } from \"./LoggerManagerImpl\";\n\n/**\n * The LoggerManager class implements a singleton object that handles logging.\n *\n * Example:\n *\n * ```typescript\n *\n * const logger = LoggerManager.instance.create(\"MyFontLoaderClass\");\n * if (missingFonts.length > 0) {\n *     logger.error(\"These fonts can not be loaded: \", missingFonts);\n * } else {\n *     logger.log(\"All fonts have been loaded.\");\n * }\n * ```\n */\nexport class LoggerManager {\n    private static m_instance: ILoggerManager;\n\n    static get instance(): ILoggerManager {\n        return this.m_instance || (this.m_instance = new LoggerManagerImpl());\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ConsoleChannel } from \"./ConsoleChannel\";\nimport { IChannel } from \"./IChannel\";\nimport { ILogger, LoggerOptions, LogLevel } from \"./ILogger\";\nimport { ILoggerManager } from \"./ILoggerManager\";\nimport { Logger } from \"./Logger\";\nimport { WorkerChannel } from \"./WorkerChannel\";\n\n/**\n * LoggerManagerImpl is the class for the singleton instance of the logger manager.\n * It handles channels and loggers.\n */\n\nexport class LoggerManagerImpl implements ILoggerManager {\n    channel: IChannel;\n    private readonly m_loggers: ILogger[] = [];\n    private m_levelSetForAll?: LogLevel;\n\n    constructor() {\n        this.channel =\n            typeof self === \"undefined\" || typeof self.document !== \"undefined\"\n                ? new ConsoleChannel()\n                : new WorkerChannel();\n    }\n\n    getLoggerNames(): string[] {\n        return this.m_loggers.map(logger => logger.name);\n    }\n\n    getLogger(name: string): ILogger | undefined {\n        return this.m_loggers.find(logger => logger.name === name);\n    }\n\n    create(loggerName: string, options: LoggerOptions = {}): ILogger {\n        if (\n            this.m_levelSetForAll !== undefined &&\n            (options.level === undefined || options.level < this.m_levelSetForAll)\n        ) {\n            options.level = this.m_levelSetForAll;\n        }\n        const logger = new Logger(loggerName, this.channel, options);\n        this.m_loggers.push(logger);\n        return logger;\n    }\n\n    dispose(logger: ILogger) {\n        const found = this.m_loggers.indexOf(logger);\n        if (found < 0) {\n            throw new Error(`Cannot unregister \"${logger}\" : no such logger registered.`);\n        }\n        this.m_loggers.splice(found, 1);\n    }\n\n    updateAll(options: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            logger.update(options);\n        }\n    }\n\n    update(loggerName: string, config: LoggerOptions) {\n        for (const logger of this.m_loggers) {\n            if (logger.name === loggerName) {\n                logger.update(config);\n            }\n        }\n    }\n\n    enableAll(enabled: boolean) {\n        for (const logger of this.m_loggers) {\n            logger.enabled = enabled;\n        }\n    }\n\n    enable(loggerName: string, value: boolean) {\n        this.update(loggerName, { enabled: value });\n    }\n\n    setLogLevelForAll(level: LogLevel) {\n        this.m_levelSetForAll = level;\n        for (const logger of this.m_loggers) {\n            logger.level = level;\n        }\n    }\n\n    setLogLevel(loggerName: string, level: LogLevel) {\n        this.update(loggerName, { level });\n    }\n\n    setChannel(channel: IChannel) {\n        this.channel = channel;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { IChannel } from \"./IChannel\";\n\n/**\n * Class allowing mixing several channels.\n */\nexport class MultiChannel implements IChannel {\n    private readonly channels: IChannel[] = [];\n    constructor(...channels: IChannel[]) {\n        this.channels = channels;\n    }\n\n    error(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.error(message, ...optionalParams);\n        }\n    }\n\n    debug(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.debug(message, ...optionalParams);\n        }\n    }\n\n    info(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.info(message, ...optionalParams);\n        }\n    }\n\n    log(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.log(message, ...optionalParams);\n        }\n    }\n\n    trace(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.trace(message, ...optionalParams);\n        }\n    }\n\n    warn(message?: any, ...optionalParams: any[]) {\n        for (const channel of this.channels) {\n            channel.warn(message, ...optionalParams);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace Math2D {\n    /**\n     * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n     * objects with two numbers each). Should be faster.\n     */\n    export class Box {\n        /**\n         * Alternative 2D box object with less memory impact (four numbers instead of two min/max\n         * objects with two numbers each). Should be faster.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        constructor(public x = 0, public y = 0, public w = 0, public h = 0) {}\n\n        /**\n         * Set new values to all properties of the box.\n         *\n         * @param x New X value.\n         * @param y New y value.\n         * @param w New w value.\n         * @param h New h value.\n         */\n        set(x: number, y: number, w: number, h: number) {\n            this.x = x;\n            this.y = y;\n            this.w = w;\n            this.h = h;\n        }\n\n        /**\n         * Test box for inclusion of point.\n         *\n         * @param x X coordinate of point.\n         * @param y Y coordinate of point.\n         */\n        contains(x: number, y: number): boolean {\n            return this.x <= x && this.x + this.w >= x && this.y <= y && this.y + this.h >= y;\n        }\n\n        /**\n         * Test box for inclusion of another box.\n         *\n         * @param other Box 2 to test for inclusion.\n         */\n        containsBox(other: Box): boolean {\n            const xmax = other.x + other.w;\n            const ymax = other.y + other.h;\n            return (\n                this.contains(other.x, other.y) &&\n                this.contains(xmax, other.y) &&\n                this.contains(other.x, ymax) &&\n                this.contains(xmax, ymax)\n            );\n        }\n\n        /**\n         * Test two boxes for intersection.\n         *\n         * @param other Box 2 to test for intersection.\n         */\n        intersects(other: Box): boolean {\n            return (\n                this.x <= other.x + other.w &&\n                this.x + this.w >= other.x &&\n                this.y <= other.y + other.h &&\n                this.y + this.h >= other.y\n            );\n        }\n    }\n\n    /**\n     * Box to store UV coordinates.\n     */\n    export interface UvBox {\n        s0: number;\n        t0: number;\n        s1: number;\n        t1: number;\n    }\n\n    /**\n     * Compute squared distance between two 2D points `a` and `b`.\n     *\n     * @param ax Point a.x\n     * @param ay Point a.y\n     * @param bx Point b.x\n     * @param by Point b.y\n     * @returns Squared distance between the two points\n     */\n    export function distSquared(ax: number, ay: number, bx: number, by: number): number {\n        return (ax - bx) * (ax - bx) + (ay - by) * (ay - by);\n    }\n\n    /**\n     * Computes the squared length of a line.\n     *\n     * @param line An array of that forms a line via [x,y,z,x,y,z,...] tuples.\n     */\n    export function computeSquaredLineLength(line: number[]): number {\n        let squaredLineLength: number = 0;\n\n        const length = line.length - 4;\n        for (let i = 0; i < length; i += 3) {\n            const xDiff = line[i + 3] - line[i];\n            const yDiff = line[i + 4] - line[i + 1];\n            squaredLineLength += xDiff * xDiff + yDiff * yDiff;\n        }\n        return squaredLineLength;\n    }\n\n    /**\n     * Compute squared distance between a 2D point and a 2D line segment.\n     *\n     * @param px Test point X\n     * @param py Test point y\n     * @param l0x Line segment start X\n     * @param l0y Line segment start Y\n     * @param l1x Line segment end X\n     * @param l1y Line segment end Y\n     * @returns Squared distance between point and line segment\n     */\n    export function distToSegmentSquared(\n        px: number,\n        py: number,\n        l0x: number,\n        l0y: number,\n        l1x: number,\n        l1y: number\n    ): number {\n        const lineLengthSuared = distSquared(l0x, l0y, l1x, l1y);\n        if (lineLengthSuared === 0) {\n            return distSquared(px, py, l0x, l0y);\n        }\n        let t = ((px - l0x) * (l1x - l0x) + (py - l0y) * (l1y - l0y)) / lineLengthSuared;\n        t = Math.max(0, Math.min(1, t));\n        return distSquared(px, py, l0x + t * (l1x - l0x), l0y + t * (l1y - l0y));\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace MathUtils {\n    /**\n     * Ensures that input value fits in a given range.\n     *\n     * @param value The value to be clamped.\n     * @param min Minimum value.\n     * @param max Maximum value.\n     *\n     * @returns Clamped value.\n     */\n    export function clamp(value: number, min: number, max: number): number {\n        return value < min ? min : value > max ? max : value;\n    }\n\n    /**\n     * Returns a linear interpolation between the values of edge0 and edge1 based on the factor.\n     *\n     * Given two known points the linear interpolant between these points may be presented as\n     * straight line. This means that for given factor change the resulting change of return\n     * value is always const.\n     * @see https://en.wikipedia.org/wiki/Linear_interpolation\n     *\n     * @param edge0\n     * @param edge1\n     * @param factor Interpolation factor that ranges between: 0 <= x <= 1.\n     */\n    export function lerp(edge0: number, edge1: number, factor: number): number {\n        return edge0 * (1 - factor) + edge1 * factor;\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smoothStep(edge0: number, edge1: number, x: number) {\n        // Scale, bias and saturate x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * (3 - 2 * x);\n    }\n\n    /**\n     * Returns a smooth interpolation between the values edge0 and edge1 based on the interpolation\n     * factor x. `0 <= x <= 1`.\n     *\n     * Improved version by Ken Perlin, which has zero 1st- and 2nd-order derivatives at `x = 0` and\n     * `x = 1`:\n     *\n     * @see https://en.wikipedia.org/wiki/Smoothstep\n     *\n     * @param edge0\n     * @param edge1\n     * @param x\n     */\n    export function smootherStep(edge0: number, edge1: number, x: number) {\n        // Scale, and clamp x to 0..1 range\n        x = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);\n        // Evaluate polynomial\n        return x * x * x * (x * (x * 6 - 15) + 10);\n    }\n\n    /**\n     * Maps a number from one range to another.\n     *\n     * @param val The incoming value to be converted.\n     * @param inMin Lower bound of the value's current range.\n     * @param inMax Upper bound of the value's current range.\n     * @param outMin Lower bound of the value's target range.\n     * @param outMax Upper bound of the value's target range.\n     */\n    export function map(val: number, inMin: number, inMax: number, outMin: number, outMax: number) {\n        return ((val - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n    }\n\n    /**\n     * Returns the smaller of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function min2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.min(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Returns the larger of the two given numbers. Both numbers may be undefined, in which case\n     * the result is undefined. If only one of the numbers is undefined, the other number is\n     * returned.\n     *\n     * @param a First number.\n     * @param b Second number.\n     */\n    export function max2(a: number | undefined, b: number | undefined): number | undefined {\n        let result: number | undefined;\n\n        if (a !== undefined) {\n            result = a;\n        }\n        if (b !== undefined) {\n            result = result === undefined ? b : Math.max(result, b);\n        }\n\n        return result;\n    }\n\n    /**\n     * Checks if the value of a given number is inside an upper or lower bound. The bounds may be\n     * undefined, in which case their value is ignored.\n     *\n     * @param value Value to check.\n     * @param lowerBound The lower bound to check the value against.\n     * @param upperBound The upper bound to check the value against.\n     *\n     * @returns `true` if value is inside the bounds or if the bounds are `undefined`, `false`\n     *          otherwise.\n     */\n    export function isClamped(\n        value: number,\n        lowerBound: number | undefined,\n        upperBound: number | undefined\n    ): boolean {\n        if (lowerBound !== undefined && value < lowerBound) {\n            return false;\n        }\n        if (upperBound !== undefined && value > upperBound) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Smoothly interpolates between two values using cubic formula\n     *\n     * @param startValue\n     * @param endValue\n     * @param time\n     * @returns Result of the interpolation within the range of `[startValue, endValue]`\n     */\n    export function easeInOutCubic(startValue: number, endValue: number, time: number): number {\n        const timeValue =\n            time < 0.5 ? 4 * time * time * time : (time - 1) * (2 * time - 2) * (2 * time - 2) + 1;\n        return startValue + (endValue - startValue) * timeValue;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Copy methods and properties from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods and properties into.\n * @param baseCtors Class to take all methods and properties from.\n */\nexport function applyMixins(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            derivedCtor.prototype[name] = baseCtor.prototype[name];\n        });\n    });\n}\n\n/**\n * Copy methods from one prototype into another.\n *\n * @see https://www.typescriptlang.org/docs/handbook/mixins.html\n *\n * @param derivedCtor Class to mix methods into.\n * @param baseCtors Class to take all methods from.\n */\nexport function applyMixinsWithoutProperties(derivedCtor: any, baseCtors: any[]) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            const descriptor = Object.getOwnPropertyDescriptor(baseCtor.prototype, name);\n            if (\n                descriptor !== undefined &&\n                descriptor.get === undefined &&\n                name !== \"constructor\"\n            ) {\n                derivedCtor.prototype[name] = baseCtor.prototype[name];\n            }\n        });\n    });\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ndeclare const process: any;\n\n// cache value, because access to process.env.NODE_ENV is SLOW!\nconst isProduction = process.env.NODE_ENV === \"production\";\n\n//TODO: Make assertHandler configurable\n\n/**\n * Implementation of assert as a development help\n *\n * Note - this is deliberately a global function so that minimizers remove the\n * entire call when building for production.\n *\n * @hidden\n * @param condition Condition to match, if false, throws an Error(message)\n * @param message Optional message, defaults to \"ASSERTION failed\"\n */\nexport function assert(condition: boolean, message?: string): void {\n    if (!isProduction) {\n        if (!condition) {\n            throw new Error(message !== undefined ? message : \"ASSERTION failed\");\n        }\n    }\n}\n\nexport function assertExists<T>(element: T | undefined, message?: string): T {\n    if (!isProduction) {\n        if (element === undefined || element === null) {\n            throw new Error(\n                message !== undefined ? message : \"ASSERTION failed: Element is undefined or null\"\n            );\n        }\n    }\n    return element!;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Refinement of `console` interface only for important information i.e `info`, `warn` and `errors`.\n */\nexport interface ISimpleChannel {\n    info(message?: any, ...optionalParams: any[]): void;\n    warn(message?: any, ...optionalParams: any[]): void;\n    error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Extension of [[ISimpleChannel]] to support contextual logging by adding stack of prefixes.\n */\nexport interface IContextLogger extends ISimpleChannel {\n    /**\n     * Push \"attribute-like\" context.\n     */\n    pushAttr(name: string): void;\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number): void;\n\n    /**\n     * Remove current context from top of stack.\n     */\n    pop(): void;\n}\n\n/**\n * Context-aware logger that decorates log message with stack-based prefix, emits `headerMessage`\n * before first actual log message.\n */\nexport class ContextLogger implements IContextLogger {\n    private readonly context: string[] = [];\n    private m_headerLogged = false;\n\n    /**\n     * Construct a context-aware logger that logs to `m_logger`.\n     */\n    constructor(readonly m_logger: ISimpleChannel, readonly headerMessage: string) {}\n\n    /**\n     * Push \"attribute-like\" context.\n     *\n     * Following log messages will be prefixed with `name` or `.name` depending on current context.\n     */\n    pushAttr(name: string) {\n        this.context.push(`${this.context.length > 0 ? \".\" : \"\"}${name}`);\n    }\n\n    /**\n     * Push \"index-like\" context.\n     *\n     * Following log messages will be prefixed with `[index]`.\n     */\n    pushIndex(index: string | number) {\n        this.context.push(`[${index}]`);\n    }\n\n    pop() {\n        this.context.pop();\n    }\n\n    // They, are public member functions it's just tslint who doesn't understand this.\n\n    // tslint:disable:member-ordering\n    warn = this.createLogMethod(\"warn\");\n    info = this.createLogMethod(\"info\");\n    error = this.createLogMethod(\"error\");\n    // tslint:enable:member-ordering\n\n    private createLogMethod(severity: \"warn\" | \"info\" | \"error\") {\n        return (message: string, ...rest: any[]) => {\n            if (!this.m_headerLogged) {\n                this.m_logger.info(this.headerMessage);\n                this.m_headerLogged = true;\n            }\n            this.m_logger[severity](`${this.context.join(\"\")}: ${message}`, ...rest);\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/* tslint:disable:max-line-length */\n/**\n * See:\n * https://developers.google.com/web/updates/2012/08/When-milliseconds-are-not-enough-performance-now\n */\n/* tslint:ensable:max-line-length */\n\nexport class PerformanceTimer {\n    /**\n     * Returns timestamp in milliseconds since page load.\n     *\n     * If the [[DOMHighResTimeStamp]] is supported, the resolution is up to 5 microseconds,\n     * otherwise it is in milliseconds. Timespans are computed by taking the difference between two\n     * samples.\n     *\n     * Example:\n     * ```typescript\n     * const now = PerformanceTimer.now();\n     * // call some expensive function for which you want to check the duration.\n     * const end = PerformanceTimer.now();\n     * const elapsedTime = end - now;\n     * ```\n     */\n    static now(): number {\n        return PerformanceTimer.nowFunc();\n    }\n\n    // tslint:disable-next-line:no-unused-variable\n    private static readonly instance = new PerformanceTimer();\n\n    private static readonly nowFunc: () => number = PerformanceTimer.getNowFunc();\n\n    private static getNowFunc() {\n        if (typeof performance !== \"undefined\" && typeof performance.now !== \"undefined\") {\n            return () => performance.now();\n        }\n\n        // fall back to Date.getTime()\n        return () => {\n            return new Date().getTime();\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Deep clone of object.\n *\n * Like `JSON.parse(JSON.stringify(obj))`, but supports basic javascript types (string, number,\n * object), `Date` and `RegExp`s and cycles.\n *\n * Throws error if enounters object with `prototype` assuming that in general class instances\n * cannot be reliably cloned by generic algorithm.\n */\nexport function cloneDeep<T>(obj: T): T {\n    const cache: Map<object, object> = new Map();\n    function cloneInternal(src: any): any {\n        if (src === null) {\n            return null;\n        } else if (typeof src === \"object\") {\n            const cached = cache.get(src);\n            if (cached !== undefined) {\n                return cached;\n            }\n\n            if (Array.isArray(src)) {\n                const result: any[] = [];\n                cache.set(src, result);\n                result.length = src.length;\n                for (let i = 0; i < result.length; ++i) {\n                    result[i] = cloneInternal(src[i]);\n                }\n                return result;\n            } else if (src instanceof Date) {\n                const result = new Date(src.getTime());\n                cache.set(src, result);\n                return result;\n            } else if (src instanceof RegExp) {\n                const result = new RegExp(src.source, src.flags);\n                cache.set(src, result);\n                return result;\n            } else if (src.constructor !== Object) {\n                throw new Error(\"cloneDeep doesn't support objects with custom prototypes\");\n            } else {\n                const result: typeof src = {};\n                cache.set(src, result);\n                for (const key in src) {\n                    if (src.hasOwnProperty(key)) {\n                        result[key] = cloneInternal(src[key]);\n                    }\n                }\n                return result;\n            }\n        } else {\n            // string, number, boolean, undefined and functions are returned as is\n            return src;\n        }\n    }\n\n    const r = cloneInternal(obj);\n    cache.clear();\n    return r;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Get first defined value.\n *\n * Specialized \"replacement\" for `a || b || c` used frequently to get value from various sources\n * (defaults, configs  constants).\n * In contrast to `||`, this function provides proper typing for usual use cases (constant as last\n * argument) and correct treatment of `null` and `undefined`.\n *\n * If last parameter is \"defined\" then return type is `T`, otherwise return type is `T | undefined`.\n *\n * Usage example:\n *\n *     interface Config {\n *         x?: number;\n *     }\n *     const someConfig: Config = {};\n *     const val: number | undefined = undefined;\n *     const DEFAULT = 5;\n *     const x = getOptionValue(val, someConfig.x, DEFAULT);\n *         // typeof x === 'number' because DEFAULT is defined\n *     const y = getOptionValue(val, someConfig.x);\n *         // typeof y === 'number | undefined' because someConfig.x is possibly undefined\n */\n// specialized overloads with last param defined params overload\nexport function getOptionValue<T>(a: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T): T;\nexport function getOptionValue<T>(a: T | undefined, b: T | undefined, c: T | undefined, d: T): T;\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined;\n\nexport function getOptionValue<T>(...values: Array<T | undefined>): T | undefined {\n    for (const candidate of values) {\n        if (candidate !== undefined && candidate !== null) {\n            return candidate;\n        }\n    }\n    return undefined;\n}\n\n/**\n * Merge options into existing parameters object.\n *\n * Convenience helper with _similar_ semantics as:\n *\n *     const finalParams1 = { ...defaults, ... options };\n *     const finalParams2 = Object.assign({}, defaults, options);\n *\n * This function doesn't copy _extra_ properties of `options` that doesn't exist in `defaults`.\n * `defaults` is used as _parameters_ template.\n *\n * This doc uses following notion of `option` and `parameter` terms:\n * * `parameter` is a variable, or 'almost constant' of procedure/function/algorith/object\n *    * `parameter` usually have sensible and usually used default\n *    * `parameter` is always defined (no `undefined`, `null` or `?` in type)\n *    * `parameter` can be overriden by specyfying `option` with same name\n * * `option` means value that may be passed optionally, overrides `parameter` value with same name\n *\n * Usage:\n *\n *     interface FooParams {\n *         useTextures: boolean;\n *         opacity: number;\n *     }\n *\n *     const FOO_DEFAULTS: FooParams = {\n *         useTextures: true,\n *         opacity: 0.8\n *     };\n *\n *     type FooOptions = Partial<FooParams>;\n *\n *     function doSomething(options: FooOptions) {\n *         const params = mergeWithOptions(FOO_DEFAULTS, options);\n *             // typeof params === FooParams\n *             // params.opacity = 0.5\n *             // params.useTextures = true\n *             // params.someOtherOptionFromOtherApi is not defined\n *     }\n *     const opt = {opacity: 0.5, someOtherOptionFromOtherApi: 'aaa'};\n *     doSomething(opt);\n *\n * Rationale:\n *   * both `Object.assign` and spread operator copy extra options\n *   * `Object.assign` & `spread operator` may copy `undefined` and `null`s if they really exist\n *     in options object\n *\n * @param parameters parmeters template object holding all expected parameters\n * @param options options object\n * @returns new object with `parameters` overriden by values from `options`\n */\nexport function mergeWithOptions<T extends object>(parameters: T, options?: Partial<T>): T {\n    // NOTE: `as object` needed due to TypeScript bug:\n    //       https://github.com/Microsoft/TypeScript/issues/14409\n    // tslint:disable-next-line:no-object-literal-type-assertion\n    const result = { ...(parameters as object) } as T;\n    if (options === undefined || options === null) {\n        return result;\n    }\n    for (const prop in parameters) {\n        if (parameters.hasOwnProperty(prop)) {\n            const optionValue = options[prop];\n            if (optionValue !== undefined && optionValue !== null) {\n                result[prop] = optionValue as any;\n            }\n        }\n    }\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { resolveReferenceUri } from \"./UrlUtils\";\n\n/**\n * Custom, app-specific URI resolver interface.\n */\nexport interface UriResolver {\n    /**\n     * Attempt to resolve `URI` to `URL`.\n     *\n     * If given resolver doesn't know about this specific kind of `URI`, it should return string as\n     * received.\n     *\n     * @param input `URI`\n     * @returns actual `URL` if this handler knows how locate given `uri` or original `uri`\n     */\n    resolveUri(uri: string): string;\n}\n\nexport interface PrefixUriResolverDefinition {\n    [prefix: string]: string;\n}\n\n/**\n * Basic, import-map like [[UriResolver]].\n *\n * Resolves `uris` basing on exact or prefix match of `key` from `definitions`.\n *\n * In definitions, `key` is matched against input uri with following strategy:\n *  - `key` without trailing `/` -> `key` and input `uri` must be identical\n *  - `key` with trailing `/`, -> `key` is treated as \"package prefix\", so `uri` must start with\n *    `key`\n *\n * Example:\n * ```\n * {\n *     \"local://poiMasterList\": \"/assets/poiMasterList.json\"\n *        // will match only 'local://poiMasterList' and resolve `/assets/poiMasterList.json`\n *     \"local://icons/\": \"/assets/icons/\"\n *        // will match only 'local://icons/ANYPATH' (and similar) and resolve to\n *        // `/assets/icons/ANYPATH\n * }\n * ```\n * Inspired by [`WICG` import maps proposal](https://github.com/WICG/import-maps#the-import-map).\n */\nexport class PrefixMapUriResolver implements UriResolver {\n    constructor(readonly definitions: PrefixUriResolverDefinition) {}\n\n    resolveUri(uri: string) {\n        return Object.keys(this.definitions).reduce((r, key) => {\n            if (key.endsWith(\"/\") && r.startsWith(key)) {\n                const newPrefix = this.definitions[key];\n                return newPrefix + r.substr(key.length);\n            } else if (r === key) {\n                return this.definitions[key];\n            }\n            return r;\n        }, uri);\n    }\n}\n\n/**\n * [UriResolver] that resolve relative `uri`s against to parent resource `uri`.\n */\nexport class RelativeUriResolver implements UriResolver {\n    constructor(readonly parentUri: string) {}\n\n    resolveUri(uri: string) {\n        return resolveReferenceUri(this.parentUri, uri);\n    }\n}\n\n/**\n * Compose URI resolvers.\n *\n * Creates new [[UriResolver]] that applies resolvers in orders or arguments.\n *\n * Example:\n *\n *     const themeUrl = ...; // url of parent object\n *     const childUrlResolver = composeUrlResolvers(\n *           new RelativeUriResolver(themeUrl),\n *           defaultUrlResolver\n *     );\n */\nexport function composeUriResolvers(...resolvers: Array<UriResolver | undefined>): UriResolver {\n    return {\n        resolveUri(originalUrl: string) {\n            return resolvers.reduce((url, resolver) => {\n                if (resolver !== undefined) {\n                    return resolver.resolveUri(url);\n                } else {\n                    return url;\n                }\n            }, originalUrl);\n        }\n    };\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Chains two functions for further assigning as one wrapped callback function\n */\nexport function chainCallbacks<T extends (this: unknown, ...args: any[]) => any>(\n    f1: T | null | undefined,\n    f2: T\n): T {\n    return function(this: any, ...args: any[]): ReturnType<T> {\n        if (f1) {\n            f1.apply(this, args);\n        }\n        return f2.apply(this, args);\n    } as T;\n}\n","/*\n * Copyright (C) 2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\ntype TypedArray =\n    | Int8Array\n    | Uint8Array\n    | Int16Array\n    | Uint16Array\n    | Int32Array\n    | Uint32Array\n    | Uint8ClampedArray\n    | Float32Array\n    | Float64Array;\n\n/**\n * Returns a bilinear-interpolated texture sample for a given texture.\n * @param texture Two-dimensional texture to sample.\n * @param width Texture width.\n * @param height Texture height.\n * @param u Number between 0 and 1 representing the location to sample in the width dimension.\n * @param v Number between 0 and 1 representing the location to sample in the height dimension.\n */\nexport function sampleBilinear(\n    texture: TypedArray,\n    width: number,\n    height: number,\n    u: number,\n    v: number\n): number {\n    const maxXIndex = width - 1;\n    const maxYIndex = height - 1;\n    // Compute the x and y coordinates relative to the mesh size.\n    const xIndex = u * maxXIndex;\n    const xIndexFloor = Math.floor(xIndex);\n    const yIndex = v * maxYIndex;\n    const yIndexFloor = Math.floor(yIndex);\n    const swIndex = yIndexFloor * width + xIndexFloor;\n    const seIndex = xIndexFloor < maxXIndex ? swIndex + 1 : swIndex;\n    const nwIndex = yIndexFloor < maxYIndex ? swIndex + width : swIndex;\n    const neIndex = xIndexFloor < maxXIndex ? nwIndex + 1 : nwIndex;\n    const swElevation = texture[swIndex];\n    const seElevation = texture[seIndex];\n    const nwElevation = texture[nwIndex];\n    const neElevation = texture[neIndex];\n    // Get the fractional components to do bilinear interpolation.\n    const xFrac = Number.isInteger(xIndex) ? 0 : xIndex - xIndexFloor;\n    const xFracInverse = 1 - xFrac;\n    const yFrac = Number.isInteger(yIndex) ? 0 : yIndex - yIndexFloor;\n    const yFracInverse = 1 - yFrac;\n    // The interpolation is the sum of the four closest neighbours each\n    // multiplied by the diagonal areas.\n    const result =\n        swElevation * xFracInverse * yFracInverse +\n        seElevation * xFrac * yFracInverse +\n        nwElevation * xFracInverse * yFrac +\n        neElevation * xFrac * yFrac;\n    return result;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { baseUrl } from \"./UrlUtils\";\n\n/**\n * Get base URL for from where relative URLs will be loaded.\n *\n * * In browser, it resolves to `baseUrl(location.href)` i.e document's base URL\n * (see: https://www.w3.org/TR/WD-html40-970917/htmlweb.html#h-5.1.2).\n *\n * * In node, it resolves to `file://${process.cwd()}`.\n */\nexport function getAppBaseUrl() {\n    return baseUrl(window.location.href);\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Env,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    Value,\n    VarExpr\n} from \"./Expr\";\n\nimport { ArrayOperators } from \"./operators/ArrayOperators\";\nimport { CastOperators } from \"./operators/CastOperators\";\nimport { ColorOperators } from \"./operators/ColorOperators\";\nimport { ComparisonOperators } from \"./operators/ComparisonOperators\";\nimport { FeatureOperators } from \"./operators/FeatureOperators\";\nimport { FlowOperators } from \"./operators/FlowOperators\";\nimport { InterpolationOperators } from \"./operators/InterpolationOperators\";\nimport { MapOperators } from \"./operators/MapOperators\";\nimport { MathOperators } from \"./operators/MathOperators\";\nimport { MiscOperators } from \"./operators/MiscOperators\";\nimport { ObjectOperators } from \"./operators/ObjectOperators\";\nimport { StringOperators } from \"./operators/StringOperators\";\nimport { TypeOperators } from \"./operators/TypeOperators\";\n\nexport interface OperatorDescriptor {\n    /**\n     * Returns `true` if this operator requires a dynamic execution context (e.g. [\"zoom\"]).\n     */\n    isDynamicOperator?: (call: CallExpr) => boolean;\n\n    /**\n     * Evaluates the given expression.\n     */\n    call: (context: ExprEvaluatorContext, call: CallExpr) => Value;\n}\n\nexport interface OperatorDescriptorMap {\n    [name: string]: OperatorDescriptor;\n}\n\nconst operatorDescriptors = new Map<string, OperatorDescriptor>();\n\n/*\n * @hidden\n */\nexport class ExprEvaluatorContext {\n    private m_partialEvaluation = false;\n\n    constructor(\n        readonly evaluator: ExprEvaluator,\n        readonly env: Env,\n        readonly scope: ExprScope,\n        readonly cache?: Map<Expr, Value>\n    ) {}\n\n    /**\n     * `true` if the this context is used to partially evaluate expressions.\n     */\n    get partialEvaluation() {\n        return this.m_partialEvaluation;\n    }\n\n    /**\n     * Evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    evaluate(expr: Expr | undefined) {\n        if (expr !== undefined) {\n            return expr.accept(this.evaluator, this);\n        }\n        throw new Error(\"Failed to evaluate expression\");\n    }\n\n    /**\n     * Partially evaluate the given expression.\n     *\n     * @param expr The [[Expr]] to evaluate.\n     */\n    partiallyEvaluate(expr: Expr | undefined): Expr {\n        if (expr === undefined) {\n            throw new Error(\"Failed to evaluate expression\");\n        }\n\n        const previousEvaluationMode = this.m_partialEvaluation;\n\n        this.m_partialEvaluation = true;\n\n        try {\n            const value = expr.accept(this.evaluator, this);\n\n            this.m_partialEvaluation = previousEvaluationMode;\n\n            if (value instanceof Expr) {\n                return value;\n            }\n\n            return LiteralExpr.fromValue(value);\n        } catch (error) {\n            // rethrow the exception\n            throw error;\n        } finally {\n            // reset the evaluation mode.\n            this.m_partialEvaluation = previousEvaluationMode;\n        }\n    }\n}\n\n/**\n * [[ExprEvaluator]] is used to evaluate [[Expr]] in a given environment.\n *\n * @hidden\n */\nexport class ExprEvaluator implements ExprVisitor<Value, ExprEvaluatorContext> {\n    static defineOperator(op: string, builtin: OperatorDescriptor) {\n        operatorDescriptors.set(op, builtin);\n    }\n\n    static defineOperators(builtins: OperatorDescriptorMap) {\n        Object.getOwnPropertyNames(builtins).forEach(p => {\n            this.defineOperator(p, builtins[p]);\n        });\n    }\n\n    /**\n     * Returns the [[OperatorDescriptor]] for the given operator name.\n     * @hidden\n     */\n    static getOperator(op: string): OperatorDescriptor | undefined {\n        return operatorDescriptors.get(op);\n    }\n\n    visitVarExpr(expr: VarExpr, context: ExprEvaluatorContext): Value {\n        const value = context.env.lookup(expr.name);\n        return value !== undefined ? value : null;\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: ExprEvaluatorContext): Value {\n        return null;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: ExprEvaluatorContext): Value {\n        return expr.value;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: ExprEvaluatorContext): Value {\n        return context.env.lookup(expr.name) !== undefined;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: ExprEvaluatorContext): Value {\n        const r = context.evaluate(match.value);\n        for (const [label, body] of match.branches) {\n            if (Array.isArray(label) && (label as any[]).includes(r)) {\n                return context.evaluate(body);\n            } else if (label === r) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCaseExpr(match: CaseExpr, context: ExprEvaluatorContext): Value {\n        for (const [condition, body] of match.branches) {\n            if (context.evaluate(condition)) {\n                return context.evaluate(body);\n            }\n        }\n        return context.evaluate(match.fallback);\n    }\n\n    visitCallExpr(expr: CallExpr, context: ExprEvaluatorContext): Value {\n        if (context.cache !== undefined) {\n            const v = context.cache.get(expr);\n            if (v !== undefined) {\n                return v;\n            }\n        }\n\n        const descriptor = expr.descriptor || operatorDescriptors.get(expr.op);\n\n        if (descriptor) {\n            expr.descriptor = descriptor;\n\n            const result = descriptor.call(context, expr);\n\n            if (context.cache) {\n                context.cache.set(expr, result);\n            }\n\n            return result;\n        }\n\n        throw new Error(`undefined operator '${expr.op}'`);\n    }\n}\n\nExprEvaluator.defineOperators(CastOperators);\nExprEvaluator.defineOperators(ComparisonOperators);\nExprEvaluator.defineOperators(MathOperators);\nExprEvaluator.defineOperators(StringOperators);\nExprEvaluator.defineOperators(ColorOperators);\nExprEvaluator.defineOperators(TypeOperators);\nExprEvaluator.defineOperators(MiscOperators);\nExprEvaluator.defineOperators(FlowOperators);\nExprEvaluator.defineOperators(ArrayOperators);\nExprEvaluator.defineOperators(InterpolationOperators);\nExprEvaluator.defineOperators(ObjectOperators);\nExprEvaluator.defineOperators(FeatureOperators);\nExprEvaluator.defineOperators(MapOperators);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    at: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const args = call.args;\n            const index = context.evaluate(args[0]);\n            if (typeof index !== \"number\") {\n                throw new Error(`expected the index of the element to retrieve`);\n            }\n            const value = context.evaluate(args[1]);\n            if (!Array.isArray(value)) {\n                throw new Error(`expected an array`);\n            }\n            return index >= 0 && index < value.length ? value[index] : null;\n        }\n    }\n};\n\nexport const ArrayOperators: OperatorDescriptorMap = operators;\nexport type ArrayOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"to-boolean\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Boolean(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-string\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0]));\n        }\n    },\n\n    \"to-number\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const arg of call.args) {\n                const value = Number(context.evaluate(arg));\n                if (!isNaN(value)) {\n                    return value;\n                }\n            }\n            throw new Error(\"cannot convert the value to a number\");\n        }\n    }\n};\n\nexport const CastOperators: OperatorDescriptorMap = operators;\nexport type CastOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nimport { ColorUtils } from \"../ColorUtils\";\nimport { CallExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport { parseStringEncodedColor } from \"../StringEncodedNumeral\";\n\nconst operators = {\n    alpha: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            let color: Value | undefined = context.evaluate(call.args[0]);\n            if (typeof color === \"string\") {\n                color = parseStringEncodedColor(color);\n            }\n            const alpha = typeof color === \"number\" ? ColorUtils.getAlphaFromHex(color) : 1;\n            return alpha;\n        }\n    },\n    rgba: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            const a = context.evaluate(call.args[3]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                typeof a === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0 &&\n                a >= 0 &&\n                a <= 1\n            ) {\n                return rgbaToHex(r, g, b, a);\n            }\n            throw new Error(`unknown color 'rgba(${r},${g},${b},${a})'`);\n        }\n    },\n    rgb: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const r = context.evaluate(call.args[0]);\n            const g = context.evaluate(call.args[1]);\n            const b = context.evaluate(call.args[2]);\n            if (\n                typeof r === \"number\" &&\n                typeof g === \"number\" &&\n                typeof b === \"number\" &&\n                r >= 0 &&\n                g >= 0 &&\n                b >= 0\n            ) {\n                return rgbToHex(r, g, b);\n            }\n            throw new Error(`unknown color 'rgb(${r},${g},${b})'`);\n        }\n    },\n    // Hsl operator contains angle modulated to <0, 360> range, percent of\n    // saturation and lightness in <0, 100> range, i.e. hsl(360, 100, 100)\n    hsl: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const h = context.evaluate(call.args[0]);\n            const s = context.evaluate(call.args[1]);\n            const l = context.evaluate(call.args[2]);\n            if (\n                typeof h === \"number\" &&\n                typeof s === \"number\" &&\n                typeof l === \"number\" &&\n                h >= 0 &&\n                s >= 0 &&\n                l >= 0\n            ) {\n                return hslToHex(h, s, l);\n            }\n            throw new Error(`unknown color 'hsl(${h},${s}%,${l}%)'`);\n        }\n    }\n};\n\nfunction rgbaToHex(r: number, g: number, b: number, a: number): number {\n    // We decode rgba color channels using custom hex format with transparency.\n    return ColorUtils.getHexFromRgba(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255,\n        THREE.MathUtils.clamp(a, 0, 1)\n    );\n}\n\nfunction rgbToHex(r: number, g: number, b: number): number {\n    return ColorUtils.getHexFromRgb(\n        THREE.MathUtils.clamp(r, 0, 255) / 255,\n        THREE.MathUtils.clamp(g, 0, 255) / 255,\n        THREE.MathUtils.clamp(b, 0, 255) / 255\n    );\n}\n\nfunction hslToHex(h: number, s: number, l: number): number {\n    return ColorUtils.getHexFromHsl(\n        THREE.MathUtils.euclideanModulo(h, 360) / 360,\n        THREE.MathUtils.clamp(s, 0, 100) / 100,\n        THREE.MathUtils.clamp(l, 0, 100) / 100\n    );\n}\n\nexport const ColorOperators: OperatorDescriptorMap = operators;\nexport type ColorOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction compare(context: ExprEvaluatorContext, call: CallExpr, strict: boolean = false) {\n    const left = context.evaluate(call.args[0]) as any;\n    const right = context.evaluate(call.args[1]) as any;\n\n    if (\n        !(\n            (typeof left === \"number\" && typeof right === \"number\") ||\n            (typeof left === \"string\" && typeof right === \"string\")\n        )\n    ) {\n        if (strict) {\n            throw new Error(`invalid operands '${left}' and '${right}' for operator '${call.op}'`);\n        }\n    }\n\n    switch (call.op) {\n        case \"<\":\n            return left < right;\n        case \">\":\n            return left > right;\n        case \"<=\":\n            return left <= right;\n        case \">=\":\n            return left >= right;\n        default:\n            throw new Error(`invalid comparison operator '${call.op}'`);\n    }\n}\n\nconst operators = {\n    \"!\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return !context.evaluate(call.args[0]);\n        }\n    },\n\n    \"==\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left === right;\n        }\n    },\n\n    \"!=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            return left !== right;\n        }\n    },\n\n    \"<\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \"<=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) },\n    \">=\": { call: (context: ExprEvaluatorContext, call: CallExpr) => compare(context, call) }\n};\n\nexport const ComparisonOperators: OperatorDescriptorMap = operators;\nexport type ComparisonOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env } from \"../Env\";\nimport { CallExpr, ExprScope } from \"../Expr\";\n\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"geometry-type\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const geometryType = context.env.lookup(\"$geometryType\");\n            switch (geometryType) {\n                case \"point\":\n                    return \"Point\";\n                case \"line\":\n                    return \"LineString\";\n                case \"polygon\":\n                    return \"Polygon\";\n                default:\n                    return null;\n            }\n        }\n    },\n    \"feature-state\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope !== ExprScope.Dynamic) {\n                throw new Error(\"feature-state cannot be used in this context\");\n            }\n            const property = context.evaluate(call.args[0]);\n            if (typeof property !== \"string\") {\n                throw new Error(`expected the name of the property of the feature state`);\n            }\n            const state = context.env.lookup(\"$state\");\n            if (Env.isEnv(state)) {\n                return state.lookup(property) ?? null;\n            } else if (state instanceof Map) {\n                return state.get(property) ?? null;\n            }\n            return null;\n        }\n    },\n    id: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return context.env.lookup(\"$id\") ?? null;\n        }\n    }\n};\n\nexport const FeatureOperators: OperatorDescriptorMap = operators;\nexport type FeatureOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nfunction conditionalCast(context: ExprEvaluatorContext, type: string, args: Expr[]) {\n    switch (type) {\n        case \"boolean\":\n        case \"number\":\n        case \"string\":\n            for (const childExpr of args) {\n                const value = context.evaluate(childExpr);\n                if (typeof value === type) {\n                    return value;\n                }\n            }\n            throw new Error(`expected a '${type}'`);\n        default:\n            throw new Error(`invalid type '${type}'`);\n    } // switch\n}\n\nconst operators = {\n    all: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (!context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    any: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    none: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                if (context.evaluate(childExpr)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    },\n\n    boolean: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"boolean\", call.args);\n        }\n    },\n\n    number: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"number\", call.args);\n        }\n    },\n\n    string: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return conditionalCast(context, \"string\", call.args);\n        }\n    }\n};\n\nexport const FlowOperators: OperatorDescriptorMap = operators;\nexport type FlowOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, LiteralExpr, NumberLiteralExpr, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\nimport {\n    createInterpolatedProperty,\n    evaluateInterpolatedProperty,\n    InterpolatedProperty\n} from \"../InterpolatedProperty\";\nimport { InterpolatedPropertyDefinition } from \"../InterpolatedPropertyDefs\";\n\ntype InterpolateCallExpr = CallExpr & {\n    _mode?: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    _exponent?: number;\n    _stops?: number[];\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Evaluates the given piecewise function.\n */\nfunction step(context: ExprEvaluatorContext, call: CallExpr) {\n    const { args } = call;\n\n    const value = context.evaluate(args[0]) as number;\n\n    if (value === null) {\n        // returns the default value of step.\n        return context.evaluate(args[1]);\n    }\n\n    if (typeof value !== \"number\") {\n        throw new Error(`the input of a 'step' operator must have type 'number'`);\n    }\n\n    let first = 1;\n    let last = args.length / 2 - 1;\n\n    while (first < last) {\n        // tslint:disable-next-line: no-bitwise\n        const mid = (first + last) >>> 1;\n        const stop = (args[mid * 2] as NumberLiteralExpr).value;\n\n        if (value < stop) {\n            last = mid - 1;\n        } else if (value > stop) {\n            first = mid + 1;\n        } else {\n            last = mid;\n        }\n    }\n\n    const result = args[first * 2];\n\n    if (!(result instanceof NumberLiteralExpr)) {\n        throw new Error(\"expected a numeric literal\");\n    }\n\n    const index = result.value <= value ? first : first - 1;\n\n    return context.evaluate(args[index * 2 + 1]);\n}\n\n/**\n * Prepare and validate the \"interpolate\" call.\n *\n * @param call An [[Expr]] representing an \"interpolate\" call.\n * @hidden\n */\nfunction prepareInterpolateCallExpr(call: InterpolateCallExpr) {\n    if (call._interpolatedProperty || call._mode !== undefined) {\n        return;\n    }\n\n    const interpolatorType = call.args[0];\n\n    if (!(interpolatorType instanceof CallExpr)) {\n        throw new Error(\"expected an interpolation type\");\n    }\n\n    let mode: InterpolatedPropertyDefinition<any>[\"interpolation\"];\n    let exponent: number | undefined;\n\n    if (interpolatorType.op === \"linear\") {\n        mode = \"Linear\";\n    } else if (interpolatorType.op === \"discrete\") {\n        mode = \"Discrete\";\n    } else if (interpolatorType.op === \"cubic\") {\n        mode = \"Cubic\";\n    } else if (interpolatorType.op === \"exponential\") {\n        mode = \"Exponential\";\n        const base = interpolatorType.args[0];\n        if (!(base instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected the base of the exponential interpolation\");\n        }\n        exponent = base.value;\n    } else {\n        throw new Error(\"unrecognized interpolation type\");\n    }\n\n    const input = call.args[1];\n\n    if (!(input instanceof CallExpr)) {\n        throw new Error(\"expected the input of the interpolation\");\n    }\n\n    if (input.op !== \"zoom\") {\n        throw new Error(\"only 'zoom' is supported\");\n    }\n\n    if (call.args.length === 2 || call.args.length % 2) {\n        throw new Error(\"invalid number of samples\");\n    }\n\n    const stops: number[] = [];\n    const values: Value[] = [];\n\n    let isConstantInterpolation = true;\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n\n        if (stops.length > 0 && stop.value === stops[stops.length - 1]) {\n            stops[stops.length - 1] = stop.value - 0.0000001;\n        }\n\n        stops.push(stop.value);\n\n        if (isConstantInterpolation) {\n            const value = call.args[i + 1];\n\n            if (value instanceof LiteralExpr) {\n                values.push(value.value);\n            } else {\n                isConstantInterpolation = false;\n            }\n        }\n    }\n\n    if (isConstantInterpolation) {\n        const result = createInterpolatedProperty({\n            interpolation: mode,\n            exponent,\n            zoomLevels: stops,\n            values\n        });\n\n        if (!result) {\n            throw new Error(\"failed to create interpolation\");\n        }\n\n        call._interpolatedProperty = result;\n    } else {\n        call._mode = mode;\n        call._exponent = exponent;\n        call._stops = stops;\n    }\n}\n\ntype StepCallExpr = CallExpr & {\n    /**\n     * `true` if the input of `step` call is `[\"zoom\"], otherwise false.\n     */\n    _inputIsZoom?: boolean;\n\n    /**\n     * The stops when the a constant [[InterpolatedProperty]] cannot be\n     * created for this `[\"step\"]` call.\n     */\n    _stops?: number[];\n\n    /**\n     * The [[InterpolatedProperty]] representing this `step` call,\n     * otherwise `undefined` if an interpolated property cannot\n     * be created at parsing time (e.g. one if the value of the step is not a literal).\n     */\n    _interpolatedProperty?: InterpolatedProperty;\n};\n\n/**\n * Classify the given `step` call.\n *\n * This function checks the input of the `step` and ensures that the stops\n * are literals.\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction classifyStepCallExpr(call: StepCallExpr) {\n    if (call._inputIsZoom !== undefined) {\n        // nothing to do, the `call` was already classified.\n        return;\n    }\n\n    if (call.args[0] === undefined) {\n        throw new Error(\"expected the input of the 'step' operator\");\n    }\n\n    if (call.args.length < 3 || call.args.length % 2) {\n        throw new Error(\"not enough arguments\");\n    }\n\n    const input = call.args[0];\n\n    // tslint:disable-next-line: prefer-conditional-expression\n    if (input instanceof CallExpr && input.op === \"zoom\") {\n        call._inputIsZoom = true;\n    } else {\n        call._inputIsZoom = false;\n    }\n\n    // check that the stops are literals.\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i];\n        if (!(stop instanceof NumberLiteralExpr)) {\n            throw new Error(\"expected a numeric literal\");\n        }\n    }\n}\n\n/**\n * Prepares the given call for the dynamic exception.\n * This method collects the stops and\n *\n * @param call A call to `[\"step\", ...]`.\n * @hidden\n */\nfunction prepareStepCallExpr(call: StepCallExpr) {\n    if (call._stops || call._interpolatedProperty) {\n        // nothing to do, the `call` was already prepared for execution.\n        return;\n    }\n\n    // collect the stops of the step call.\n    const stops: number[] = [Number.MIN_SAFE_INTEGER];\n\n    for (let i = 2; i < call.args.length; i += 2) {\n        const stop = call.args[i] as NumberLiteralExpr;\n        stops.push(stop.value);\n    }\n\n    // collect the values of the step call.\n    const values: Value[] = [];\n    let hasConstantValues = true;\n\n    for (let i = 1; hasConstantValues && i < call.args.length; i += 2) {\n        const literal = call.args[i];\n        if (literal instanceof LiteralExpr) {\n            values.push(literal.value);\n        } else {\n            hasConstantValues = false;\n        }\n    }\n\n    if (hasConstantValues) {\n        // all the values of this zoom-based `step` are constant,\n        // create an interpolated property and store it together\n        // with the call.\n        const interpolatedProperty = createInterpolatedProperty({\n            interpolation: \"Discrete\",\n            zoomLevels: stops,\n            values\n        });\n\n        if (interpolatedProperty === undefined) {\n            throw new Error(\"failed to create interpolator\");\n        }\n\n        call._interpolatedProperty = interpolatedProperty;\n    } else {\n        // the values the `[\"step\"]` call are not constants,\n        // cache the `zoomLevels` to avoid recreating input `Array`\n        // when instantiating a new [[InterpolatedProperty]].\n        call._stops = stops;\n    }\n}\n\nconst operators = {\n    interpolate: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[1] && call.args[1].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: InterpolateCallExpr): Value => {\n            prepareInterpolateCallExpr(call);\n\n            if (context.scope !== ExprScope.Dynamic) {\n                return call;\n            }\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                const values: Value[] = [];\n\n                for (let i = 2; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i + 1]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = createInterpolatedProperty({\n                    interpolation: call._mode!,\n                    exponent: call._exponent,\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return evaluateInterpolatedProperty(interpolatedProperty, context.env);\n        }\n    },\n    step: {\n        isDynamicOperator: (call: CallExpr): boolean => {\n            return call.args[0] && call.args[0].isDynamic();\n        },\n        call: (context: ExprEvaluatorContext, call: StepCallExpr): Value => {\n            classifyStepCallExpr(call);\n\n            if (context.scope === ExprScope.Value) {\n                return call;\n            }\n\n            if (context.scope === ExprScope.Condition || call._inputIsZoom === false) {\n                return step(context, call);\n            }\n\n            prepareStepCallExpr(call);\n\n            let interpolatedProperty = call._interpolatedProperty;\n\n            if (!interpolatedProperty) {\n                // the values of the interpolation are not literals,\n                // evaluate the sub expressions and combine them\n                // with the constant stops computed when preparing this call.\n                const values: Value[] = [];\n                for (let i = 1; i < call.args.length; i += 2) {\n                    const value = context.evaluate(call.args[i]);\n                    values.push(value);\n                }\n\n                interpolatedProperty = createInterpolatedProperty({\n                    interpolation: \"Discrete\",\n                    zoomLevels: call._stops!,\n                    values\n                });\n\n                if (interpolatedProperty === undefined) {\n                    throw new Error(\"failed to create interpolator\");\n                }\n            }\n\n            return evaluateInterpolatedProperty(interpolatedProperty, context.env);\n        }\n    }\n};\n\nexport const InterpolationOperators: OperatorDescriptorMap = operators;\nexport type InterpolationOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Interpolant } from \"three\";\n\nexport class ExponentialInterpolant extends Interpolant {\n    /**\n     * Exponent value. Defaults to `2.0`.\n     */\n    exponent: number = 2.0;\n\n    // Note: We need to disable linting here as tslint thinks this function is never used, though it\n    // indeed is called by ``Interpolant.evaluate(level)``.\n    // tslint:disable-next-line\n    private interpolate_(i1: number, t0: number, t: number, t1: number) {\n        const result = this.resultBuffer;\n        // TODO: Remove when Interpolant types are fixed.\n        const values = (this as any).sampleValues;\n        const stride = this.valueSize;\n        const offset1 = i1 * stride;\n        const offset0 = offset1 - stride;\n        const weight1 = Math.pow((t - t0) / (t1 - t0), this.exponent);\n        const weight0 = 1 - weight1;\n\n        for (let i = 0; i !== stride; ++i) {\n            result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, ExprScope, Value } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    \"ppi-scale\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            return value * scaleFactor;\n        }\n    },\n    \"world-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidth = Math.pow(2, 17) / Math.pow(2, zoom);\n            const v = pixels * zoomWidth * scaleFactor;\n            return v;\n        }\n    },\n    \"world-discrete-ppi-scale\": {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const pixels = context.evaluate(call.args[0]) as number;\n            const scaleFactor = call.args[1] ? (context.evaluate(call.args[1]) as number) : 1;\n            const zoom = context.env.lookup(\"$zoom\") as number;\n            const zoomWidthDiscrete = Math.pow(2, 17.8) / Math.pow(2, Math.floor(zoom));\n            const v = pixels * zoomWidthDiscrete * scaleFactor;\n            return v;\n        }\n    },\n    ppi: {\n        call: (context: ExprEvaluatorContext) => {\n            const ppi = context.env.lookup(\"$ppi\");\n            if (typeof ppi === \"number\") {\n                return ppi;\n            }\n            return 72;\n        }\n    },\n    zoom: {\n        isDynamicOperator: (): boolean => {\n            return true;\n        },\n        call: (context: ExprEvaluatorContext): Value => {\n            if (context.scope === ExprScope.Condition) {\n                const zoom = context.env.lookup(\"$zoom\")!;\n                if (zoom !== undefined) {\n                    return zoom;\n                }\n                throw new Error(\"failed to get the zoom level.\");\n            }\n            // direct usages of 'zoom' outside technique filter conditions\n            // and interpolations are not allowed.\n            throw new Error(\"invalid usage of the 'zoom' operator.\");\n        }\n    }\n};\n\nexport const MapOperators: OperatorDescriptorMap = operators;\nexport type MapOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nimport * as THREE from \"three\";\n\nconst operators = {\n    \"^\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '^'`\n                );\n            }\n            return Math.pow(a, b);\n        }\n    },\n\n    \"-\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (call.args.length === 1) {\n                const value = context.evaluate(call.args[0]);\n                if (typeof value !== \"number\") {\n                    throw new Error(`ìnvalid operand '${typeof value} for operator '-'`);\n                }\n\n                return -value;\n            }\n\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '-'`\n                );\n            }\n            return a - b;\n        }\n    },\n\n    \"/\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '/'`\n                );\n            }\n            return a / b;\n        }\n    },\n\n    \"%\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const a = context.evaluate(call.args[0]);\n            const b = context.evaluate(call.args[1]);\n            if (typeof a !== \"number\" || typeof b !== \"number\") {\n                // tslint:disable-next-line: max-line-length\n                throw new Error(\n                    `invalid operands '${typeof a}' and '${typeof b}' for operator '%'`\n                );\n            }\n            return a % b;\n        }\n    },\n\n    \"+\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) + Number(context.evaluate(b)), 0);\n        }\n    },\n\n    \"*\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return call.args.reduce((a, b) => Number(a) * Number(context.evaluate(b)), 1);\n        }\n    },\n\n    abs: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'abs'`);\n            }\n            return Math.abs(value);\n        }\n    },\n\n    acos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'acos'`);\n            }\n            return Math.acos(value);\n        }\n    },\n\n    asin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'asin'`);\n            }\n            return Math.asin(value);\n        }\n    },\n\n    atan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'atan'`);\n            }\n            return Math.atan(value);\n        }\n    },\n\n    ceil: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ceil'`);\n            }\n            return Math.ceil(value);\n        }\n    },\n\n    cos: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'cos'`);\n            }\n            return Math.cos(value);\n        }\n    },\n\n    e: {\n        call: () => {\n            return Math.E;\n        }\n    },\n\n    floor: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'floor'`);\n            }\n            return Math.floor(value);\n        }\n    },\n\n    ln: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln'`);\n            }\n            return Math.log(value);\n        }\n    },\n\n    ln2: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'ln2'`);\n            }\n            return Math.log2(value);\n        }\n    },\n\n    log10: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'log10'`);\n            }\n            return Math.log10(value);\n        }\n    },\n\n    max: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.max(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    min: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return Math.min(...call.args.map(v => Number(context.evaluate(v))));\n        }\n    },\n\n    /**\n     * Clamp numeric value to given range, inclusive.\n     *\n     * Synopsis:\n     * ```\n     * [\"clamp\", v: number, min: number, max: number]`\n     * ```\n     */\n    clamp: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const v = context.evaluate(call.args[0]);\n            const min = context.evaluate(call.args[1]);\n            const max = context.evaluate(call.args[2]);\n\n            if (typeof v !== \"number\" || typeof min !== \"number\" || typeof max !== \"number\") {\n                throw new Error(`invalid operands '${v}', ${min}, ${max} for operator 'clamp'`);\n            }\n            return THREE.MathUtils.clamp(v, min, max);\n        }\n    },\n\n    pi: {\n        call: () => {\n            return Math.PI;\n        }\n    },\n\n    round: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'round'`);\n            }\n            return Math.round(value);\n        }\n    },\n\n    sin: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sin'`);\n            }\n            return Math.sin(value);\n        }\n    },\n\n    sqrt: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'sqrt'`);\n            }\n            return Math.sqrt(value);\n        }\n    },\n\n    tan: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (typeof value !== \"number\") {\n                throw new Error(`invalid operand '${value}' for operator 'tan'`);\n            }\n            return Math.tan(value);\n        }\n    }\n};\n\nexport const MathOperators: OperatorDescriptorMap = operators;\nexport type MathOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    length: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            if (Array.isArray(value) || typeof value === \"string\") {\n                return value.length;\n            }\n            throw new Error(`invalid operand '${value}' for operator 'length'`);\n        }\n    },\n    coalesce: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            for (const childExpr of call.args) {\n                const value = context.evaluate(childExpr);\n                if (value !== null) {\n                    return value;\n                }\n            }\n            return null;\n        }\n    }\n};\n\nexport const MiscOperators: OperatorDescriptorMap = operators;\nexport type MiscOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr, Expr, ExprScope } from \"../Expr\";\n\nimport { Env } from \"../Env\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nenum LookupMode {\n    get,\n    has\n}\n\nfunction lookupMember(context: ExprEvaluatorContext, args: Expr[], lookupMode: LookupMode) {\n    const memberName = context.evaluate(args[0]);\n\n    if (typeof memberName !== \"string\") {\n        throw new Error(`expected the name of an attribute`);\n    }\n\n    const object = context.evaluate(args[1]) as any;\n\n    if (object && typeof object === \"object\") {\n        if (Env.isEnv(object)) {\n            const value = object.lookup(memberName) ?? null;\n            return lookupMode === LookupMode.get ? value : value !== null;\n        }\n        if (hasOwnProperty.call(object, memberName)) {\n            return lookupMode === LookupMode.get ? object[memberName] : true;\n        }\n    }\n\n    return lookupMode === LookupMode.get ? null : false;\n}\n\nconst operators = {\n    in: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const value = context.evaluate(call.args[0]);\n            const object = context.evaluate(call.args[1]);\n            if (typeof value === \"string\" && typeof object === \"string\") {\n                return object.includes(value);\n            } else if (Array.isArray(object)) {\n                return object.includes(value);\n            }\n            return false;\n        }\n    },\n\n    get: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.get)\n    },\n\n    has: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) =>\n            lookupMember(context, call.args, LookupMode.has)\n    },\n\n    \"dynamic-properties\": {\n        isDynamicOperator: () => true,\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            if (context.scope === ExprScope.Dynamic) {\n                return context.env;\n            }\n            return call;\n        }\n    }\n};\n\nexport const ObjectOperators: OperatorDescriptorMap = operators;\nexport type ObjectOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    concat: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return \"\".concat(...call.args.map(a => String(context.evaluate(a))));\n        }\n    },\n\n    downcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleLowerCase();\n        }\n    },\n\n    upcase: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return String(context.evaluate(call.args[0])).toLocaleUpperCase();\n        }\n    },\n\n    \"~=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.indexOf(right) !== -1;\n            }\n            return false;\n        }\n    },\n\n    \"^=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.startsWith(right);\n            }\n            return false;\n        }\n    },\n\n    \"$=\": {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            const left = context.evaluate(call.args[0]);\n            const right = context.evaluate(call.args[1]);\n            if (typeof left === \"string\" && typeof right === \"string\") {\n                return left.endsWith(right);\n            }\n            return false;\n        }\n    }\n};\n\nexport const StringOperators: OperatorDescriptorMap = operators;\nexport type StringOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { CallExpr } from \"../Expr\";\nimport { ExprEvaluatorContext, OperatorDescriptorMap } from \"../ExprEvaluator\";\n\nconst operators = {\n    typeof: {\n        call: (context: ExprEvaluatorContext, call: CallExpr) => {\n            return typeof context.evaluate(call.args[0]);\n        }\n    }\n};\n\nexport const TypeOperators: OperatorDescriptorMap = operators;\nexport type TypeOperatorNames = keyof typeof operators;\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprScope,\n    ExprVisitor,\n    HasAttributeExpr,\n    LiteralExpr,\n    MatchExpr,\n    MatchLabel,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Env } from \"./Env\";\n\nexport interface InstantiationContext {\n    /**\n     * The [[Env]] used to lookup for names.\n     */\n    env: Env;\n\n    /**\n     * The names to preserve during the instantiation.\n     */\n    preserve?: Set<string>;\n}\n\nconst emptyEnv = new Env();\n\n/**\n * @hidden\n */\nexport class ExprInstantiator implements ExprVisitor<Expr, InstantiationContext> {\n    visitNullLiteralExpr(expr: NullLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, _context: InstantiationContext): Expr {\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name);\n        return LiteralExpr.fromValue(value !== undefined ? value : null);\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: InstantiationContext): Expr {\n        if (context.preserve && context.preserve.has(expr.name)) {\n            return expr;\n        }\n        const value = context.env.lookup(expr.name) !== undefined;\n        return LiteralExpr.fromValue(value);\n    }\n\n    visitCallExpr(expr: CallExpr, context: InstantiationContext): Expr {\n        const args = expr.args.map(arg => arg.accept(this, context));\n        if (args.some((a, i) => a !== expr.args[i])) {\n            return new CallExpr(expr.op, args);\n        }\n        return expr;\n    }\n\n    visitMatchExpr(match: MatchExpr, context: InstantiationContext): Expr {\n        const value = match.value.accept(this, context);\n\n        if (value instanceof LiteralExpr) {\n            const r = value.value;\n            for (const [label, body] of match.branches) {\n                if (Array.isArray(label) && (label as any[]).includes(r)) {\n                    return body.accept(this, context);\n                } else if (label === r) {\n                    return body.accept(this, context);\n                }\n            }\n            return match.fallback.accept(this, context);\n        }\n\n        let changed = match.value !== value;\n\n        const branches: Array<[MatchLabel, Expr]> = match.branches.map(([label, branch]) => {\n            const newBranch = branch.accept(this, context);\n            if (newBranch !== branch) {\n                changed = true;\n            }\n            return [label, newBranch];\n        });\n\n        const fallback = match.fallback.accept(this, context);\n\n        if (fallback !== match.fallback) {\n            changed = true;\n        }\n\n        return changed ? new MatchExpr(value, branches, fallback) : match;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: InstantiationContext): Expr {\n        const branches: Array<[Expr, Expr]> = [];\n\n        let changed = false;\n\n        for (const [condition, branch] of expr.branches) {\n            const newCondition = condition.accept(this, context);\n            const deps = newCondition.dependencies();\n            if (!condition.isDynamic() && deps.properties.size === 0) {\n                if (Boolean(newCondition.evaluate(emptyEnv, ExprScope.Condition))) {\n                    return branch.accept(this, context);\n                }\n            } else {\n                if (newCondition !== condition) {\n                    changed = true;\n                }\n                branches.push([newCondition, branch]);\n            }\n        }\n\n        if (branches.length === 0) {\n            // all the conditions of this CaseExpr evaluated\n            // to false, so the resulting of instantiating this CaseExpr\n            // is the same as instantiating its fallback expression.\n            return expr.fallback.accept(this, context);\n        }\n\n        if (branches.length !== expr.branches.length) {\n            // the number of branches changed, this means that\n            // some of the branches had constant expressions that\n            // evaluate to false. In this case the resulting\n            // `CaseExpr` has less branches.\n            changed = true;\n        }\n\n        // Instantiate the body of all the branches of this CaseExpr\n        // that have dynamic conditions.\n        branches.forEach(branch => {\n            const instantiatedBranch = branch[1].accept(this, context);\n\n            if (instantiatedBranch !== branch[1]) {\n                changed = true;\n            }\n\n            branch[1] = instantiatedBranch;\n        });\n\n        const fallback = expr.fallback.accept(this, context);\n\n        if (fallback !== expr.fallback) {\n            changed = true;\n        }\n\n        if (!changed) {\n            // nothing changed, return the old expression.\n            return expr;\n        }\n\n        return new CaseExpr(branches, fallback);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    CallExpr,\n    EqualityOp,\n    Expr,\n    HasAttributeExpr,\n    LiteralExpr,\n    NumberLiteralExpr,\n    RelationalOp,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\n/**\n * Character value\n */\nenum Character {\n    Tab = 9,\n    Lf = 10,\n    Cr = 13,\n    Space = 32,\n    LParen = 40,\n    RParen = 41,\n    Comma = 44,\n    Dot = 46,\n    LBracket = 91,\n    Backslash = 92,\n    RBracket = 93,\n    _0 = 48,\n    _9 = 57,\n    _ = 95,\n    A = 64,\n    Z = 90,\n    a = 97,\n    z = 122,\n    DoubleQuote = 34,\n    SingleQuote = 39,\n    Exclaim = 33,\n    Equal = 61,\n    Caret = 94,\n    Tilde = 126,\n    Dollar = 36,\n    Less = 60,\n    Greater = 62,\n    Bar = 124,\n    Amp = 38\n}\n\n/**\n * Check if a codepoint is a whitespace character.\n */\nfunction isSpace(codepoint: number): boolean {\n    switch (codepoint) {\n        case Character.Tab:\n        case Character.Lf:\n        case Character.Cr:\n        case Character.Space:\n            return true;\n        default:\n            return false;\n    } // switch\n}\n\n/**\n * Check if codepoint is a digit character.\n */\nfunction isNumber(codepoint: number): boolean {\n    return codepoint >= Character._0 && codepoint <= Character._9;\n}\n\n/**\n * Check if codepoint is a letter character.\n */\nfunction isLetter(codepoint: number): boolean {\n    return (\n        (codepoint >= Character.a && codepoint <= Character.z) ||\n        (codepoint >= Character.A && codepoint <= Character.Z)\n    );\n}\n\n/**\n * Check if codepoint is either a digit or a letter character.\n */\nfunction isLetterOrNumber(codepoint: number): boolean {\n    return isLetter(codepoint) || isNumber(codepoint);\n}\n\n/**\n * Check if codepoint is an identification character: underscore, dollar sign, dot or bracket.\n */\nfunction isIdentChar(codepoint: number): boolean {\n    return (\n        isLetterOrNumber(codepoint) ||\n        codepoint === Character._ ||\n        codepoint === Character.Dollar ||\n        codepoint === Character.Dot ||\n        codepoint === Character.LBracket ||\n        codepoint === Character.RBracket\n    );\n}\n\n/**\n * Tokens used in theme grammar.\n */\nenum Token {\n    Eof = 0,\n    Error,\n    Identifier,\n    Number,\n    String,\n    Comma,\n    LParen,\n    RParen,\n    LBracket,\n    RBracket,\n    Exclaim,\n    TildeEqual,\n    CaretEqual,\n    DollarEqual,\n    EqualEqual,\n    ExclaimEqual,\n    Less,\n    Greater,\n    LessEqual,\n    GreaterEqual,\n    BarBar,\n    AmpAmp\n}\n\n/**\n * Maps a token to its string name.\n */\nfunction tokenSpell(token: Token): string {\n    switch (token) {\n        case Token.Eof:\n            return \"eof\";\n        case Token.Error:\n            return \"error\";\n        case Token.Identifier:\n            return \"identifier\";\n        case Token.Number:\n            return \"number\";\n        case Token.String:\n            return \"string\";\n        case Token.Comma:\n            return \",\";\n        case Token.LParen:\n            return \"(\";\n        case Token.RParen:\n            return \")\";\n        case Token.LBracket:\n            return \"[\";\n        case Token.RBracket:\n            return \"]\";\n        case Token.Exclaim:\n            return \"!\";\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        case Token.BarBar:\n            return \"||\";\n        case Token.AmpAmp:\n            return \"&&\";\n        default:\n            throw new Error(`invalid token ${token}`);\n    }\n}\n\n/**\n * Lexer class implementation.\n */\nclass Lexer {\n    private m_token: Token = Token.Error;\n    private m_index = 0;\n    private m_char: number = Character.Lf;\n    private m_text?: string;\n\n    constructor(readonly code: string) {}\n\n    /**\n     * Single lexer token.\n     */\n    token(): Token {\n        return this.m_token;\n    }\n\n    /**\n     * Parsed text.\n     */\n    text(): string {\n        return this.m_text || \"\";\n    }\n\n    /**\n     * Go to the next token.\n     */\n    next(): Token {\n        this.m_token = this.yylex();\n        if (this.m_token === Token.Error) {\n            throw new Error(`unexpected character ${this.m_char}`);\n        }\n        return this.m_token;\n    }\n\n    private yyinp(): void {\n        this.m_char = this.code.codePointAt(this.m_index++) || 0;\n    }\n\n    private yylex(): Token {\n        this.m_text = undefined;\n        while (isSpace(this.m_char)) {\n            this.yyinp();\n        }\n        if (this.m_char === 0) {\n            return Token.Eof;\n        }\n        const ch = this.m_char;\n        this.yyinp();\n        switch (ch) {\n            case Character.LParen:\n                return Token.LParen;\n            case Character.RParen:\n                return Token.RParen;\n            case Character.LBracket:\n                return Token.LBracket;\n            case Character.RBracket:\n                return Token.RBracket;\n            case Character.Comma:\n                return Token.Comma;\n            case Character.SingleQuote:\n            case Character.DoubleQuote: {\n                const start = this.m_index - 1;\n                while (this.m_char && this.m_char !== ch) {\n                    // ### TODO handle escape sequences\n                    this.yyinp();\n                }\n                if (this.m_char !== ch) {\n                    throw new Error(\"Unfinished string literal\");\n                }\n                this.yyinp();\n                this.m_text = this.code.substring(start, this.m_index - 2);\n                return Token.String;\n            }\n            case Character.Exclaim:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.ExclaimEqual;\n                }\n                return Token.Exclaim;\n            case Character.Caret:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.CaretEqual;\n                }\n                return Token.Error;\n            case Character.Tilde:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.TildeEqual;\n                }\n                return Token.Error;\n            case Character.Equal:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.EqualEqual;\n                }\n                return Token.Error;\n            case Character.Less:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.LessEqual;\n                }\n                return Token.Less;\n            case Character.Greater:\n                if (this.m_char === Character.Equal) {\n                    this.yyinp();\n                    return Token.GreaterEqual;\n                }\n                return Token.Greater;\n            case Character.Bar:\n                if (this.m_char === Character.Bar) {\n                    this.yyinp();\n                    return Token.BarBar;\n                }\n                return Token.Error;\n            case Character.Amp:\n                if (this.m_char === Character.Amp) {\n                    this.yyinp();\n                    return Token.AmpAmp;\n                }\n                return Token.Error;\n            default: {\n                const start = this.m_index - 2;\n                if (\n                    isLetter(ch) ||\n                    ch === Character._ ||\n                    (ch === Character.Dollar && isIdentChar(this.m_char))\n                ) {\n                    while (isIdentChar(this.m_char)) {\n                        this.yyinp();\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Identifier;\n                } else if (isNumber(ch)) {\n                    while (isNumber(this.m_char)) {\n                        this.yyinp();\n                    }\n                    if (this.m_char === Character.Dot) {\n                        this.yyinp();\n                        while (isNumber(this.m_char)) {\n                            this.yyinp();\n                        }\n                    }\n                    this.m_text = this.code.substring(start, this.m_index - 1);\n                    return Token.Number;\n                } else if (ch === Character.Dollar) {\n                    if (this.m_char === Character.Equal) {\n                        this.yyinp();\n                        return Token.DollarEqual;\n                    }\n                    return Token.Error;\n                }\n            }\n        }\n        return Token.Error;\n    }\n}\n\nfunction getEqualityOp(token: Token): EqualityOp | undefined {\n    switch (token) {\n        case Token.TildeEqual:\n            return \"~=\";\n        case Token.CaretEqual:\n            return \"^=\";\n        case Token.DollarEqual:\n            return \"$=\";\n        case Token.EqualEqual:\n            return \"==\";\n        case Token.ExclaimEqual:\n            return \"!=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nfunction getRelationalOp(token: Token): RelationalOp | undefined {\n    switch (token) {\n        case Token.Less:\n            return \"<\";\n        case Token.Greater:\n            return \">\";\n        case Token.LessEqual:\n            return \"<=\";\n        case Token.GreaterEqual:\n            return \">=\";\n        default:\n            return undefined;\n    } // switch\n}\n\nexport class ExprParser {\n    private readonly lex: Lexer;\n\n    constructor(code: string) {\n        this.lex = new Lexer(code);\n        this.lex.next();\n    }\n\n    parse(): Expr | never {\n        return this.parseLogicalOr();\n    }\n\n    private yyexpect(token: Token): void | never {\n        if (this.lex.token() !== token) {\n            throw new Error(\n                `Syntax error: Expected token '${tokenSpell(token)}' but ` +\n                    `found '${tokenSpell(this.lex.token())}'`\n            );\n        }\n        this.lex.next();\n    }\n\n    private parsePrimary(): Expr | never {\n        switch (this.lex.token()) {\n            case Token.Identifier: {\n                const text = this.lex.text();\n                switch (text) {\n                    case \"has\":\n                        this.lex.next(); // skip has keyword\n                        this.yyexpect(Token.LParen);\n                        const hasAttribute = this.lex.text();\n                        this.yyexpect(Token.Identifier);\n                        this.yyexpect(Token.RParen);\n                        return new HasAttributeExpr(hasAttribute);\n                    case \"length\":\n                        this.lex.next(); // skip length keyword\n                        this.yyexpect(Token.LParen);\n                        const value = this.parseLogicalOr();\n                        this.yyexpect(Token.RParen);\n                        return new CallExpr(\"length\", [value]);\n                    default:\n                        const expr = new VarExpr(text);\n                        this.lex.next();\n                        return expr;\n                }\n            }\n\n            case Token.LParen: {\n                this.lex.next();\n                const expr = this.parseLogicalOr();\n                this.yyexpect(Token.RParen);\n                return expr;\n            }\n\n            default:\n                return this.parseLiteral();\n        } // switch\n    }\n\n    private parseLiteral(): NumberLiteralExpr | StringLiteralExpr | never {\n        switch (this.lex.token()) {\n            case Token.Number: {\n                const expr = new NumberLiteralExpr(parseFloat(this.lex.text()));\n                this.lex.next();\n                return expr;\n            }\n            case Token.String: {\n                const expr = new StringLiteralExpr(this.lex.text());\n                this.lex.next();\n                return expr;\n            }\n            default:\n                throw new Error(\"Syntax error\");\n        } // switch\n    }\n\n    private parseUnary(): Expr | never {\n        if (this.lex.token() === Token.Exclaim) {\n            this.lex.next();\n            return new CallExpr(\"!\", [this.parseUnary()]);\n        }\n        return this.parsePrimary();\n    }\n\n    private parseRelational(): Expr | never {\n        let expr = this.parseUnary();\n        while (true) {\n            if (this.lex.token() === Token.Identifier && this.lex.text() === \"in\") {\n                this.lex.next();\n                this.yyexpect(Token.LBracket);\n                const elements = [this.parseLiteral()];\n                while (this.lex.token() === Token.Comma) {\n                    this.lex.next();\n                    elements.push(this.parseLiteral());\n                }\n                this.yyexpect(Token.RBracket);\n                expr = new CallExpr(\"in\", [\n                    expr,\n                    LiteralExpr.fromValue(elements.map(({ value }) => value))\n                ]);\n            } else {\n                const op = getRelationalOp(this.lex.token());\n                if (op === undefined) {\n                    break;\n                }\n                this.lex.next();\n                const right = this.parseUnary();\n                expr = new CallExpr(op, [expr, right]);\n            }\n        }\n        return expr;\n    }\n\n    private parseEquality(): Expr | never {\n        let expr = this.parseRelational();\n        while (true) {\n            let op: string | undefined = getEqualityOp(this.lex.token());\n\n            if (op === undefined) {\n                break;\n            }\n\n            if (op === \"~=\") {\n                op = \"in\";\n            }\n\n            this.lex.next();\n            const right = this.parseRelational();\n            expr = new CallExpr(op, [expr, right]);\n        }\n        return expr;\n    }\n\n    private parseLogicalAnd(): Expr | never {\n        const expr = this.parseEquality();\n\n        if (this.lex.token() !== Token.AmpAmp) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseEquality());\n        } while (this.lex.token() === Token.AmpAmp);\n\n        return new CallExpr(\"all\", expressions);\n    }\n\n    private parseLogicalOr(): Expr | never {\n        const expr = this.parseLogicalAnd();\n\n        if (this.lex.token() !== Token.BarBar) {\n            return expr;\n        }\n\n        const expressions: Expr[] = [expr];\n\n        do {\n            this.lex.next();\n            expressions.push(this.parseLogicalAnd());\n        } while (this.lex.token() === Token.BarBar);\n\n        return new CallExpr(\"any\", expressions);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Common communication protocol for [[WorkerService]].\n */\nexport namespace WorkerServiceProtocol {\n    /**\n     * Service id of worker manager ([[WorkerServiceManager]]) used to create/destroy service\n     * instances in workers.\n     */\n    export const WORKER_SERVICE_MANAGER_SERVICE_ID = \"worker-service-manager\";\n\n    /**\n     * Define possible names of messages exchanged with services within `WebWorker`.\n     */\n    export enum ServiceMessageName {\n        Initialized = \"initialized\",\n        Request = \"request\",\n        Response = \"response\"\n    }\n\n    /**\n     * Interface for `ServiceMessage` which describes metadata for a service messages.\n     */\n    export interface ServiceMessage {\n        service: string;\n        type: ServiceMessageName;\n    }\n\n    /**\n     * This message is sent by the worker to the main thread. No data is sent. Receiving this\n     * message confirms that the worker has started successfully.\n     */\n    export interface InitializedMessage extends ServiceMessage {\n        type: ServiceMessageName.Initialized;\n    }\n\n    /**\n     * Type guard to check if an object is a signal message from worker.\n     */\n    export function isInitializedMessage(message: any): message is InitializedMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Initialized\n        );\n    }\n\n    /**\n     * Define possible names of requests called on services within `WebWorker`.\n     */\n    export enum Requests {\n        CreateService = \"create-service\",\n        DestroyService = \"destroy-service\"\n    }\n\n    /**\n     * This is an internal general interface used in communication with workers.\n     * Check [[ConcurrentWorkerSet]]'s invokeRequest function for exemplary usage.\n     */\n    export interface ServiceRequest {\n        type: string;\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically create a\n     * new service.\n     *\n     * May throw `UnknownServiceError` if service of given type is not registered in\n     * [[WorkerServiceManager]], see [[isUnknownServiceError]].\n     */\n    export interface CreateServiceRequest extends ServiceRequest {\n        type: Requests.CreateService;\n\n        /**\n         * Type of service to be created.\n         *\n         * @see [[WorkerServiceManager.register]]\n         */\n        targetServiceType: string;\n\n        /**\n         * The newly created service instance will be available under this id.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Test if `error` thrown by [[CreateServiceRequest]] was caused by unknown type of service.\n     */\n    export function isUnknownServiceError(error: Error): boolean {\n        return /unknown targetServiceType requested: /.test(error.message);\n    }\n\n    /**\n     * This message is sent by the main thread to [[WorkerServiceManager]] to dynamically destroy a\n     * service.\n     */\n    export interface DestroyServiceRequest extends ServiceRequest {\n        type: Requests.DestroyService;\n\n        /**\n         * Id of service to be destroyed.\n         */\n        targetServiceId: string;\n    }\n\n    /**\n     * Possible service management messages (`CreateService` or `DestroyService`) sent to WebWorker.\n     */\n    export type WorkerServiceManagerRequest = CreateServiceRequest | DestroyServiceRequest;\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface RequestMessage extends ServiceMessage {\n        type: ServiceMessageName.Request;\n        messageId: number;\n        request: any;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isRequestMessage(message: any): message is RequestMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Request\n        );\n    }\n\n    /**\n     * This message is a part of the Request-Response scheme implemented to be used in communication\n     * between workers and the decoder.\n     */\n    export interface ResponseMessage extends ServiceMessage {\n        type: ServiceMessageName.Response;\n        messageId: number;\n        errorMessage?: string;\n        errorStack?: string;\n        response?: object;\n    }\n\n    /**\n     * Type guard to check if an object is a request message sent to a worker.\n     */\n    export function isResponseMessage(message: any): message is ResponseMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === ServiceMessageName.Response\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoJson } from \"../lib/GeoJsonDataType\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Communication protocol with [[ITiler]].\n */\nexport namespace WorkerTilerProtocol {\n    /**\n     * Define possible names of requests called on tiler services within `WebWorker`.\n     */\n    export enum Requests {\n        RegisterIndex = \"register-index\",\n        UpdateIndex = \"update-index\",\n        TileRequest = \"tile-request\"\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface RegisterIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.RegisterIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an index registration request sent to a worker.\n     */\n    export function isRegisterIndexRequest(message: any): message is RegisterIndexRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.RegisterIndex\n        );\n    }\n\n    /**\n     * This object is sent to the tiler to register a new tile index in the worker.\n     */\n    export interface UpdateIndexRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.UpdateIndex;\n        id: string;\n        input: string | GeoJson;\n    }\n\n    /**\n     * Type guard to check if an object is an update request for the index registration.\n     */\n    export function isUpdateIndexRequest(message: any): message is UpdateIndexRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.UpdateIndex;\n    }\n\n    /**\n     * This object is sent to the tiler asking to retrieve a specific tile. The expected response\n     * type is an object containing a tiled payload.\n     */\n    export interface TileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileRequest;\n        index: string;\n        tileKey: number;\n    }\n\n    /**\n     * Type guard to check if an object is a tile request sent to a worker.\n     */\n    export function isTileRequest(message: any): message is TileRequest {\n        return message && typeof message.type === \"string\" && message.type === Requests.TileRequest;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Definitions, StyleSet } from \"./Theme\";\nimport { WorkerServiceProtocol } from \"./WorkerServiceProtocol\";\n\n/**\n * Interface for `OptionsMap` which describes a general structure of key-value pairs.\n */\nexport interface OptionsMap {\n    [name: string]: any;\n}\n\n/**\n * Allows to cancel and prioritize requests inside the requestQueue. Useful to optimize the order of\n * decoding tiles during animations and camera movements.\n *\n * `RequestController` is not extending [[AbortController]], because this is not supported in ES5.\n */\nexport class RequestController implements AbortController {\n    /**\n     * Creates an instance of `RequestController`.\n     *\n     * @param {number} priority\n     * @param {AbortController} abortController Optional [[AbortController]] used internally, since\n     *      [[AbortController]]s should not be subclassed.\n     */\n    constructor(\n        public priority: number = 0,\n        public abortController: AbortController = new AbortController()\n    ) {}\n\n    get signal(): AbortSignal {\n        return this.abortController.signal;\n    }\n\n    /**\n     * Invoking this method will set this object's AbortSignal's aborted flag and\n     * signal to any observers that the associated activity is to be aborted.\n     */\n    abort(): void {\n        this.abortController.abort();\n    }\n}\n\n/**\n * Communication protocol with [[ITileDecoder]].\n */\nexport namespace WorkerDecoderProtocol {\n    /**\n     * Define possible names of messages exchanged with decoder services within `WebWorker`.\n     */\n    export enum DecoderMessageName {\n        Configuration = \"configuration\"\n    }\n\n    /**\n     * Interface for `DecodedTileMessage` which describes metadata for a decoded tile.\n     */\n    export interface DecoderMessage {\n        service: string;\n        type: DecoderMessageName;\n    }\n\n    /**\n     * Interface for a ConfigurationMessage that is sent from the datasource to the decoder. The\n     * message used to configure the [[ITileDecoder]].\n     */\n    export interface ConfigurationMessage extends DecoderMessage {\n        type: DecoderMessageName.Configuration;\n        styleSet?: StyleSet;\n        definitions?: Definitions;\n        options?: OptionsMap;\n        languages?: string[];\n    }\n\n    /**\n     * Type guard to check if an object is an instance of `ConfigurationMessage`.\n     */\n    export function isConfigurationMessage(message: any): message is ConfigurationMessage {\n        return (\n            message &&\n            typeof message.service === \"string\" &&\n            typeof message.type === \"string\" &&\n            message.type === DecoderMessageName.Configuration\n        );\n    }\n\n    /**\n     * Define possible names of requests called on decoder services within `WebWorker`.\n     */\n    export enum Requests {\n        DecodeTileRequest = \"decode-tile-request\",\n        TileInfoRequest = \"tile-info-request\"\n    }\n\n    /**\n     * This object is sent to the decoder asking to decode a specific tile. The expected response\n     * type is a [[DecodedTile]].\n     */\n    export interface DecodeTileRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.DecodeTileRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is a decoded tile object sent to a worker.\n     */\n    export function isDecodeTileRequest(message: any): message is DecodeTileRequest {\n        return (\n            message &&\n            typeof message.type === \"string\" &&\n            message.type === Requests.DecodeTileRequest\n        );\n    }\n\n    /**\n     * This object is sent to the decoder asking for a tile info of a specific tile. The expected\n     * response type is a [[DecodedTile]].\n     */\n    export interface TileInfoRequest extends WorkerServiceProtocol.ServiceRequest {\n        type: Requests.TileInfoRequest;\n        tileKey: number;\n        data: ArrayBufferLike;\n        projection: string;\n    }\n\n    /**\n     * Type guard to check if an object is an info tile object sent to a worker.\n     */\n    export function isTileInfoRequest(message: any): message is TileInfoRequest {\n        return (\n            message && typeof message.type === \"string\" && message.type === Requests.TileInfoRequest\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\nclass IdentityProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Planar;\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    worldExtent<WorldBoundingBox extends Box3Like>(\n        minAltitude: number,\n        maxAltitude: number,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        result.min.x = -Math.PI;\n        result.min.y = -Math.PI * 0.5;\n        result.min.z = minAltitude;\n        result.max.x = Math.PI;\n        result.max.y = Math.PI * 0.5;\n        result.max.z = maxAltitude;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result?: WorldCoordinates\n    ): WorldCoordinates {\n        if (!result) {\n            // tslint:disable-next-line:no-object-literal-type-assertion\n            result = { x: 0, y: 0, z: 0 } as WorldCoordinates;\n        }\n        result.x = THREE.MathUtils.degToRad(geoPoint.longitude);\n        result.y = THREE.MathUtils.degToRad(geoPoint.latitude);\n        result.z = geoPoint.altitude || 0;\n        return result;\n    }\n\n    /** @override */\n    unprojectPoint(worldPoint: Vector3Like): GeoCoordinates {\n        const geoPoint = GeoCoordinates.fromRadians(worldPoint.y, worldPoint.x, worldPoint.z);\n        return geoPoint;\n    }\n\n    /** @override */\n    unprojectAltitude(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    projectBox<WorldBoundingBox extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result?: WorldBoundingBox\n    ): WorldBoundingBox {\n        if (!result) {\n            result = (new THREE.Box3() as Box3Like) as WorldBoundingBox;\n        }\n        const min = this.projectPoint(\n            new GeoCoordinates(geoBox.south, geoBox.west, geoBox.minAltitude)\n        );\n        const max = this.projectPoint(\n            new GeoCoordinates(geoBox.north, geoBox.east, geoBox.maxAltitude)\n        );\n        if (isBox3Like(result)) {\n            result.min.x = min.x;\n            result.min.y = min.y;\n            result.min.z = min.z;\n            result.max.x = max.x;\n            result.max.y = max.y;\n            result.max.z = max.z;\n        } else if (isOrientedBox3Like(result)) {\n            MathUtils.newVector3(1, 0, 0, result.xAxis);\n            MathUtils.newVector3(0, 1, 0, result.yAxis);\n            MathUtils.newVector3(0, 0, 1, result.zAxis);\n            result.position.x = (min.x + max.x) * 0.5;\n            result.position.y = (min.y + max.y) * 0.5;\n            result.position.z = (min.z + max.z) * 0.5;\n            result.extents.x = (max.x - min.x) * 0.5;\n            result.extents.y = (max.y - min.y) * 0.5;\n            result.extents.z = Math.max(Number.EPSILON, (max.z - min.z) * 0.5);\n        }\n        return result;\n    }\n\n    /** @override */\n    unprojectBox(worldBox: Box3Like): GeoBox {\n        const minGeo = this.unprojectPoint(worldBox.min);\n        const maxGeo = this.unprojectPoint(worldBox.max);\n        return GeoBox.fromCoordinates(minGeo, maxGeo);\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return worldPoint.z;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        worldPoint.z = 0;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(_worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 1 };\n        } else {\n            normal.x = 0;\n            normal.y = 0;\n            normal.z = 1;\n        }\n        return normal;\n    }\n}\n\n/**\n * Identity [[Projection]] used to convert geo coordinates to unit coordinates and vice versa.\n */\nexport const identityProjection: Projection = new IdentityProjection(1);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { GeoCoordinates } from \"../coordinates/GeoCoordinates\";\nimport { GeoCoordinatesLike } from \"../coordinates/GeoCoordinatesLike\";\nimport { Box3Like, isBox3Like } from \"../math/Box3Like\";\nimport { MathUtils } from \"../math/MathUtils\";\nimport { isOrientedBox3Like, OrientedBox3Like } from \"../math/OrientedBox3Like\";\nimport { TransformLike } from \"../math/TransformLike\";\nimport { Vector3Like } from \"../math/Vector3Like\";\nimport { EarthConstants } from \"./EarthConstants\";\nimport { mercatorProjection, webMercatorProjection } from \"./MercatorProjection\";\nimport { Projection, ProjectionType } from \"./Projection\";\n\nimport * as THREE from \"three\";\n\n/**\n * Transforms the given vector using the provided basis.\n */\nfunction apply(\n    xAxis: Vector3Like,\n    yAxis: Vector3Like,\n    zAxis: Vector3Like,\n    v: Vector3Like\n): Vector3Like {\n    const x = xAxis.x * v.x + yAxis.x * v.y + zAxis.x * v.z;\n    const y = xAxis.y * v.x + yAxis.y * v.y + zAxis.y * v.z;\n    const z = xAxis.z * v.x + yAxis.z * v.y + zAxis.z * v.z;\n    v.x = x;\n    v.y = y;\n    v.z = z;\n    return v;\n}\n\n/**\n * Returns the quadrants for the given longitude. The quadrant is defined as:\n *  - quadrant(+Math.PI * -1.0) = 0\n *  - quadrant(+Math.PI * -0.5) = 1\n *  - quadrant(+Math.PI *  0.0) = 2\n *  - quadrant(+Math.PI *  0.5) = 3\n *  - quadrant(+Math.PI *  1.0) = 4\n *\n * @param longitude The longitude in radians.\n */\nfunction getLongitudeQuadrant(longitude: number) {\n    const oneOverPI = 1 / Math.PI;\n    const quadrantIndex = Math.floor(2 * (longitude * oneOverPI + 1));\n    return THREE.MathUtils.clamp(quadrantIndex, 0, 4);\n}\n\nfunction lengthOfVector3(worldPoint: Vector3Like): number {\n    const d = Math.sqrt(\n        worldPoint.x * worldPoint.x + worldPoint.y * worldPoint.y + worldPoint.z * worldPoint.z\n    );\n    return d;\n}\n\n/**\n * Creates a Box3 enclosing the geobox.\n *\n * @param geoBox Ghe given geobox\n * @param worldBox The resulting axis aligned bounding box.\n */\nfunction makeBox3<Bounds extends Box3Like>(\n    geoBox: GeoBox,\n    worldBox: Bounds,\n    unitScale: number\n): Bounds {\n    const halfEquatorialRadius = (unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n\n    const minLongitude = THREE.MathUtils.degToRad(geoBox.west);\n    const maxLongitude = THREE.MathUtils.degToRad(geoBox.east);\n\n    const minLongitudeQuadrant = getLongitudeQuadrant(minLongitude);\n    const maxLongitudeQuadrant = getLongitudeQuadrant(maxLongitude);\n\n    let xMin = Math.cos(minLongitude);\n    let xMax = xMin;\n    let yMin = Math.sin(minLongitude);\n    let yMax = yMin;\n\n    for (\n        let quadrantIndex = minLongitudeQuadrant + 1;\n        quadrantIndex <= maxLongitudeQuadrant;\n        quadrantIndex++\n    ) {\n        // tslint:disable-next-line: no-bitwise\n        const x = ((quadrantIndex + 1) & 1) * ((quadrantIndex & 2) - 1);\n        xMin = Math.min(x, xMin);\n        xMax = Math.max(x, xMax);\n\n        // tslint:disable-next-line: no-bitwise\n        const y = (quadrantIndex & 1) * ((quadrantIndex & 2) - 1);\n        yMin = Math.min(y, yMin);\n        yMax = Math.max(y, yMax);\n    }\n\n    const cosMaxLongitude = Math.cos(maxLongitude);\n    xMin = Math.min(cosMaxLongitude, xMin);\n    xMax = Math.max(cosMaxLongitude, xMax);\n\n    const sinMaxLongitude = Math.sin(maxLongitude);\n    yMin = Math.min(sinMaxLongitude, yMin);\n    yMax = Math.max(sinMaxLongitude, yMax);\n\n    const xCenter = (xMax + xMin) * halfEquatorialRadius;\n    const xExtent = (xMax - xMin) * halfEquatorialRadius;\n\n    const yCenter = (yMax + yMin) * halfEquatorialRadius;\n    const yExtent = (yMax - yMin) * halfEquatorialRadius;\n\n    // Calculate Z boundaries.\n    const minLatitude = THREE.MathUtils.degToRad(geoBox.south);\n    const maxLatutide = THREE.MathUtils.degToRad(geoBox.north);\n\n    const zMax = Math.sin(maxLatutide);\n    const zMin = Math.sin(minLatitude);\n\n    const zCenter = (zMax + zMin) * halfEquatorialRadius;\n    const zExtent = (zMax - zMin) * halfEquatorialRadius;\n\n    worldBox.min.x = xCenter - xExtent;\n    worldBox.min.y = yCenter - yExtent;\n    worldBox.min.z = zCenter - zExtent;\n    worldBox.max.x = xCenter + xExtent;\n    worldBox.max.y = yCenter + yExtent;\n    worldBox.max.z = zCenter + zExtent;\n\n    return worldBox;\n}\n\n/**\n * Computes the spherical projection of the given geo coordinates.\n *\n * @param geoPoint The geo coordinates.\n * @param worldpoint The resulting world coordinates.\n */\nfunction project<WorldCoordinates extends Vector3Like>(\n    geoPoint: GeoCoordinatesLike,\n    worldpoint: WorldCoordinates,\n    unitScale: number\n): typeof worldpoint {\n    const radius = unitScale + (geoPoint.altitude || 0);\n    const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n    const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n    const cosLatitude = Math.cos(latitude);\n    worldpoint.x = radius * cosLatitude * Math.cos(longitude);\n    worldpoint.y = radius * cosLatitude * Math.sin(longitude);\n    worldpoint.z = radius * Math.sin(latitude);\n    return worldpoint;\n}\n\nclass SphereProjection extends Projection {\n    /** @override */\n    readonly type: ProjectionType = ProjectionType.Spherical;\n\n    /** @override */\n    worldExtent<Bounds extends Box3Like>(\n        _minElevation: number,\n        maxElevation: number,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        const radius = this.unitScale + maxElevation;\n        result.min.x = -radius;\n        result.min.y = -radius;\n        result.min.z = -radius;\n        result.max.x = radius;\n        result.max.y = radius;\n        result.max.z = radius;\n        return result;\n    }\n\n    /** @override */\n    projectPoint<WorldCoordinates extends Vector3Like>(\n        geoPoint: GeoCoordinatesLike,\n        result: WorldCoordinates = MathUtils.newVector3(0, 0, 0) as WorldCoordinates\n    ): WorldCoordinates {\n        return project(geoPoint, result, this.unitScale);\n    }\n\n    /** @override */\n    unprojectPoint(point: Vector3Like): GeoCoordinates {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y;\n        const parallelRadius = Math.sqrt(parallelRadiusSq);\n        const v = point.z / parallelRadius;\n\n        if (isNaN(v)) {\n            return GeoCoordinates.fromRadians(0, 0, -this.unitScale);\n        }\n\n        const radius = Math.sqrt(parallelRadiusSq + point.z * point.z);\n\n        return GeoCoordinates.fromRadians(\n            Math.atan(v),\n            Math.atan2(point.y, point.x),\n            radius - this.unitScale\n        );\n    }\n\n    /** @override */\n    unprojectAltitude(point: Vector3Like): number {\n        const parallelRadiusSq = point.x * point.x + point.y * point.y + point.z * point.z;\n        return Math.sqrt(parallelRadiusSq) - EarthConstants.EQUATORIAL_RADIUS;\n    }\n\n    /** @override */\n    projectBox<Bounds extends Box3Like | OrientedBox3Like>(\n        geoBox: GeoBox,\n        result: Bounds = (new THREE.Box3() as Box3Like) as Bounds\n    ): Bounds {\n        if (isBox3Like(result)) {\n            return makeBox3(geoBox, result, this.unitScale);\n        } else if (isOrientedBox3Like(result)) {\n            if (geoBox.longitudeSpan >= 90) {\n                const bounds = makeBox3(geoBox, new THREE.Box3() as Box3Like, this.unitScale);\n                MathUtils.newVector3(1, 0, 0, result.xAxis);\n                MathUtils.newVector3(0, 1, 0, result.yAxis);\n                MathUtils.newVector3(0, 0, 1, result.zAxis);\n                result.position.x = (bounds.max.x + bounds.min.x) * 0.5;\n                result.position.y = (bounds.max.y + bounds.min.y) * 0.5;\n                result.position.z = (bounds.max.z + bounds.min.z) * 0.5;\n                result.extents.x = (bounds.max.x - bounds.min.x) * 0.5;\n                result.extents.y = (bounds.max.y - bounds.min.y) * 0.5;\n                result.extents.z = (bounds.max.z - bounds.min.z) * 0.5;\n                return result;\n            }\n\n            const { south, west, north, east, center: mid } = geoBox;\n            const midX = mid.longitude;\n            const midY = mid.latitude;\n            const cosSouth = Math.cos(THREE.MathUtils.degToRad(south));\n            const sinSouth = Math.sin(THREE.MathUtils.degToRad(south));\n            const cosWest = Math.cos(THREE.MathUtils.degToRad(west));\n            const sinWest = Math.sin(THREE.MathUtils.degToRad(west));\n            const cosNorth = Math.cos(THREE.MathUtils.degToRad(north));\n            const sinNorth = Math.sin(THREE.MathUtils.degToRad(north));\n            const cosEast = Math.cos(THREE.MathUtils.degToRad(east));\n            const sinEast = Math.sin(THREE.MathUtils.degToRad(east));\n            const cosMidX = Math.cos(THREE.MathUtils.degToRad(midX));\n            const sinMidX = Math.sin(THREE.MathUtils.degToRad(midX));\n            const cosMidY = Math.cos(THREE.MathUtils.degToRad(midY));\n            const sinMidY = Math.sin(THREE.MathUtils.degToRad(midY));\n\n            // Build the orientation of the OBB using the normal vector and its partial derivates.\n\n            // the sperical coordinates of the mid point of the geobox.\n            MathUtils.newVector3(cosMidX * cosMidY, sinMidX * cosMidY, sinMidY, result.zAxis);\n\n            // the partial derivates of the normal vector.\n            MathUtils.newVector3(-sinMidX, cosMidX, 0, result.xAxis);\n            MathUtils.newVector3(-cosMidX * sinMidY, -sinMidX * sinMidY, cosMidY, result.yAxis);\n\n            let width: number;\n            let minY: number;\n            let maxY: number;\n\n            if (south >= 0) {\n                // abs(dot(southWest - southEast, xAxis))\n                width = Math.abs(\n                    cosSouth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                );\n\n                // dot(south, yAxis)\n                minY = cosMidY * sinSouth - sinMidY * cosSouth;\n\n                // dot(northEast, zAxis)\n                maxY =\n                    cosMidY * sinNorth -\n                    sinMidY * cosNorth * (cosMidX * cosEast + sinMidX * sinEast);\n            } else {\n                if (north <= 0) {\n                    // abs(dot(northWest - northEast, xAxis))\n                    width = Math.abs(\n                        cosNorth * (cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest))\n                    );\n\n                    // dot(north, yAxis)\n                    maxY = cosMidY * sinNorth - sinMidY * cosNorth;\n                } else {\n                    // abs(dot(west - east, xAxis))\n                    width = Math.abs(cosMidX * (sinWest - sinEast) + sinMidX * (cosEast - cosWest));\n\n                    // dot(northEast, yAxis)\n                    maxY =\n                        cosMidY * sinNorth -\n                        sinMidY * cosNorth * (sinMidX * sinEast + cosMidX * cosEast);\n                }\n\n                // dot(southEast, yAxis)\n                minY =\n                    cosMidY * sinSouth -\n                    sinMidY * cosSouth * (cosMidX * cosEast + sinMidX * sinEast);\n            }\n\n            const rMax = (this.unitScale + (geoBox.maxAltitude || 0)) * 0.5;\n            const rMin = (this.unitScale + (geoBox.minAltitude || 0)) * 0.5;\n\n            // min(dot(southEast, zAxis), dot(northEast, zAxis))\n\n            const d = cosMidY * (cosMidX * cosEast + sinMidX * sinEast);\n\n            const minZ = Math.min(\n                cosNorth * d + sinNorth * sinMidY,\n                cosSouth * d + sinSouth * sinMidY\n            );\n\n            MathUtils.newVector3(\n                width * rMax,\n                (maxY - minY) * rMax,\n                rMax - minZ * rMin,\n                result.extents\n            );\n\n            MathUtils.newVector3(0, (minY + maxY) * rMax, rMax + rMax, result.position);\n\n            apply(result.xAxis, result.yAxis, result.zAxis, result.position);\n\n            result.position.x = result.position.x - result.zAxis.x * result.extents.z;\n            result.position.y = result.position.y - result.zAxis.y * result.extents.z;\n            result.position.z = result.position.z - result.zAxis.z * result.extents.z;\n\n            return result;\n        }\n\n        throw new Error(\"Invalid bounding box\");\n    }\n\n    /** @override */\n    unprojectBox(_worldBox: Box3Like): GeoBox {\n        throw new Error(\"Method not implemented.\");\n    }\n\n    /** @override */\n    getScaleFactor(_worldPoint: Vector3Like): number {\n        return 1;\n    }\n\n    /** @override */\n    groundDistance(worldPoint: Vector3Like): number {\n        return lengthOfVector3(worldPoint) - this.unitScale;\n    }\n\n    /** @override */\n    scalePointToSurface(worldPoint: Vector3Like): Vector3Like {\n        const scale = this.unitScale / (lengthOfVector3(worldPoint) || 1);\n        worldPoint.x *= scale;\n        worldPoint.y *= scale;\n        worldPoint.z *= scale;\n        return worldPoint;\n    }\n\n    /** @override */\n    surfaceNormal(worldPoint: Vector3Like, normal?: Vector3Like) {\n        if (normal === undefined) {\n            normal = { x: 0, y: 0, z: 0 };\n        }\n        const scale = 1 / (lengthOfVector3(worldPoint) || 1);\n        normal.x = worldPoint.x * scale;\n        normal.y = worldPoint.y * scale;\n        normal.z = worldPoint.z * scale;\n        return normal;\n    }\n\n    /** @override */\n    reprojectPoint(\n        sourceProjection: Projection,\n        worldPos: Vector3Like,\n        result?: Vector3Like\n    ): Vector3Like {\n        if (sourceProjection === mercatorProjection || sourceProjection === webMercatorProjection) {\n            const { x, y, z } = worldPos;\n            const r = this.unitScale;\n            const mx = x / r - Math.PI;\n            const my = y / r - Math.PI;\n            const w = Math.exp(my);\n            const d = w * w;\n            const gx = (2 * w) / (d + 1);\n            const gy = (d - 1) / (d + 1);\n            const scale = r + z;\n\n            if (result === undefined) {\n                // tslint:disable-next-line: no-object-literal-type-assertion\n                result = {} as Vector3Like;\n            }\n\n            result.x = Math.cos(mx) * gx * scale;\n            result.y = Math.sin(mx) * gx * scale;\n            result.z = gy * scale;\n\n            if (sourceProjection === webMercatorProjection) {\n                result.z = -result.z;\n            }\n\n            return result;\n        }\n\n        return super.reprojectPoint(sourceProjection, worldPos, result!);\n    }\n\n    /** @override */\n    localTangentSpace(geoPoint: GeoCoordinatesLike, result: TransformLike): TransformLike {\n        const latitude = THREE.MathUtils.degToRad(geoPoint.latitude);\n        const longitude = THREE.MathUtils.degToRad(geoPoint.longitude);\n\n        const cosLongitude = Math.cos(longitude);\n        const sinLongitude = Math.sin(longitude);\n        const cosLatitude = Math.cos(latitude);\n        const sinLatitude = Math.sin(latitude);\n\n        MathUtils.newVector3(\n            cosLongitude * cosLatitude,\n            sinLongitude * cosLatitude,\n            sinLatitude,\n            result.zAxis\n        );\n\n        MathUtils.newVector3(-sinLongitude, cosLongitude, 0, result.xAxis);\n\n        MathUtils.newVector3(\n            -cosLongitude * sinLatitude,\n            -sinLongitude * sinLatitude,\n            cosLatitude,\n            result.yAxis\n        );\n\n        this.projectPoint(geoPoint, result.position);\n\n        return result;\n    }\n}\n\nexport const sphereProjection: Projection = new SphereProjection(EarthConstants.EQUATORIAL_RADIUS);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { GeoBox } from \"../coordinates/GeoBox\";\nimport { TileKey } from \"./TileKey\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A class used to represent a quadtree.\n */\nexport class QuadTree {\n    /**\n     * Constructs a new `QuadTree` for the given [[TilingScheme]].\n     *\n     * Example:\n     * ```typescript\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * const geoBox = quadTree.getGeoBox(tileKey);\n     * console.log(geoBox.center);\n     * ```\n     *\n     * @param tilingScheme The TilingScheme used by this `QuadTree`.\n     */\n    constructor(readonly tilingScheme: TilingScheme) {}\n\n    /**\n     * Visits this `QuadTree` and invoke the given accept method with the current [[TileKey]] and\n     * its bounding box in geo coordinates.\n     *\n     * Example:\n     * ```typescript\n     * const geoPos = new GeoCoordinates(latitude, longitude);\n     * const quadTree = new QuadTree(hereTilingScheme);\n     * quadTree.visit((tileKey, geoBox) => {\n     *     if (geoBox.contains(geoPos)) {\n     *         console.log(\"tile\", tileKey, \"contains\", geoPos);\n     *         return tileKey.level < 14; // stop visiting the quadtree if the level is >= 14.\n     *     }\n     *     return false; // stop visiting the quadtree,\n     *                   // the tile's geoBox doesn't contain the given coordinates.\n     * });\n     * ```\n     *\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visit(accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        this.visitTileKey(TileKey.fromRowColumnLevel(0, 0, 0), accept);\n    }\n\n    /**\n     * Visits the subtree starting from the given tile.\n     *\n     * @param tileKey The root of the subtree that should be visited.\n     * @param accept A function that takes a [[TileKey]] and its bounding box in geo coordinates and\n     * returns `true` if the visit of the `QuadTree` should continue; otherwise `false`.\n     */\n    visitTileKey(tileKey: TileKey, accept: (tileKey: TileKey, geoBox: GeoBox) => boolean) {\n        const geoBox = this.tilingScheme.getGeoBox(tileKey);\n\n        if (!accept(tileKey, geoBox)) {\n            return;\n        }\n\n        for (const subTileKey of this.tilingScheme.getSubTileKeys(tileKey)) {\n            this.visitTileKey(subTileKey, accept);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { normalizedEquirectangularProjection } from \"../projection/EquirectangularProjection\";\nimport { halfQuadTreeSubdivisionScheme } from \"./HalfQuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * [[TilingScheme]] used by most of the data published by HERE.\n *\n * The `hereTilingScheme` features a half quadtree subdivision scheme and an equirectangular\n * projection.\n */\nexport const hereTilingScheme = new TilingScheme(\n    halfQuadTreeSubdivisionScheme,\n    normalizedEquirectangularProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { webMercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and web Mercator projection.\n */\nexport const webMercatorTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    webMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { mercatorProjection } from \"../projection/MercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * The [[TilingScheme]] used by the HERE web tiles.\n *\n * The `mercatorTilingScheme` features a quadtree subdivision scheme and a Mercator projection.\n */\nexport const mercatorTilingScheme = new TilingScheme(quadTreeSubdivisionScheme, mercatorProjection);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { transverseMercatorProjection } from \"../projection/TransverseMercatorProjection\";\nimport { quadTreeSubdivisionScheme } from \"./QuadTreeSubdivisionScheme\";\nimport { TilingScheme } from \"./TilingScheme\";\n\n/**\n * A [[TilingScheme]] featuring quadtree subdivision scheme and\n * transverse Mercator projection.\n */\nexport const polarTilingScheme = new TilingScheme(\n    quadTreeSubdivisionScheme,\n    transverseMercatorProjection\n);\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Interface representing a Vector3.\n */\nexport interface Vector3Like {\n    /**\n     * The X position.\n     */\n    x: number;\n\n    /**\n     * The Y position.\n     */\n    y: number;\n\n    /**\n     * The Z position.\n     */\n    z: number;\n}\n\nexport function isVector3Like(v: any): v is Vector3Like {\n    return v && typeof v.x === \"number\" && typeof v.y === \"number\" && typeof v.z === \"number\";\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector3Like } from \"./Vector3Like\";\n\n/**\n * The interface [[TransformLike]] is used to represent transforms with\n * only translation and rotation.\n */\nexport interface TransformLike {\n    /**\n     * The position of this transform.\n     */\n    readonly position: Vector3Like;\n\n    /**\n     * The x-axis of this transform.\n     */\n    readonly xAxis: Vector3Like;\n\n    /**\n     * The y-axis of this transform.\n     */\n    readonly yAxis: Vector3Like;\n\n    /**\n     * The z-axis of this transform.\n     */\n    readonly zAxis: Vector3Like;\n}\n\n/**\n * Returns true if the given object implements the interface [[TransformLike]].\n *\n * @param object The object.\n */\nexport function isTransformLike(object: {}): object is TransformLike {\n    const transform = object as Partial<TransformLike>;\n    return (\n        transform.position !== undefined &&\n        transform.xAxis !== undefined &&\n        transform.yAxis !== undefined &&\n        transform.zAxis !== undefined\n    );\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Frustum, Matrix4, Plane, Ray, Vector3 } from \"three\";\nimport { OrientedBox3Like } from \"./OrientedBox3Like\";\n\nfunction intersectsSlab(\n    rayDir: Vector3,\n    p: Vector3,\n    axis: Vector3,\n    extent: number,\n    t: { min: number; max: number }\n): boolean {\n    const epsilon = 1e-20;\n    const e = axis.dot(p);\n    const f = axis.dot(rayDir);\n    if (Math.abs(f) < epsilon) {\n        // ray parallel to near/far slab lines.\n        return Math.abs(e) <= extent;\n    }\n\n    // ray intersects near/far slab lines.\n    const finv = 1 / f;\n    const t1 = (e + extent) * finv;\n    const t2 = (e - extent) * finv;\n    if (t1 > t2) {\n        // t1 is far intersect, t2 is near.\n        if (t2 > t.min) {\n            t.min = t2;\n        }\n        if (t1 < t.max) {\n            t.max = t1;\n        }\n    } else {\n        // t1 is near intersect, t2 is far.\n        if (t1 > t.min) {\n            t.min = t1;\n        }\n        if (t2 < t.max) {\n            t.max = t2;\n        }\n    }\n    return t.min <= t.max && t.max >= 0;\n}\n\nconst tmpVec = new Vector3();\nconst tmpT = { min: -Infinity, max: Infinity };\n\nexport class OrientedBox3 implements OrientedBox3Like {\n    /**\n     * The position of the center of this `OrientedBox3`.\n     */\n    readonly position = new Vector3();\n\n    /**\n     * The x-axis of this `OrientedBox3`.\n     */\n    readonly xAxis = new Vector3(1, 0, 0);\n\n    /**\n     * The y-axis of this `OrientedBox3`.\n     */\n    readonly yAxis = new Vector3(0, 1, 0);\n\n    /**\n     * The z-axis of this `OrientedBox3`.\n     */\n    readonly zAxis = new Vector3(0, 0, 1);\n\n    /**\n     * The extents of this `OrientedBox3`.\n     */\n    readonly extents = new Vector3();\n\n    /**\n     * Creates a new `OrientedBox3`.\n     */\n    constructor();\n\n    /**\n     * Creates a new `OrientedBox3` with the given position, orientation and extents.\n     *\n     * @param position The position of the center of the `OrientedBox3`.\n     * @param rotationMatrix The rotation of the `OrientedBox3`.\n     * @param extents The extents of the `OrientedBox3`.\n     */\n    constructor(position: Vector3, rotationMatrix: Matrix4, extents: Vector3);\n\n    /**\n     * Creates a new `OrientedBox3`.\n     *\n     * @hideconstructor\n     */\n    constructor(position?: Vector3, rotationMatrix?: Matrix4, extents?: Vector3) {\n        if (position !== undefined) {\n            this.position.copy(position);\n        }\n\n        if (rotationMatrix !== undefined) {\n            rotationMatrix.extractBasis(this.xAxis, this.yAxis, this.zAxis);\n        }\n\n        if (extents !== undefined) {\n            this.extents.copy(extents);\n        }\n    }\n\n    /**\n     * Create a copy of this [[OrientedBoundingBox]].\n     */\n    clone(): OrientedBox3 {\n        const newBox = new OrientedBox3();\n        newBox.copy(this);\n        return newBox;\n    }\n\n    /**\n     * Copies the values of `other` to this [[OrientedBox3]].\n     * @param other The other [[OrientedBox3]] to copy.\n     */\n    copy(other: OrientedBox3) {\n        this.position.copy(other.position);\n        this.xAxis.copy(other.xAxis);\n        this.yAxis.copy(other.yAxis);\n        this.zAxis.copy(other.zAxis);\n        this.extents.copy(other.extents);\n    }\n\n    /**\n     * Gets the center position of this [[OrientedBox3]].\n     *\n     * @param center The returned center position.\n     */\n    getCenter(center = new Vector3()): Vector3 {\n        return center.copy(this.position);\n    }\n\n    /**\n     * Gets the size of this [[OrientedBox3]].\n     *\n     * @param size The returned size.\n     */\n    getSize(size = new Vector3()): Vector3 {\n        return size.copy(this.extents).multiplyScalar(2);\n    }\n\n    /**\n     * Gets the orientation matrix of this `OrientedBox3`.\n     * @param matrix The output orientation matrix.\n     */\n    getRotationMatrix(matrix: Matrix4 = new Matrix4()): Matrix4 {\n        return matrix.makeBasis(this.xAxis, this.yAxis, this.zAxis);\n    }\n\n    /**\n     * Checks intersection with the given `THREE.Frustum` or array of `THREE.Plane`s.\n     *\n     * @param frustumOrPlanes Frustum or array of planes.\n     */\n    intersects(frustumOrPlanes: Plane[] | Frustum): boolean {\n        const planes: Plane[] = Array.isArray(frustumOrPlanes)\n            ? frustumOrPlanes\n            : frustumOrPlanes.planes;\n\n        for (const plane of planes) {\n            const r =\n                Math.abs(plane.normal.dot(this.xAxis) * this.extents.x) +\n                Math.abs(plane.normal.dot(this.yAxis) * this.extents.y) +\n                Math.abs(plane.normal.dot(this.zAxis) * this.extents.z);\n\n            const d = plane.distanceToPoint(this.position);\n\n            if (d + r < 0) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks intersection with the given ray.\n     *\n     * @param ray The ray to test.\n     * @returns distance from ray origin to intersection point if it exist, undefined otherwise.\n     */\n    intersectsRay(ray: Ray): number | undefined {\n        // Slabs intersection algorithm.\n        tmpT.min = -Infinity;\n        tmpT.max = Infinity;\n        tmpVec.copy(this.position).sub(ray.origin);\n        if (!intersectsSlab(ray.direction, tmpVec, this.xAxis, this.extents.x, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.yAxis, this.extents.y, tmpT)) {\n            return undefined;\n        }\n        if (!intersectsSlab(ray.direction, tmpVec, this.zAxis, this.extents.z, tmpT)) {\n            return undefined;\n        }\n\n        return tmpT.min > 0 ? tmpT.min : tmpT.max;\n    }\n\n    /**\n     * Returns true if this [[OrientedBox3]] contains the given point.\n     *\n     * @param point A valid point.\n     */\n    contains(point: Vector3): boolean {\n        const dx = point.x - this.position.x;\n        const dy = point.y - this.position.y;\n        const dz = point.z - this.position.z;\n        const x = Math.abs(dx * this.xAxis.x + dy * this.xAxis.y + dz * this.xAxis.z);\n        const y = Math.abs(dx * this.yAxis.x + dy * this.yAxis.y + dz * this.yAxis.z);\n        const z = Math.abs(dx * this.zAxis.x + dy * this.zAxis.y + dz * this.zAxis.z);\n        if (x > this.extents.x || y > this.extents.y || z > this.extents.z) {\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * Returns the distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPoint(point: Vector3): number {\n        return Math.sqrt(this.distanceToPointSquared(point));\n    }\n\n    /**\n     * Returns the squared distance from this [[OrientedBox3]] and the given `point`.\n     *\n     * @param point A point.\n     */\n    distanceToPointSquared(point: Vector3): number {\n        const d = new Vector3();\n        d.subVectors(point, this.position);\n\n        const lengths = [d.dot(this.xAxis), d.dot(this.yAxis), d.dot(this.zAxis)];\n\n        let result = 0;\n\n        for (let i = 0; i < 3; ++i) {\n            const length = lengths[i];\n            const extent = this.extents.getComponent(i);\n            if (length < -extent) {\n                const dd = extent + length;\n                result += dd * dd;\n            } else if (length > extent) {\n                const dd = length - extent;\n                result += dd * dd;\n            }\n        }\n\n        return result;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\n\nimport { Env, MapEnv, Value } from \"./Expr\";\nimport { makeDecodedTechnique } from \"./StyleSetEvaluator\";\nimport { AttrEvaluationContext, evaluateTechniqueAttr } from \"./TechniqueAttr\";\nimport {\n    IndexedTechnique,\n    isLineMarkerTechnique,\n    isPoiTechnique,\n    isTextTechnique,\n    Technique\n} from \"./Techniques\";\n\n/**\n * Defines a map tile metadata.\n */\nexport interface TileInfo {\n    readonly tileKey: TileKey;\n    readonly setupTime: number;\n    readonly transferList?: ArrayBuffer[];\n    readonly numBytes: number;\n}\n\n/**\n * Represents a feature group type for tile info.\n */\nexport enum FeatureGroupType {\n    Point,\n    Line,\n    Polygon\n}\n\n/**\n * Minimum estimated size of a JS object.\n */\nconst MINIMUM_OBJECT_SIZE_ESTIMATION = 100;\n\n/**\n * Structure of arrays containing data for all features of this group. No methods, since the object\n * is being passed as part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n */\nexport class FeatureGroup {\n    /** featureIds */\n    featureIds: Array<number | undefined> = new Array<number | undefined>();\n\n    /** Indices into [[ExtendedTileInfo]].techniqueCatalog */\n    techniqueIndex: number[];\n\n    /** Indices into [[ExtendedTileInfo]].textCatalog. */\n    textIndex: number[];\n\n    /** Indices into positions. */\n    positionIndex: number[];\n\n    /** XY coordinates of this group. */\n    positions: number[];\n\n    /** number of features */\n    numFeatures: number = 0;\n\n    /** number of positions of elements (2 per point) */\n    numPositions: number = 0;\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].layerCatalog. Only available if\n     * [[OmvFeatureGroup]] has been constructed with `storeExtendedTags` set to `true`.\n     */\n    layerIndex?: number[];\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].classCatalog. Only available if\n     * [[OmvFeatureGroup]] has been constructed with `storeExtendedTags` set to `true`.\n     */\n    classIndex?: number[];\n\n    /**\n     * Optional indices into [[ExtendedTileInfo]].typeCatalog. Only available if [[OmvFeatureGroup]]\n     * has been constructed with `storeExtendedTags` set to `true`.\n     */\n    typeIndex?: number[];\n\n    /**\n     * Construct featureGroup.\n     *\n     * @param storeExtendedTags Pass `true` to create fields for more OMV tags (`layer`, `class`\n     * and `type`).\n     */\n    constructor(storeExtendedTags: boolean, startSize: number = 5000) {\n        this.featureIds = new Array<number>(startSize);\n        this.featureIds.length = startSize;\n        this.techniqueIndex = new Array<number>(startSize);\n        this.techniqueIndex.length = startSize;\n        this.textIndex = new Array<number>(startSize);\n        this.textIndex.length = startSize;\n        this.positionIndex = new Array<number>(startSize);\n        this.positionIndex.length = startSize;\n        this.positions = new Array<number>(10 * startSize);\n        this.positions.length = 10 * startSize;\n\n        if (storeExtendedTags) {\n            this.layerIndex = new Array<number>(startSize);\n            this.layerIndex.length = startSize;\n            this.classIndex = new Array<number>(startSize);\n            this.classIndex.length = startSize;\n            this.typeIndex = new Array<number>(startSize);\n            this.typeIndex.length = startSize;\n        }\n    }\n\n    /**\n     * Compute size in bytes.\n     */\n    getNumBytes(): number {\n        return (\n            (this.featureIds.length +\n                this.techniqueIndex.length +\n                this.textIndex.length +\n                this.positionIndex.length +\n                this.positions.length +\n                (this.layerIndex !== undefined ? this.layerIndex.length : 0) +\n                (this.classIndex !== undefined ? this.classIndex.length : 0) +\n                (this.typeIndex !== undefined ? this.typeIndex.length : 0)) *\n            8\n        );\n    }\n}\n\n/**\n * Structure of arrays containing data for roads. No methods, since the object is being passed as\n * part of [[ExtendedTileInfo]] across \"process boundaries\" to the web worker.\n */\nexport class LineFeatureGroup extends FeatureGroup {\n    /**\n     * An array of road segment ids. Is the same length as `featureIds` but certain elements can be\n     * `undefined` (if this line feature is not a road).\n     */\n    segmentIds?: number[];\n\n    /**\n     * An array of road start offsets. Certain elements may be `undefined` (if this line feature is\n     * not a road).\n     */\n    segmentStartOffsets?: number[];\n\n    /**\n     * An array of road end offsets. Certain elements may be `undefined` (if this line feature is\n     * not a road).\n     */\n    segmentEndOffsets?: number[];\n\n    /**\n     * An array of object defined by the user. Certain elements may be `undefined` (if this line\n     * feature is not a road, or if the object for that feature is undefined).\n     */\n    userData: Array<{} | undefined> = [];\n\n    /** @override */\n    getNumBytes(): number {\n        return (\n            super.getNumBytes() +\n            ((this.segmentIds !== undefined ? this.segmentIds.length : 0) +\n                (this.segmentStartOffsets !== undefined ? this.segmentStartOffsets.length : 0) +\n                (this.segmentEndOffsets !== undefined ? this.segmentEndOffsets.length : 0)) *\n                8\n        );\n    }\n}\n\n/**\n * Structure of arrays containing data for polygons. No methods, since the object is being passed as\n * part of ExtendedTileInfo across \"process boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nexport class PolygonFeatureGroup extends FeatureGroup {\n    /**\n     * Indices into innerRingStartIndex. One entry for every polygon feature.\n     *\n     * Number of rings is computed by either:\n     *\n     * a) Computing from the next innerRingStart, or\n     *\n     * b) Computing from the size of the array.\n     */\n    outerRingStartIndex: number[];\n\n    /**\n     * One entry for every polygon feature. Contains `true` if a polygon ring is an _outside_ ring,\n     * `false` otherwise.\n     */\n    innerRingIsOuterContour: number[];\n\n    /**\n     * Indices into [[OmvFeatureGroup]]`.positions`. One index for every ring.\n     *\n     * Number of inner rings is computed by either:\n     *\n     * a) Computing from the next innerRingStart, or\n     *\n     * b) Computing from the size of the array.\n     */\n    innerRingStartIndex: number[];\n\n    /**\n     * Number of rings stored in all polygons in tis group. Used to keep size of the\n     * arrays.\n     */\n    groupNumRings: number = 0;\n\n    constructor(storeExtendedTags: boolean, startSize: number = 5000) {\n        super(storeExtendedTags, startSize);\n\n        this.outerRingStartIndex = new Array<number>(startSize);\n        this.outerRingStartIndex.length = startSize;\n        this.innerRingIsOuterContour = new Array<number>(startSize);\n        this.innerRingIsOuterContour.length = startSize;\n        this.innerRingStartIndex = new Array<number>(startSize);\n        this.innerRingStartIndex.length = startSize;\n    }\n\n    /** @override */\n    getNumBytes(): number {\n        return (\n            super.getNumBytes() +\n            ((this.outerRingStartIndex !== undefined ? this.outerRingStartIndex.length : 0) +\n                (this.innerRingIsOuterContour !== undefined\n                    ? this.innerRingIsOuterContour.length\n                    : 0) +\n                (this.innerRingStartIndex !== undefined ? this.innerRingStartIndex.length : 0)) *\n                8\n        );\n    }\n}\n\n/**\n * Class to hold infos from [[OmvTile]]s. Optimized for fast serialization when being passed from\n * webworker to main thread. No methods, since the object is being passed across \"process\n * boundaries\" to the web worker.\n *\n * Supporting methods in namespace [[ExtendedTileInfo]].\n *\n * Due to the complexity of the access, there are supporting classes to store and access data in\n * the feature groups. See [[ExtendedTileInfoWriter]] and [[ExtendedTileInfoPolygonAccessor]].\n */\nexport class ExtendedTileInfo implements TileInfo {\n    /**\n     * Catalog of strings. Addressed by every features stringIndex.\n     */\n    readonly textCatalog: string[] = new Array<string>();\n    /**\n     * Catalog of techniques. Addressed by every features featureIndex.\n     */\n    readonly techniqueCatalog: IndexedTechnique[] = new Array<IndexedTechnique>();\n\n    /**\n     * Feature group containing all infos about `POINT` features.\n     */\n    readonly pointGroup: FeatureGroup;\n\n    /**\n     * Feature group containing all infos about `LINESTRING` features.\n     */\n    readonly lineGroup: LineFeatureGroup;\n\n    /**\n     * Feature group containing all infos about `POLYGON` features.\n     */\n    readonly polygonGroup: PolygonFeatureGroup;\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly layerCatalog?: string[];\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly classCatalog?: string[];\n\n    /**\n     * Optional catalogs for extended feature infos. Only available if the [[ExtendedTileInfo]] has\n     * been constructed with `storeExtendedTags` == `true`.\n     */\n    readonly typeCatalog?: string[];\n\n    /**\n     * Used for performance diagnostics.\n     */\n    setupTime: number = 0;\n\n    /**\n     * Size in bytes.\n     */\n    numBytes: number = 0;\n\n    constructor(readonly tileKey: TileKey, storeExtendedTags: boolean) {\n        this.pointGroup = new FeatureGroup(storeExtendedTags);\n        this.lineGroup = new LineFeatureGroup(storeExtendedTags);\n        this.polygonGroup = new PolygonFeatureGroup(storeExtendedTags);\n\n        if (storeExtendedTags) {\n            this.layerCatalog = new Array<string>();\n            this.classCatalog = new Array<string>();\n            this.typeCatalog = new Array<string>();\n        }\n    }\n\n    /**\n     * Compute the memory footprint caused by objects owned by the `ExtendedTileInfo`.\n     */\n    getNumBytes(): number {\n        let numBytes = MINIMUM_OBJECT_SIZE_ESTIMATION;\n        for (const str of this.textCatalog) {\n            numBytes += 2 * str.length;\n        }\n\n        numBytes += this.techniqueCatalog.length * MINIMUM_OBJECT_SIZE_ESTIMATION;\n\n        numBytes += this.pointGroup.getNumBytes();\n        numBytes += this.lineGroup.getNumBytes();\n        numBytes += this.polygonGroup.getNumBytes();\n\n        if (this.layerCatalog !== undefined) {\n            for (const str of this.layerCatalog) {\n                numBytes += 2 * str.length;\n            }\n            for (const str of this.classCatalog!) {\n                numBytes += 2 * str.length;\n            }\n            for (const str of this.typeCatalog!) {\n                numBytes += 2 * str.length;\n            }\n        }\n\n        return numBytes;\n    }\n}\n\nexport namespace ExtendedTileInfo {\n    function finishFeatureGroup(featureGroup: FeatureGroup) {\n        featureGroup.featureIds.length = featureGroup.numFeatures;\n        featureGroup.techniqueIndex.length = featureGroup.numFeatures;\n        featureGroup.textIndex.length = featureGroup.numFeatures;\n        featureGroup.positionIndex.length = featureGroup.numFeatures;\n        featureGroup.positions.length = featureGroup.numPositions;\n\n        if (featureGroup.layerIndex !== undefined) {\n            featureGroup.layerIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.classIndex !== undefined) {\n            featureGroup.classIndex.length = featureGroup.numFeatures;\n        }\n        if (featureGroup.typeIndex !== undefined) {\n            featureGroup.typeIndex.length = featureGroup.numFeatures;\n        }\n    }\n\n    function finishPolygonFeatureGroup(polygonGroup: PolygonFeatureGroup) {\n        finishFeatureGroup(polygonGroup);\n        polygonGroup.outerRingStartIndex.length = polygonGroup.numFeatures;\n        polygonGroup.innerRingIsOuterContour.length = polygonGroup.groupNumRings;\n        polygonGroup.innerRingStartIndex.length = polygonGroup.groupNumRings;\n    }\n\n    function finishLineFeatureGroup(lineGroup: LineFeatureGroup) {\n        finishFeatureGroup(lineGroup);\n        if (lineGroup.segmentIds !== undefined) {\n            lineGroup.segmentIds.length = lineGroup.numFeatures;\n            lineGroup.segmentStartOffsets!.length = lineGroup.numFeatures;\n            lineGroup.segmentEndOffsets!.length = lineGroup.numFeatures;\n        }\n    }\n\n    /**\n     * Finalize the tile's features groups.\n     */\n    export function finish(tileInfo: ExtendedTileInfo) {\n        finishFeatureGroup(tileInfo.pointGroup);\n        finishLineFeatureGroup(tileInfo.lineGroup);\n        finishPolygonFeatureGroup(tileInfo.polygonGroup);\n        tileInfo.numBytes = tileInfo.getNumBytes();\n    }\n\n    /**\n     * Returns the number of features in this feature group.\n     */\n    export function featureGroupSize(featureGroup: FeatureGroup): number {\n        return featureGroup.numFeatures;\n    }\n\n    /**\n     * Check if the feature group is finalized.\n     */\n    export function featureGroupFinished(featureGroup: FeatureGroup): boolean {\n        return featureGroup.numPositions === featureGroup.positions.length;\n    }\n\n    /**\n     * Check if the tileInfo is finalized.\n     */\n    export function tileInfoFinished(tileInfo: ExtendedTileInfo): boolean {\n        return (\n            featureGroupFinished(tileInfo.pointGroup) &&\n            featureGroupFinished(tileInfo.lineGroup) &&\n            featureGroupFinished(tileInfo.polygonGroup)\n        );\n    }\n\n    /**\n     * Determine the name of (OMV) feature. It implements the special handling required\n     * to determine the text content of a feature from its tags, which are passed in as the `env`.\n     *\n     * @param env Environment containing the tags from the (OMV) feature.\n     * @param useAbbreviation `true` to use the abbreviation if available.\n     * @param useIsoCode `true` to use the tag \"iso_code\".\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    export function getFeatureName(\n        env: Env,\n        useAbbreviation?: boolean,\n        useIsoCode?: boolean,\n        languages?: string[]\n    ): string | undefined {\n        let name;\n        if (useAbbreviation) {\n            const abbreviation = env.lookup(`name:short`);\n            if (typeof abbreviation === \"string\" && abbreviation.length > 0) {\n                return abbreviation;\n            }\n        }\n        if (useIsoCode) {\n            const isoCode = env.lookup(`iso_code`);\n            if (typeof isoCode === \"string\" && isoCode.length > 0) {\n                return isoCode;\n            }\n        }\n        if (languages !== undefined) {\n            for (const lang of languages) {\n                name = env.lookup(`name:${lang}`) || env.lookup(`name_${lang}`);\n                if (typeof name === \"string\" && name.length > 0) {\n                    return name;\n                }\n            }\n        }\n        name = env.lookup(\"name\");\n        if (typeof name === \"string\") {\n            return name;\n        }\n        return undefined;\n    }\n\n    /**\n     * Determine the text string of the map feature. It implements the special handling required\n     * to determine the text content of a feature from its tags, which are passed in as the `env`.\n     *\n     * @param feature Feature, including properties from the (OMV) feature.\n     * @param technique technique defining how text should be created from feature\n     * @param languages List of languages to use, for example: Specify \"en\" to use the tag \"name_en\"\n     *                  as the text of the string. Order reflects priority.\n     */\n    export function getFeatureText(\n        context: Env | AttrEvaluationContext,\n        technique: Technique,\n        languages?: string[]\n    ): string | undefined {\n        let useAbbreviation: boolean | undefined;\n        let useIsoCode: boolean | undefined;\n        const env = context instanceof Env ? context : context.env;\n        if (\n            isTextTechnique(technique) ||\n            isPoiTechnique(technique) ||\n            isLineMarkerTechnique(technique)\n        ) {\n            if (technique.text !== undefined) {\n                return evaluateTechniqueAttr(context, technique.text);\n            }\n            // tslint:disable-next-line: deprecation\n            if (technique.label !== undefined) {\n                // tslint:disable-next-line: deprecation\n                const attributeName = evaluateTechniqueAttr(context, technique.label);\n                if (typeof attributeName !== \"string\") {\n                    return undefined;\n                }\n                const name = env.lookup(attributeName);\n                return typeof name === \"string\" ? name : undefined;\n            }\n            // tslint:disable-next-line: deprecation\n            useAbbreviation = technique.useAbbreviation;\n            // tslint:disable-next-line: deprecation\n            useIsoCode = technique.useIsoCode;\n        }\n\n        return getFeatureName(env, useAbbreviation, useIsoCode, languages);\n    }\n}\n\n/**\n * Support class for [[ExtendedTileInfo]]. Assist in filling it with data.\n */\nexport class ExtendedTileInfoWriter {\n    /** Map to identify which techniques already have been added to the [[ExtendedTileInfo]]. */\n    private readonly techniqueIndexMap = new Map<number, number>();\n    /** Map to identify which strings already have been added to the [[ExtendedTileInfo]]. */\n    private readonly stringMap = new Map<string, number>();\n    /** Map to identify which `layer` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly layerMap = new Map<string, number>();\n    /** Map to identify which `class` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly classMap = new Map<string, number>();\n    /** Map to identify which `type` names already have been added to the [[ExtendedTileInfo]]. */\n    private readonly typeMap = new Map<string, number>();\n\n    /**\n     * Create an [[ExtendedTileInfoWriter]] for an [[ExtendedTileInfo]]. Assist in filling the\n     * [[ExtendedTileInfo]] with data.\n     *\n     * @param tileInfo [[ExtendedTileInfo]] to write data to.\n     * @param storeExtendedTags Pass `true` if feature data like `layer`, `class`or `type` should\n     *          be stored for every feature.\n     */\n    constructor(readonly tileInfo: ExtendedTileInfo, readonly storeExtendedTags: boolean) {}\n\n    /**\n     * Adds a [[Technique]] to the catalog of techniques. Individual techniques have a `_index` file\n     * which has been created in the [[StyleSetEvaluator]]. This index is required to identify a\n     * technique. The `Map` is used to map techniques to already added techniques, or store the\n     * technique as new, and add it to the map.\n     *\n     * @param technique The [[Technique]] to add.\n     */\n    addTechnique(technique: IndexedTechnique): number {\n        let infoTileTechniqueIndex = this.techniqueIndexMap.get(technique._index);\n        if (infoTileTechniqueIndex !== undefined) {\n            return infoTileTechniqueIndex;\n        }\n\n        const decodedTechnique = makeDecodedTechnique(technique);\n\n        infoTileTechniqueIndex = this.tileInfo.techniqueCatalog.length;\n        this.techniqueIndexMap.set(decodedTechnique._index, infoTileTechniqueIndex);\n        this.tileInfo.techniqueCatalog.push(decodedTechnique);\n\n        return infoTileTechniqueIndex;\n    }\n\n    /**\n     * Add a feature.\n     *\n     * @param featureGroup The feature group to add to.\n     * @param technique The technique to add.\n     * @param env The `env` which is a mix of original OMV feature tags and fields added by the\n     *      [[StyleSetEvaluator]]\n     * @param featureId The featureId, a number unique for many features (but not all).\n     * @param infoTileTechniqueIndex The previously computed index of the technique. Must have been\n     *      computed by `addTechnique(technique)`.\n     * @param isPolygonGroup `true`for polygons.\n     */\n    addFeature(\n        featureGroup: FeatureGroup,\n        env: MapEnv,\n        featureId: number | undefined,\n        featureText: string | undefined,\n        infoTileTechniqueIndex: number,\n        featureGroupType: FeatureGroupType\n    ) {\n        // compute name/label of feature\n        let stringIndex = -1;\n        if (featureText !== undefined && featureText.length > 0) {\n            stringIndex = this.addText(featureText);\n        }\n\n        // add indices into the arrays.\n        featureGroup.featureIds[featureGroup.numFeatures] = featureId;\n        featureGroup.techniqueIndex[featureGroup.numFeatures] = infoTileTechniqueIndex;\n        featureGroup.textIndex[featureGroup.numFeatures] = stringIndex;\n        featureGroup.positionIndex[featureGroup.numFeatures] = featureGroup.numPositions;\n\n        switch (featureGroupType) {\n            case FeatureGroupType.Polygon:\n                // polygons need the extra fields for polygon rings\n                const polygonGroup = featureGroup as PolygonFeatureGroup;\n                assert(polygonGroup.outerRingStartIndex !== undefined);\n                assert(polygonGroup.innerRingStartIndex !== undefined);\n                assert(polygonGroup.innerRingIsOuterContour !== undefined);\n                polygonGroup.outerRingStartIndex[featureGroup.numFeatures] =\n                    polygonGroup.groupNumRings;\n                break;\n            case FeatureGroupType.Line:\n                (featureGroup as LineFeatureGroup).userData[featureGroup.numFeatures] = env.entries;\n                break;\n        }\n\n        // store the extra feature fields\n        if (this.storeExtendedTags) {\n            featureGroup.layerIndex![featureGroup.numFeatures] = this.addLayer(\n                env.lookup(\"$layer\")\n            );\n            featureGroup.classIndex![featureGroup.numFeatures] = this.addClass(env.lookup(\"class\"));\n            featureGroup.typeIndex![featureGroup.numFeatures] = this.addType(env.lookup(\"type\"));\n        }\n\n        featureGroup.numFeatures++;\n    }\n\n    /**\n     * Add the X/Y coordinate of the point. Only for point feature groups.\n     *\n     * @param featureGroup The feature group to add it to.\n     * @param x X Position of point.\n     * @param y Y Position of point.\n     */\n    addFeaturePoint(featureGroup: FeatureGroup, x: number, y: number) {\n        featureGroup.positions[featureGroup.numPositions++] = x;\n        featureGroup.positions[featureGroup.numPositions++] = y;\n    }\n\n    /**\n     * Add the line points as X/Y coordinates to the line feature.\n     *\n     * If a line feature has more than one line (rare for HERE data), it should define multiple\n     * line features for it.\n     *\n     * @param featureGroup The feature group to add to. Must be line feature group.\n     * @param points The X/Y coordinates of the points.\n     */\n    addFeaturePoints(featureGroup: FeatureGroup, points: number[]) {\n        const n = featureGroup.numPositions;\n        const l = points.length;\n        const p = featureGroup.positions;\n        for (let i = 0; i < l; i++) {\n            p[n + i] = points[i];\n        }\n        featureGroup.numPositions += points.length;\n    }\n\n    /**\n     * Add the information about road segments to the line feature. Performs lazy initialization of\n     * `segmentIds`, `segmentStartOffsets`, and `segmentEndOffsets` members of a\n     * [[LineFeatureGroup]] instance.\n     *\n     * @param featureGroup The line feature group to add information to.\n     * @param segmentId Segment id of a feature.\n     * @param startOffset Start offset of a feature.\n     * @param endOffset End offset of a feature.\n     */\n    addRoadSegments(\n        featureGroup: LineFeatureGroup,\n        segmentId: number,\n        startOffset: number,\n        endOffset: number\n    ) {\n        if (featureGroup.segmentIds === undefined) {\n            featureGroup.segmentIds = new Array<number>();\n            featureGroup.segmentStartOffsets = new Array<number>();\n            featureGroup.segmentEndOffsets = new Array<number>();\n        }\n\n        featureGroup.segmentIds[featureGroup.numFeatures - 1] = segmentId;\n        featureGroup.segmentStartOffsets![featureGroup.numFeatures - 1] = startOffset;\n        featureGroup.segmentEndOffsets![featureGroup.numFeatures - 1] = endOffset;\n    }\n\n    /**\n     * Add a single ring to the polygon. Can be called multiple times to add multiple rings to the\n     * polygon.\n     *\n     * @param featureGroup Polygon feature group to add polygon ring to.\n     * @param contour The X/Y coordinates of the ring.\n     * @param isOuterRing Pass `true`if it is a outer ring, otherwise `false`.\n     */\n    addRingPoints(featureGroup: PolygonFeatureGroup, contour: number[], isOuterRing: boolean) {\n        featureGroup.innerRingStartIndex[featureGroup.groupNumRings] = featureGroup.numPositions;\n        featureGroup.innerRingIsOuterContour[featureGroup.groupNumRings] = isOuterRing ? 1 : 0;\n        featureGroup.groupNumRings++;\n\n        const n = featureGroup.numPositions;\n        const l = contour.length;\n        const p = featureGroup.positions;\n        for (let i = 0; i < l; i++) {\n            p[n + i] = contour[i];\n        }\n        featureGroup.numPositions += contour.length;\n    }\n\n    /**\n     * Finalize the tile info's feature group.\n     */\n    finish(): any {\n        ExtendedTileInfo.finish(this.tileInfo);\n    }\n\n    private addText(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.textCatalog, this.stringMap);\n    }\n\n    private addLayer(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.layerCatalog!, this.layerMap);\n    }\n\n    private addClass(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.classCatalog!, this.classMap);\n    }\n\n    private addType(name: Value | undefined): number {\n        return this.addStringValue(name, this.tileInfo.typeCatalog!, this.typeMap);\n    }\n\n    // Add a string to the strings catalog. Returns index into the catalog.\n    private addStringValue(\n        str: Value | undefined,\n        catalog: string[],\n        map: Map<string, number>\n    ): number {\n        if (str === undefined || str === null) {\n            return -1;\n        }\n        const name = str.toString();\n        let i = map.get(name);\n        if (i !== undefined) {\n            return i;\n        }\n        i = catalog.length;\n        catalog.push(name);\n        map.set(name, i);\n        return i;\n    }\n}\n\n/**\n * Support for [[ExtendedTileInfo]]. Defines the accessor that allows to access the polygon data.\n */\nexport interface ExtendedTileInfoPolygonAccessor {\n    /**\n     * Number of rings in the polygon.\n     */\n    numRings: number;\n\n    /**\n     * Return if ring is an outer ring.\n     *\n     * @param ringIndex Specify ring index.\n     * @return `true` if ring is an outer ring, `false` otherwise.\n     */\n    isOuterRing(ringIndex: number): boolean;\n\n    /**\n     * Return information about the vertices that make up the ring.\n     *\n     * @param ringIndex Specify ring index.\n     * @returns Info about the array, start and number of points in the ring.\n     */\n    getPoints(\n        ringIndex: number\n    ): {\n        points: ArrayLike<number>;\n        pointsStart: number;\n        numPointValues: number;\n    };\n}\n\n/**\n * Implementation of [[ExtendedTileInfoPolygonAccessor]].\n */\nclass ExtendedTileInfoPolygonAccessorImpl implements ExtendedTileInfoPolygonAccessor {\n    /**\n     * Accessed data for polygons feature group.\n     */\n    polygons?: PolygonFeatureGroup;\n    /**\n     * Feature's index in the group.\n     */\n    featureIndex: number = 0;\n    /**\n     * Indicates where the ring starts.\n     */\n    ringStart: number = 0;\n    /**\n     * Number of rings.\n     */\n    numRings: number = 0;\n\n    /**\n     * Setup the accessor for extended [[TileInfo]].\n     *\n     * @param polygons polygons feature group.\n     * @param featureIndex feature's index in the group.\n     * @param ringStart where the ring starts.\n     * @param numRings number of rings.\n     */\n    setup(\n        polygons: PolygonFeatureGroup,\n        featureIndex: number,\n        ringStart: number,\n        numRings: number\n    ) {\n        this.polygons = polygons;\n        this.featureIndex = featureIndex;\n        this.ringStart = ringStart;\n        this.numRings = numRings;\n    }\n\n    /**\n     * Shut down the accessor and free all references.\n     */\n    reset() {\n        this.polygons = undefined;\n        this.featureIndex = 0;\n        this.ringStart = 0;\n        this.numRings = 0;\n    }\n\n    isOuterRing(ringIndex: number): boolean {\n        assert(ringIndex >= 0);\n        assert(ringIndex < this.numRings);\n        assert(this.polygons !== undefined);\n        if (ringIndex < 0 || ringIndex >= this.numRings || this.polygons === undefined) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n        return this.polygons.innerRingIsOuterContour[this.ringStart + ringIndex] !== 0;\n    }\n\n    getPoints(\n        ringIndex: number\n    ): {\n        points: ArrayLike<number>;\n        pointsStart: number;\n        numPointValues: number;\n    } {\n        assert(ringIndex >= 0);\n        assert(ringIndex < this.numRings);\n        assert(this.polygons !== undefined);\n        if (ringIndex < 0 || ringIndex >= this.numRings || this.polygons === undefined) {\n            throw new Error(\"ExtendedTileInfoPolygonAccessor: Invalid ring index\");\n        }\n\n        // compute the start/size of the points in this ring. All `points` are actually just the\n        // indices of a single X/Y coordinate.\n        const pointsStart = this.polygons.innerRingStartIndex[this.ringStart + ringIndex];\n\n        let numPointValues: number;\n        if (ringIndex < this.numRings - 1) {\n            numPointValues =\n                this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n        } else {\n            if (this.ringStart + ringIndex < this.polygons.innerRingStartIndex.length - 1) {\n                numPointValues =\n                    this.polygons.innerRingStartIndex[this.ringStart + ringIndex + 1] - pointsStart;\n            } else {\n                numPointValues = this.polygons.positions.length - pointsStart;\n            }\n        }\n\n        return {\n            points: this.polygons.positions,\n            pointsStart,\n            numPointValues\n        };\n    }\n}\n\n/**\n * Interface that a client of [[ExtendedTileInfoAccessor]] has to implement.\n */\nexport interface ExtendedTileInfoHandler {\n    acceptPoint?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        x: number,\n        y: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number\n    ): void;\n\n    acceptLine?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number,\n        points: ArrayLike<number>,\n        pointsStart: number,\n        numElements: number,\n        segmentId?: number,\n        startOffset?: number,\n        endOffset?: number\n    ): void;\n\n    acceptPolygon?(\n        featureId: number | undefined,\n        techniqueIndex: number,\n        label: number,\n        layerName: number,\n        className: number,\n        typeName: number,\n        polygonAccessor: ExtendedTileInfoPolygonAccessor\n    ): void;\n}\n\n/**\n * Supporting class for [[ExtendedTileInfo]]. Takes an [[ExtendedTileInfoHandler]] and calls an\n * `accept` for every feature of the [[ExtendedTileInfo]], or just all features of a specified\n * `featureId`.\n */\nexport class ExtendedTileInfoVisitor {\n    // static instance to work without allocations.\n    private static polygonAccessor = new ExtendedTileInfoPolygonAccessorImpl();\n\n    constructor(readonly tileInfo: ExtendedTileInfo) {}\n\n    /**\n     * Visit all feature in the [[ExtendedTileInfo]]\n     *\n     * @param handler Let the `handler` visit all features.\n     */\n    visitAll(handler: ExtendedTileInfoHandler) {\n        this.visitAllPointFeatures(handler);\n        this.visitAllLineFeatures(handler);\n        this.visitAllPolygonFeatures(handler);\n    }\n\n    /**\n     * Visit all features of a specified featureId.\n     *\n     * @param featureId The featureId to visit.\n     * @param handler The `handler` to use.\n     */\n    visitFeature(featureId: number, handler: ExtendedTileInfoHandler): number {\n        let numFeaturesFound = 0;\n        const numPointFeatures = this.tileInfo.pointGroup.numFeatures;\n        const pointFeatures = this.tileInfo.pointGroup.featureIds;\n        for (let i = 0; i < numPointFeatures; i++) {\n            if (pointFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPointFeature(i, handler);\n            }\n        }\n        const numLineFeatures = this.tileInfo.lineGroup.numFeatures;\n        const lineFeatures = this.tileInfo.lineGroup.featureIds;\n        for (let i = 0; i < numLineFeatures; i++) {\n            if (lineFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitLineFeature(i, handler);\n            }\n        }\n        const numPolygonFeatures = this.tileInfo.polygonGroup.numFeatures;\n        const polygonsFeatures = this.tileInfo.polygonGroup.featureIds;\n        for (let i = 0; i < numPolygonFeatures; i++) {\n            if (polygonsFeatures[i] === featureId) {\n                numFeaturesFound++;\n                this.visitPolygonFeature(i, handler);\n            }\n        }\n        return numFeaturesFound;\n    }\n\n    /**\n     * Visit all `POINT` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    visitAllPointFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.pointGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitPointFeature(i, handler);\n        }\n    }\n\n    /**\n     * Visit all `LINESTRING` features.\n     *\n     * @param handler The handler to use.\n     */\n    visitAllLineFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.lineGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitLineFeature(i, handler);\n        }\n    }\n\n    /**\n     * Visit all `POLYGON` features.\n     *\n     * @param handler The `handler` to use.\n     */\n    visitAllPolygonFeatures(handler: ExtendedTileInfoHandler): void {\n        const numFeatures = this.tileInfo.polygonGroup.numFeatures;\n\n        for (let i = 0; i < numFeatures; i++) {\n            this.visitPolygonFeature(i, handler);\n        }\n    }\n\n    private getTag(featureIndex: number, index: number[]): number {\n        return index !== undefined && index[featureIndex] >= 0 ? index[featureIndex] : -1;\n    }\n\n    /**\n     * Call the `handler` on a point feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitPointFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        const tileInfo = this.tileInfo;\n        const points = tileInfo.pointGroup;\n\n        const start = points.positionIndex[featureIndex];\n        const x = points.positions[start];\n        const y = points.positions[start + 1];\n\n        if (!!handler.acceptPoint) {\n            handler.acceptPoint(\n                points.featureIds[featureIndex],\n                points.techniqueIndex[featureIndex],\n                x,\n                y,\n                points.textIndex[featureIndex],\n                this.getTag(featureIndex, points.layerIndex!),\n                this.getTag(featureIndex, points.classIndex!),\n                this.getTag(featureIndex, points.typeIndex!)\n            );\n        }\n    }\n\n    /**\n     * Call the `handler` on a line feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitLineFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        const tileInfo = this.tileInfo;\n        const lines = tileInfo.lineGroup;\n\n        const numFeatures = lines.numFeatures;\n        const positionsStart = lines.positionIndex[featureIndex];\n        const numPointValues =\n            featureIndex === numFeatures - 1\n                ? lines.positions.length - positionsStart\n                : lines.positionIndex[featureIndex + 1] - positionsStart;\n\n        let segmentId: number | undefined;\n        let startOffset: number | undefined;\n        let endOffset: number | undefined;\n\n        if (lines.segmentIds !== undefined) {\n            segmentId = lines.segmentIds[featureIndex];\n            startOffset = lines.segmentStartOffsets![featureIndex];\n            endOffset = lines.segmentEndOffsets![featureIndex];\n        }\n\n        if (!!handler.acceptLine) {\n            handler.acceptLine(\n                lines.featureIds[featureIndex],\n                lines.techniqueIndex[featureIndex],\n                lines.textIndex[featureIndex],\n                this.getTag(featureIndex, lines.layerIndex!),\n                this.getTag(featureIndex, lines.classIndex!),\n                this.getTag(featureIndex, lines.typeIndex!),\n                tileInfo.lineGroup.positions,\n                positionsStart,\n                numPointValues,\n                segmentId,\n                startOffset,\n                endOffset\n            );\n        }\n    }\n\n    /**\n     * Call the `handler` on a polygon feature.\n     *\n     * @param featureIndex The index of the feature into the feature table.\n     * @param handler The `handler` to use.\n     */\n    private visitPolygonFeature(featureIndex: number, handler: ExtendedTileInfoHandler): void {\n        if (handler.acceptPolygon === undefined) {\n            return;\n        }\n\n        const tileInfo = this.tileInfo;\n        const polygons = tileInfo.polygonGroup;\n\n        const numFeatures = polygons.numFeatures;\n        const ringStart = polygons.outerRingStartIndex[featureIndex];\n        const numRings =\n            featureIndex === numFeatures - 1\n                ? polygons.innerRingStartIndex.length - ringStart\n                : polygons.outerRingStartIndex[featureIndex + 1] - ringStart;\n\n        // Use a static instance, so we do not allocate anything here\n        ExtendedTileInfoVisitor.polygonAccessor.setup(polygons, featureIndex, ringStart, numRings);\n\n        handler.acceptPolygon(\n            polygons.featureIds[featureIndex],\n            polygons.techniqueIndex[featureIndex],\n            polygons.textIndex[featureIndex],\n            this.getTag(featureIndex, polygons.layerIndex!),\n            this.getTag(featureIndex, polygons.classIndex!),\n            this.getTag(featureIndex, polygons.typeIndex!),\n            ExtendedTileInfoVisitor.polygonAccessor\n        );\n\n        // Free all data references.\n        ExtendedTileInfoVisitor.polygonAccessor.reset();\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BooleanLiteralExpr,\n    CallExpr,\n    CaseExpr,\n    Expr,\n    ExprVisitor,\n    HasAttributeExpr,\n    MatchExpr,\n    NullLiteralExpr,\n    NumberLiteralExpr,\n    ObjectLiteralExpr,\n    StringLiteralExpr,\n    VarExpr\n} from \"./Expr\";\n\nimport { Value } from \"./Env\";\n\n/**\n * [[ExprPool]] maintains a set of unique interned [[Expr]] objects.\n *\n * @hidden\n */\nexport class ExprPool implements ExprVisitor<Expr, void> {\n    private readonly m_booleanLiterals = new Map<boolean, BooleanLiteralExpr>();\n    private readonly m_numberLiterals = new Map<number, NumberLiteralExpr>();\n    private readonly m_stringLiterals = new Map<string, StringLiteralExpr>();\n    private readonly m_objectLiterals = new Map<object, ObjectLiteralExpr>();\n    private readonly m_arrayLiterals: ObjectLiteralExpr[] = [];\n    private readonly m_varExprs = new Map<string, VarExpr>();\n    private readonly m_hasAttributeExprs = new Map<string, HasAttributeExpr>();\n    private readonly m_matchExprs: MatchExpr[] = [];\n    private readonly m_caseExprs: CaseExpr[] = [];\n    private readonly m_callExprs = new Map<string, CallExpr[]>();\n\n    /**\n     * Add `expr` to this [[ExprPool]] and return a unique [[Expr]]\n     * object that is structurally equivalent to `expr`.\n     *\n     * @param expr The [[Expr]] to add to this [[ExprPool]].\n     * @returns A unique [[Expr]] that is structurally equivalent to `expr`.\n     */\n    add(expr: Expr): Expr {\n        return expr.accept(this, undefined);\n    }\n\n    visitNullLiteralExpr(expr: NullLiteralExpr, context: void): Expr {\n        return NullLiteralExpr.instance;\n    }\n\n    visitBooleanLiteralExpr(expr: BooleanLiteralExpr, context: void): Expr {\n        const e = this.m_booleanLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_booleanLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitNumberLiteralExpr(expr: NumberLiteralExpr, context: void): Expr {\n        const e = this.m_numberLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_numberLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitStringLiteralExpr(expr: StringLiteralExpr, context: void): Expr {\n        const e = this.m_stringLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n        this.m_stringLiterals.set(expr.value, expr);\n        return expr;\n    }\n\n    visitObjectLiteralExpr(expr: ObjectLiteralExpr, context: void): Expr {\n        const e = this.m_objectLiterals.get(expr.value);\n        if (e) {\n            return e;\n        }\n\n        if (Array.isArray(expr.value)) {\n            const array = expr.value as Value[];\n\n            const r = this.m_arrayLiterals.find(literal => {\n                const elements = literal.value as Value[];\n                if (elements.length !== array.length) {\n                    return false;\n                }\n                return array.every((x, i) => x === elements[i]);\n            });\n\n            if (r !== undefined) {\n                return r;\n            }\n\n            this.m_arrayLiterals.push(expr);\n        }\n\n        this.m_objectLiterals.set(expr.value, expr);\n\n        return expr;\n    }\n\n    visitVarExpr(expr: VarExpr, context: void): Expr {\n        const e = this.m_varExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_varExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitHasAttributeExpr(expr: HasAttributeExpr, context: void): Expr {\n        const e = this.m_hasAttributeExprs.get(expr.name);\n        if (e) {\n            return e;\n        }\n        this.m_hasAttributeExprs.set(expr.name, expr);\n        return expr;\n    }\n\n    visitMatchExpr(expr: MatchExpr, context: void): Expr {\n        const value = expr.value.accept(this, context);\n        const branches: typeof expr.branches = expr.branches.map(([label, body]) => [\n            label,\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n        for (const candidate of this.m_matchExprs) {\n            if (candidate.value !== value) {\n                continue;\n            }\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n        const r = new MatchExpr(value, branches, fallback);\n        this.m_matchExprs.push(r);\n        return r;\n    }\n\n    visitCaseExpr(expr: CaseExpr, context: void): Expr {\n        const branches: typeof expr.branches = expr.branches.map(([condition, body]) => [\n            condition.accept(this, context),\n            body.accept(this, context)\n        ]);\n        const fallback = expr.fallback.accept(this, context);\n\n        for (const candidate of this.m_caseExprs) {\n            if (candidate.fallback !== fallback) {\n                continue;\n            }\n            if (candidate.branches.length !== branches.length) {\n                continue;\n            }\n            let branchesMatching = true;\n            for (let i = 0; i < branches.length; i++) {\n                if (\n                    branches[i][0] !== candidate.branches[i][0] ||\n                    branches[i][1] !== candidate.branches[i][1]\n                ) {\n                    branchesMatching = false;\n                    break;\n                }\n            }\n            if (branchesMatching) {\n                return candidate;\n            }\n        }\n\n        const r = new CaseExpr(branches, fallback);\n        this.m_caseExprs.push(r);\n        return r;\n    }\n\n    visitCallExpr(expr: CallExpr, context: void): Expr {\n        // rewrite the actual arguments\n        const expressions = expr.args.map(childExpr => childExpr.accept(this, context));\n        // ensure we have a valid set of interned expressions for the calls\n        if (!this.m_callExprs.has(expr.op)) {\n            this.m_callExprs.set(expr.op, []);\n        }\n        // get the calls for the given operator.\n        const calls = this.m_callExprs.get(expr.op)!;\n        for (const call of calls) {\n            // check the number of arguments\n            if (call.args.length !== expressions.length) {\n                continue;\n            }\n            // find the index of the first mismatch.\n            let index = 0;\n            for (; index < call.args.length; ++index) {\n                if (call.args[index] !== expressions[index]) {\n                    break;\n                }\n            }\n            if (index === call.args.length) {\n                // no mismatch found, return the 'interned' call.\n                return call;\n            }\n        }\n        const e = new CallExpr(expr.op, expressions);\n        calls.push(e);\n        return e;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { isJsonExpr } from \"./Expr\";\nimport { StyleDeclaration, Theme } from \"./Theme\";\n\n/**\n * The ThemeVisitor visits every style in the theme in a depth-first fashion.\n */\nexport class ThemeVisitor {\n    constructor(readonly theme: Theme) {}\n    /**\n     * Applies a function to every style in the theme.\n     *\n     * @param visitFunc Function to be called with `style` as an argument. Function should return\n     *                  `true` to cancel visitation.\n     * @returns `true` if function has finished prematurely.\n     */\n    visitStyles(visitFunc: (style: StyleDeclaration) => boolean): boolean {\n        const visit = (style: StyleDeclaration): boolean => {\n            if (isJsonExpr(style)) {\n                return false;\n            }\n            if (visitFunc(style)) {\n                return true;\n            }\n            return false;\n        };\n        if (this.theme.styles !== undefined) {\n            for (const styleSetName in this.theme.styles) {\n                if (this.theme.styles[styleSetName] !== undefined) {\n                    for (const style of this.theme.styles[styleSetName]) {\n                        if (visit(style)) {\n                            return true;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    DecodedTile,\n    Definitions,\n    ITileDecoder,\n    OptionsMap,\n    StyleSet,\n    TileInfo\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { Projection, TileKey } from \"@here/harp-geoutils\";\n\n/**\n * `ThemedTileDecoder` implements an [[ITileDecoder]] which uses a [[Theme]] to apply styles to the\n * objects displayed in the map.\n *\n * By default, decoders are executed in web workers (using [[TileDecoderService]]) for performance\n * reasons.\n */\nexport abstract class ThemedTileDecoder implements ITileDecoder {\n    languages?: string[];\n    m_storageLevelOffset: number = 0;\n\n    protected m_styleSetEvaluator?: StyleSetEvaluator;\n    abstract connect(): Promise<void>;\n\n    dispose() {\n        // implemented in subclasses\n    }\n\n    decodeTile(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<DecodedTile> {\n        if (this.m_styleSetEvaluator === undefined) {\n            return Promise.reject(new Error(\"No style is defined\"));\n        }\n\n        return this.decodeThemedTile(data, tileKey, this.m_styleSetEvaluator, projection);\n    }\n\n    // tslint:disable:no-unused-variable\n    getTileInfo(\n        data: ArrayBufferLike,\n        tileKey: TileKey,\n        projection: Projection\n    ): Promise<TileInfo | undefined> {\n        return Promise.resolve(undefined);\n    }\n    // tslint:disable:no-unused-variable\n\n    configure(\n        styleSet?: StyleSet,\n        definitions?: Definitions,\n        languages?: string[],\n        options?: OptionsMap\n    ): void {\n        if (styleSet !== undefined) {\n            this.m_styleSetEvaluator = new StyleSetEvaluator(styleSet, definitions);\n        }\n        if (languages !== undefined) {\n            this.languages = languages;\n        }\n        if (options !== undefined && options.storageLevelOffset !== undefined) {\n            this.m_storageLevelOffset = options.storageLevelOffset;\n        }\n    }\n\n    /**\n     * Create a [[DecodedTile]] from binary tile data and a theme description in form of a\n     * [[StyleSetEvaluator]].\n     *\n     * @param data Binary data in form of [[ArrayBufferLike]], or any object.\n     * @param tileKey Quadtree address of tile.\n     * @param styleSetEvaluator Processor of [[Theme]], identifies styling techniques applicable to\n     *      individual objects.\n     * @param projection Projection used by the individual data sources.\n     */\n    abstract decodeThemedTile(\n        data: ArrayBufferLike | {},\n        tileKey: TileKey,\n        styleSetEvaluator: StyleSetEvaluator,\n        projection: Projection\n    ): Promise<DecodedTile>;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Fills an index buffer with the indices for the extruded walls for a polygon contour.\n *\n * @param indexBuffer Index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param contour Vertices that compose the contour.\n * @param contourEdges Collection of booleans indicating if contour edges should be added.\n * @param boundaryWalls If `false`, walls in tile boundaries will not be created.\n *\n */\nexport function addExtrudedWalls(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    contour: number[],\n    contourEdges?: boolean[],\n    boundaryWalls?: boolean\n): void {\n    // Infer the index buffer's position of the vertices that form the extruded-polygons' walls\n    // by stepping through the contour segment by segment.\n    const nSegments = contour.length / vertexStride;\n    for (let i = 0; i < nSegments; ++i) {\n        const vFootprint0 = vertexOffset + i * 2;\n        const vRoof0 = vFootprint0 + 1;\n        const vFootprint1 = vertexOffset + ((i + 1) % nSegments) * 2;\n        const vRoof1 = vFootprint1 + 1;\n        if (boundaryWalls !== false || contourEdges === undefined) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        } else if (contourEdges[i]) {\n            indexBuffer.push(vFootprint0, vRoof0, vRoof1, vRoof1, vFootprint1, vFootprint0);\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst currEdgeStart = new THREE.Vector2();\nconst currEdgeGoal = new THREE.Vector2();\nconst prevEdgeStart = new THREE.Vector2();\nconst prevEdgeGoal = new THREE.Vector2();\n\n/**\n * Fills an index buffer with the indices for the edges of a polygon contour.\n *\n * @param indexBuffer Edge index buffer to be filled.\n * @param vertexOffset Starting offset of the vertices composing the contour.\n * @param vertexStride Number of elements per contour vertex.\n * @param polygonContour Vertices that compose the contour.\n * @param polygonContourEdges Collection of booleans indicating if contour edges should be added.\n */\nexport function addPolygonEdges(\n    indexBuffer: number[],\n    vertexOffset: number,\n    vertexStride: number,\n    polygonContour: number[],\n    polygonContourEdges: boolean[],\n    isExtruded?: boolean,\n    addFootprintEdges?: boolean,\n    wallEdgeSlope?: number\n) {\n    for (let i = 0; i < polygonContourEdges.length; ++i) {\n        if (polygonContourEdges[i]) {\n            if (isExtruded === true) {\n                const vFootprint0 = vertexOffset + i * 2;\n                const vRoof0 = vFootprint0 + 1;\n                const vFootprint1 = vertexOffset + ((i + 1) % polygonContourEdges.length) * 2;\n                const vRoof1 = vFootprint1 + 1;\n\n                if (addFootprintEdges === true) {\n                    indexBuffer.push(vFootprint0, vFootprint1);\n                }\n                indexBuffer.push(vRoof0, vRoof1);\n\n                const prevEdgeIdx = (i === 0 ? polygonContourEdges.length : i) - 1;\n                if (polygonContourEdges[prevEdgeIdx]) {\n                    if (wallEdgeSlope !== undefined) {\n                        const v0x = polygonContour[i * vertexStride];\n                        const v0y = polygonContour[i * vertexStride + 1];\n                        const v1x =\n                            polygonContour[((i + 1) % polygonContourEdges.length) * vertexStride];\n                        const v1y =\n                            polygonContour[\n                                ((i + 1) % polygonContourEdges.length) * vertexStride + 1\n                            ];\n\n                        currEdgeStart.set(v0x, v0y);\n                        currEdgeGoal.set(v1x, v1y);\n                        prevEdgeStart.set(\n                            polygonContour[prevEdgeIdx * vertexStride],\n                            polygonContour[prevEdgeIdx * vertexStride + 1]\n                        );\n                        prevEdgeGoal.set(currEdgeStart.x, currEdgeStart.y);\n\n                        if (\n                            prevEdgeGoal\n                                .sub(prevEdgeStart)\n                                .normalize()\n                                .dot(currEdgeGoal.sub(currEdgeStart).normalize()) <= wallEdgeSlope\n                        ) {\n                            indexBuffer.push(vFootprint0, vRoof0);\n                        }\n                    } else {\n                        indexBuffer.push(vFootprint0, vRoof0);\n                    }\n                }\n            } else {\n                const vFoot0 = vertexOffset + i;\n                const vRoof0 = vertexOffset + ((i + 1) % polygonContourEdges.length);\n                indexBuffer.push(vFoot0, vRoof0);\n            }\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    BufferAttribute as ThreeBufferAttribute,\n    BufferGeometry as ThreeBufferGeometry,\n    InterleavedBufferAttribute as ThreeInterleavedBufferAttribute,\n    TypedArray\n} from \"three\";\nimport {\n    BufferAttribute,\n    BufferElementType,\n    Geometry,\n    GeometryType,\n    InterleavedBufferAttribute\n} from \"./DecodedTile\";\n\n/**\n * Collection of helper methods to convert\n * {@link https://threejs.org/docs/index.html#api/en/core/BufferGeometry|three.js BufferGeometry}\n * to [[Geometry]] that allows creation and transfering of THREE BufferGeometry in webworkers.\n * See also [[CustomDatasourceExample]].\n */\nexport namespace ThreeBufferUtils {\n    export function getBufferElementType(buffer: TypedArray): BufferElementType {\n        if (buffer instanceof Int8Array) {\n            return \"int8\";\n        } else if (buffer instanceof Uint8Array) {\n            return \"uint8\";\n        } else if (buffer instanceof Int16Array) {\n            return \"int16\";\n        } else if (buffer instanceof Uint16Array) {\n            return \"uint16\";\n        } else if (buffer instanceof Int32Array) {\n            return \"int32\";\n        } else if (buffer instanceof Uint32Array) {\n            return \"uint32\";\n        } else if (buffer instanceof Float32Array) {\n            return \"float\";\n        }\n\n        throw new Error(`Unsupported buffer type ${name}`);\n    }\n\n    export function fromThreeBufferAttribute(\n        bufferAttribute: ThreeBufferAttribute\n    ): BufferAttribute {\n        const buffer = (bufferAttribute.array as any) as TypedArray;\n        return {\n            name: bufferAttribute.name,\n            buffer: buffer.buffer,\n            type: getBufferElementType(buffer),\n            itemCount: bufferAttribute.itemSize,\n            normalized: bufferAttribute.normalized\n        };\n    }\n\n    export function fromThreeInterleavedBufferAttribute(\n        bufferAttribute: ThreeInterleavedBufferAttribute\n    ): InterleavedBufferAttribute {\n        throw new Error(\"Not implemented yet\");\n    }\n\n    export function fromThreeBufferGeometry(\n        bufferGeometry: ThreeBufferGeometry,\n        techniqueIndex: number\n    ): Geometry {\n        const vertexAttributes: BufferAttribute[] = [];\n        const attributeNames = Object.getOwnPropertyNames(bufferGeometry.attributes);\n        for (const name of attributeNames) {\n            const attribute = bufferGeometry.attributes[name];\n            // FIXME: Also support InterleavedBufferAttribute\n            const vertexAttribute = fromThreeBufferAttribute(attribute as ThreeBufferAttribute);\n            vertexAttribute.name = name;\n            vertexAttributes.push(vertexAttribute);\n        }\n        const index =\n            bufferGeometry.index !== null\n                ? fromThreeBufferAttribute(bufferGeometry.index)\n                : undefined;\n\n        let count = 0;\n        if (index !== undefined) {\n            count = bufferGeometry.index === null ? 0 : bufferGeometry.index.count;\n        } else {\n            // If there is no index buffer, try to deduce the count from the position attribute.\n            const posAttr = bufferGeometry.attributes.position as ThreeBufferAttribute;\n            if (posAttr === undefined) {\n                throw new Error(\"Missing position attibute to deduce item count\");\n            }\n            count = posAttr.count;\n        }\n\n        return {\n            type: GeometryType.Unspecified,\n            vertexAttributes,\n            index,\n            groups: [{ start: 0, count, technique: techniqueIndex }]\n        };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    addBuffersToTransferList,\n    BufferAttribute,\n    getProjection,\n    InterleavedBufferAttribute,\n    ITileDecoder,\n    WorkerDecoderProtocol\n} from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { LoggerManager } from \"@here/harp-utils\";\n\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\nconst logger = LoggerManager.instance.create(\"TileDecoderService\");\n\n/**\n * An extension to [[WorkerService]], the `TileDecoderService` implements an asynchronous\n * (message based) service to decode tile content in web workers. The `TileDecoderService` itself\n * lives in the web worker, and communicates with messages by means of a [[ConcurrentWorkerSet]]\n * with the application.\n *\n * The `TileDecoderService` handles a [[DecodeTileRequest]], which contains a tile and its freshly\n * loaded binary data, decodes the content with the [[ITileDecoder]] that the service is configured\n * to use, and sends the data back in form of a [[WorkerServiceResponse]].\n */\nexport class TileDecoderService extends WorkerService {\n    /**\n     * Start a [[TileDecoderService]] with a given decoder.\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param decoder   [[TileDecoder]] instance.\n     */\n    static start(serviceId: string, decoder: ITileDecoder) {\n        return new TileDecoderService(serviceId, decoder);\n    }\n\n    /**\n     * Set up the `TileDecoderService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     * @param m_decoder Decoder to handle the decoding and info requests.\n     */\n    constructor(readonly serviceId: string, private readonly m_decoder: ITileDecoder) {\n        super(serviceId);\n        this.m_decoder.connect();\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request Message that is either a DecodeTileRequest or a TileInfoRequest.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerDecoderProtocol.isDecodeTileRequest(request)) {\n            return this.handleDecodeTileRequest(request);\n        } else if (WorkerDecoderProtocol.isTileInfoRequest(request)) {\n            return this.handleTileInfoRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    /**\n     * Handle incoming configuration message. Configuration message is passed on to decoder.\n     *\n     * @param request Message of type [[ConfigurationMessage]].\n     * @override\n     */\n    protected handleMessage(message: any) {\n        if (WorkerDecoderProtocol.isConfigurationMessage(message)) {\n            this.handleConfigurationMessage(message);\n        } else {\n            logger.error(`[${this.serviceId}]: invalid message ${message.type}`);\n        }\n    }\n\n    private async handleDecodeTileRequest(\n        request: WorkerDecoderProtocol.DecodeTileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        const decodedTile = await this.m_decoder.decodeTile(request.data, tileKey, projection);\n\n        const transferList: ArrayBufferLike[] = [];\n\n        const transferBufferAttribute = (\n            attribute?: BufferAttribute | InterleavedBufferAttribute\n        ) => {\n            if (\n                attribute !== undefined &&\n                attribute.buffer.byteLength > 0 &&\n                !transferList.includes(attribute.buffer)\n            ) {\n                transferList.push(attribute.buffer);\n            }\n        };\n\n        decodedTile.geometries.forEach(geom => {\n            geom.vertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            geom.interleavedVertexAttributes?.forEach(attr => transferBufferAttribute(attr));\n            transferBufferAttribute(geom.index);\n            transferBufferAttribute(geom.edgeIndex);\n\n            if (\n                Array.isArray(geom.objInfos) &&\n                geom.objInfos.length === 1 &&\n                typeof geom.objInfos[0] === \"object\" &&\n                geom.objInfos[0]?.hasOwnProperty(\"displacementMap\")\n            ) {\n                const obj = geom.objInfos[0] as any;\n                transferBufferAttribute(obj.displacementMap);\n            }\n\n            if (Array.isArray(geom.attachments)) {\n                geom.attachments.forEach(attachment => {\n                    transferBufferAttribute(attachment.index);\n                    transferBufferAttribute(attachment.edgeIndex);\n                });\n            }\n        });\n\n        decodedTile.techniques.forEach(technique => {\n            addBuffersToTransferList(technique, transferList);\n        });\n\n        return {\n            response: decodedTile,\n            transferList\n        };\n    }\n\n    private handleTileInfoRequest(\n        request: WorkerDecoderProtocol.TileInfoRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const projection = getProjection(request.projection);\n\n        return this.m_decoder.getTileInfo(request.data, tileKey, projection).then(tileInfo => {\n            const transferList: ArrayBuffer[] =\n                tileInfo !== undefined && tileInfo.transferList !== undefined\n                    ? tileInfo.transferList\n                    : [];\n            return {\n                response: tileInfo,\n                transferList\n            };\n        });\n    }\n\n    private handleConfigurationMessage(message: WorkerDecoderProtocol.ConfigurationMessage) {\n        this.m_decoder.configure(\n            message.styleSet,\n            message.definitions,\n            message.languages,\n            message.options\n        );\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { ITiler, WorkerTilerProtocol } from \"@here/harp-datasource-protocol\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { GeoJsonTiler } from \"./GeoJsonTiler\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * An extension to [[WorkerService]], the `TilerService` implements an asynchronous (message based)\n * service to tile untiled payloads in web workers. The `TilerService` itself lives in the web\n * worker, and communicates with messages by means of a [[ConcurrentWorkerSet]] with the\n * application.\n *\n * The `TilerService` registers tile indices (parent tile to be subdivided) by handling a\n * [[RegisterIndexRequest]], and can later retrieve tiled payloads from through the [[TileRequest]].\n * The data is sent back in form of a [[WorkerServiceResponse]].\n */\nexport class TilerService extends WorkerService {\n    /**\n     * Start a [[TilerService]].\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    static start(serviceId: string) {\n        return new TilerService(serviceId);\n    }\n    tiler: ITiler = new GeoJsonTiler();\n\n    /**\n     * Set up the `TilerService`. The name of the service must be unique\n     *\n     * @param serviceId Service id. Must be unique.\n     */\n    constructor(readonly serviceId: string) {\n        super(serviceId);\n    }\n\n    /**\n     * Handle incoming request messages. Identifies message type and processes the request.\n     *\n     * @param request [[WorkerTilerProtocol]] request.\n     * @returns A promise which resolves to a [[WorkerServiceResponse]].\n     * @override\n     */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (WorkerTilerProtocol.isRegisterIndexRequest(request)) {\n            return this.handleRegisterIndexRequest(request);\n        } else if (WorkerTilerProtocol.isUpdateIndexRequest(request)) {\n            return this.handleUpdateIndexRequest(request);\n        } else if (WorkerTilerProtocol.isTileRequest(request)) {\n            return this.handleTileRequest(request);\n        } else {\n            return super.handleRequest(request);\n        }\n    }\n\n    private async handleTileRequest(\n        request: WorkerTilerProtocol.TileRequest\n    ): Promise<WorkerServiceResponse> {\n        const tileKey = TileKey.fromMortonCode(request.tileKey);\n        const tile = await this.tiler.getTile(request.index, tileKey);\n\n        return { response: tile || {} };\n    }\n\n    private async handleRegisterIndexRequest(\n        message: WorkerTilerProtocol.RegisterIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n        await this.tiler.registerIndex(message.id, input);\n\n        return { response: {} };\n    }\n\n    private async handleUpdateIndexRequest(\n        message: WorkerTilerProtocol.UpdateIndexRequest\n    ): Promise<WorkerServiceResponse> {\n        const input = typeof message.input === \"string\" ? new URL(message.input) : message.input;\n\n        this.tiler.updateIndex(message.id, input);\n\n        return { response: {} };\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { WorkerServiceProtocol } from \"@here/harp-datasource-protocol\";\nimport { WorkerService, WorkerServiceResponse } from \"./WorkerService\";\n\n/**\n * Factory function that creates [[WorkerService]].\n */\nexport type WorkerServiceFactory = (serviceId: string) => WorkerService;\n\n/**\n * Worker service class definition as needed by [[WorkerServiceManager.register]].\n */\nexport interface WorkerServiceDescriptor {\n    serviceType: string;\n    factory: WorkerServiceFactory;\n}\n\n/**\n * Manages dynamic worker services in Web Worker context.\n *\n * Handles `CreateService` and `DestroyService` messages sent to Web Worker. Singleton (in scope of\n * one worker runtime!), starts automatically with first [[getInstance]] call.\n */\nexport class WorkerServiceManager extends WorkerService {\n    /**\n     * Gets the default instance of `WorkerServiceManager`. Starts the service when first called.\n     */\n    static getInstance() {\n        if (this.m_service === undefined) {\n            this.m_service = new WorkerServiceManager(\n                WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n            );\n        }\n        return this.m_service;\n    }\n\n    /**\n     * Default instance of `WorkerServiceManager`.\n     */\n    private static m_service: WorkerServiceManager;\n\n    /**\n     * Contains all registered service factories indexed by `serviceType`.\n     */\n    private m_factories = new Map<string, WorkerServiceFactory>();\n\n    /**\n     * Contains all managed worker services indexed by their `serviceId`.\n     */\n    private m_services = new Map<string, WorkerService>();\n\n    private constructor(\n        serviceId: string = WorkerServiceProtocol.WORKER_SERVICE_MANAGER_SERVICE_ID\n    ) {\n        super(serviceId);\n    }\n\n    /**\n     * Register [[WorkerService]] class to this manager.\n     *\n     * @param workerServiceDescriptor service type and factory\n     */\n    register(workerServiceDescriptor: WorkerServiceDescriptor): void {\n        this.m_factories.set(workerServiceDescriptor.serviceType, workerServiceDescriptor.factory);\n    }\n\n    /** @override */\n    protected handleRequest(request: any): Promise<WorkerServiceResponse> {\n        if (request.type === WorkerServiceProtocol.Requests.CreateService) {\n            const existingService = this.m_services.get(request.targetServiceId);\n            if (existingService !== undefined) {\n                throw Error(\n                    // tslint:disable-next-line: max-line-length\n                    `error - service with targetServiceId='${request.targetServiceId}' already running, ignoring CreateService request`\n                );\n            }\n\n            const factory = this.m_factories.get(request.targetServiceType);\n\n            if (factory === undefined) {\n                throw Error(`unknown targetServiceType requested: '${request.targetServiceType}'`);\n            }\n\n            const service = factory(request.targetServiceId);\n            this.m_services.set(request.targetServiceId, service);\n        }\n        if (request.type === WorkerServiceProtocol.Requests.DestroyService) {\n            const service = this.m_services.get(request.targetServiceId);\n            if (service === undefined) {\n                throw Error(`unknown targetServiceId '${request.targetServiceId}'`);\n            }\n            service.destroy();\n            this.m_services.delete(request.targetServiceId);\n        }\n\n        return Promise.resolve({\n            response: {}\n        });\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Env, MapEnv, Value, ValueMap } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { TileKey } from \"@here/harp-geoutils\";\nimport { ILogger } from \"@here/harp-utils\";\nimport * as Long from \"long\";\nimport { Vector2 } from \"three\";\nimport { IGeometryProcessor, ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\nimport { OmvDataAdapter } from \"./OmvDecoder\";\nimport { OmvGeometryType } from \"./OmvDecoderDefs\";\nimport { isArrayBufferLike } from \"./OmvUtils\";\nimport { com } from \"./proto/vector_tile\";\n\n/**\n * @hidden\n */\nexport enum CommandKind {\n    MoveTo = 1,\n    LineTo = 2,\n    ClosePath = 7\n}\n\n/**\n * @hidden\n */\nexport interface BaseCommand {\n    kind: CommandKind;\n}\n\n/**\n * @hidden\n */\nexport interface PositionCommand extends BaseCommand {\n    position: Vector2;\n}\n\n/**\n * @hidden\n */\nexport type GeometryCommand = BaseCommand | PositionCommand;\n\n/**\n * @hidden\n */\nexport function isMoveToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.MoveTo;\n}\n\n/**\n * @hidden\n */\nexport function isLineToCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.LineTo;\n}\n\n/**\n * @hidden\n */\nexport function isClosePathCommand(command: GeometryCommand): command is PositionCommand {\n    return command.kind === CommandKind.ClosePath;\n}\n\n/**\n * @hidden\n */\nexport interface OmvVisitor {\n    visitLayer?(layer: com.mapbox.pb.Tile.ILayer): boolean;\n    endVisitLayer?(layer: com.mapbox.pb.Tile.ILayer): void;\n    visitPointFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitLineFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n    visitPolygonFeature?(feature: com.mapbox.pb.Tile.IFeature): void;\n}\n\n/**\n * @hidden\n */\nexport function visitOmv(vectorTile: com.mapbox.pb.Tile, visitor: OmvVisitor) {\n    if (!vectorTile.layers) {\n        return;\n    }\n\n    for (const layer of vectorTile.layers) {\n        if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n            visitOmvLayer(layer, visitor);\n        }\n        if (visitor.endVisitLayer) {\n            visitor.endVisitLayer(layer);\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport function visitOmvLayer(layer: com.mapbox.pb.Tile.ILayer, visitor: OmvVisitor) {\n    if (!visitor.visitLayer || visitor.visitLayer(layer)) {\n        if (layer.features) {\n            for (const feature of layer.features) {\n                switch (feature.type) {\n                    case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POINT:\n                        if (visitor.visitPointFeature) {\n                            visitor.visitPointFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.LINESTRING:\n                        if (visitor.visitLineFeature) {\n                            visitor.visitLineFeature(feature);\n                        }\n                        break;\n\n                    case com.mapbox.pb.Tile.GeomType.POLYGON:\n                        if (visitor.visitPolygonFeature) {\n                            visitor.visitPolygonFeature(feature);\n                        }\n                        break;\n                }\n            }\n        }\n    }\n\n    if (visitor.endVisitLayer) {\n        visitor.endVisitLayer(layer);\n    }\n}\n\n/**\n * @hidden\n */\nexport interface FeatureAttributesVisitor {\n    visitAttribute(name: string, value: com.mapbox.pb.Tile.IValue): boolean;\n}\n\n/**\n * @hidden\n */\nexport class FeatureAttributes {\n    accept(\n        layer: com.mapbox.pb.Tile.ILayer,\n        feature: com.mapbox.pb.Tile.IFeature,\n        visitor: FeatureAttributesVisitor\n    ): void {\n        const { keys, values } = layer;\n        const tags = feature.tags;\n\n        if (!tags || !keys || !values) {\n            return;\n        }\n\n        for (let i = 0; i < tags.length; i += 2) {\n            const key = keys[tags[i]];\n            const value = values[tags[i + 1]];\n            if (!visitor.visitAttribute(key, value)) {\n                break;\n            }\n        }\n    }\n}\n\n/**\n * @hidden\n */\nexport interface GeometryCommandsVisitor {\n    type: \"Point\" | \"Line\" | \"Polygon\";\n    visitCommand(command: GeometryCommand): void;\n}\n\n/**\n * @hidden\n */\nexport class GeometryCommands {\n    accept(geometry: number[] | null, visitor: GeometryCommandsVisitor) {\n        if (!geometry) {\n            return;\n        }\n\n        const geometryCount = geometry.length;\n\n        let currX = 0;\n        let currY = 0;\n\n        const xCoords: number[] = [];\n        const yCoords: number[] = [];\n        const commands: GeometryCommand[] = [];\n        for (let cmdIndex = 0; cmdIndex < geometryCount; ) {\n            // tslint:disable:no-bitwise\n            const kind = (geometry[cmdIndex] & 0x7) as CommandKind;\n            const count = geometry[cmdIndex] >> 0x3;\n            // tslint:enable:no-bitwise\n            ++cmdIndex;\n\n            if (kind === CommandKind.MoveTo || kind === CommandKind.LineTo) {\n                for (let n = 0; n < count; ++n) {\n                    const xx = geometry[cmdIndex++];\n                    const yy = geometry[cmdIndex++];\n\n                    // tslint:disable:no-bitwise\n                    currX += (xx >> 1) ^ -(xx & 1);\n                    currY += (yy >> 1) ^ -(yy & 1);\n                    if (visitor.type === \"Polygon\") {\n                        xCoords.push(currX);\n                        yCoords.push(currY);\n                    }\n\n                    const position = new Vector2(currX, currY);\n                    commands.push({ kind, position });\n                }\n            } else {\n                for (const command of commands) {\n                    visitor.visitCommand(command);\n                }\n                visitor.visitCommand({ kind });\n                xCoords.length = 0;\n                yCoords.length = 0;\n                commands.length = 0;\n            }\n        }\n\n        if (commands.length > 0) {\n            for (const command of commands) {\n                visitor.visitCommand(command);\n            }\n        }\n    }\n}\n\nconst propertyCategories = [\n    \"stringValue\",\n    \"floatValue\",\n    \"doubleValue\",\n    \"intValue\",\n    \"uintValue\",\n    \"sintValue\",\n    \"boolValue\"\n];\n\nfunction simplifiedValue(value: com.mapbox.pb.Tile.IValue): Value {\n    const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    for (const category of propertyCategories) {\n        if (hasOwnProperty.call(value, category)) {\n            const v = value[category as keyof com.mapbox.pb.Tile.IValue];\n\n            if (v === undefined) {\n                throw new Error(\"unpexted undefined value\");\n            }\n\n            return Long.isLong(v) ? (v as any).toNumber() : v;\n        }\n    }\n\n    throw new Error(\"not happening\");\n}\n\nfunction replaceReservedName(name: string): string {\n    switch (name) {\n        case \"id\":\n            return \"$id\";\n        default:\n            return name;\n    } // switch\n}\n\nfunction decodeFeatureId(\n    feature: com.mapbox.pb.Tile.IFeature,\n    logger?: ILogger\n): number | string | undefined {\n    if (feature.hasOwnProperty(\"id\")) {\n        const id = feature.id;\n        if (typeof id === \"number\") {\n            return id;\n        } else if (id) {\n            if (logger !== undefined && id.greaterThan(Number.MAX_SAFE_INTEGER)) {\n                logger.error(\n                    \"Invalid ID: Larger than largest available Number in feature: \",\n                    feature\n                );\n            }\n            return id.toNumber();\n        }\n    }\n\n    return undefined;\n}\n\nfunction readAttributes(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    defaultAttributes: ValueMap = {}\n): ValueMap {\n    const attrs = new FeatureAttributes();\n\n    const attributes: ValueMap = defaultAttributes || {};\n\n    attrs.accept(layer, feature, {\n        visitAttribute: (name, value) => {\n            attributes[replaceReservedName(name)] = simplifiedValue(value);\n            return true;\n        }\n    });\n\n    return attributes;\n}\n\nfunction createFeatureEnv(\n    layer: com.mapbox.pb.Tile.ILayer,\n    feature: com.mapbox.pb.Tile.IFeature,\n    geometryType: string,\n    storageLevel: number,\n    storageLevelOffset?: number,\n    logger?: ILogger,\n    parent?: Env\n): MapEnv {\n    const attributes: ValueMap = {\n        $layer: layer.name,\n        $level: storageLevel,\n        $zoom: Math.max(0, storageLevel - (storageLevelOffset || 0)),\n        $geometryType: geometryType\n    };\n\n    // Some sources serve `id` directly as `IFeature` property ...\n    const featureId = decodeFeatureId(feature, logger);\n    if (featureId !== undefined) {\n        attributes.$id = featureId;\n    }\n\n    readAttributes(layer, feature, attributes);\n\n    return new MapEnv(attributes, parent);\n}\n\nfunction asGeometryType(feature: com.mapbox.pb.Tile.IFeature | undefined): OmvGeometryType {\n    if (feature === undefined) {\n        return OmvGeometryType.UNKNOWN;\n    }\n\n    switch (feature.type) {\n        case com.mapbox.pb.Tile.GeomType.UNKNOWN:\n            return OmvGeometryType.UNKNOWN;\n        case com.mapbox.pb.Tile.GeomType.POINT:\n            return OmvGeometryType.POINT;\n        case com.mapbox.pb.Tile.GeomType.LINESTRING:\n            return OmvGeometryType.LINESTRING;\n        case com.mapbox.pb.Tile.GeomType.POLYGON:\n            return OmvGeometryType.POLYGON;\n        default:\n            return OmvGeometryType.UNKNOWN;\n    } // switch\n}\n\n/**\n * The class [[OmvProtobufDataAdapter]] converts OMV protobuf geo data\n * to geometries for the given [[IGeometryProcessor]].\n */\nexport class OmvProtobufDataAdapter implements OmvDataAdapter, OmvVisitor {\n    id = \"omv-protobuf\";\n\n    private readonly m_geometryCommands = new GeometryCommands();\n    private readonly m_processor: IGeometryProcessor;\n    private readonly m_logger?: ILogger;\n    private m_dataFilter?: OmvFeatureFilter;\n\n    private m_tileKey!: TileKey;\n    private m_layer!: com.mapbox.pb.Tile.ILayer;\n\n    /**\n     * Constructs a new [[OmvProtobufDataAdapter]].\n     *\n     * @param processor The [[IGeometryProcessor]] used to process the data.\n     * @param dataFilter The [[OmvFeatureFilter]] used to filter features.\n     * @param logger The [[ILogger]] used to log diagnostic messages.\n     */\n    constructor(processor: IGeometryProcessor, dataFilter?: OmvFeatureFilter, logger?: ILogger) {\n        this.m_processor = processor;\n        this.m_dataFilter = dataFilter;\n        this.m_logger = logger;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    get dataFilter(): OmvFeatureFilter | undefined {\n        return this.m_dataFilter;\n    }\n\n    /**\n     * The [[OmvFeatureFilter]] used to filter features.\n     */\n    set dataFilter(dataFilter: OmvFeatureFilter | undefined) {\n        this.m_dataFilter = dataFilter;\n    }\n\n    /**\n     * Checks that the given data can be processed by this [[OmvProtobufDataAdapter]].\n     */\n    canProcess(data: ArrayBufferLike | {}): boolean {\n        return isArrayBufferLike(data);\n    }\n\n    /**\n     * Processes the given data payload using this adapter's [[IGeometryProcessor]].\n     *\n     * @param data The data payload to process.\n     * @param tileKey The [[TileKey]] of the tile enclosing the data.\n     */\n    process(data: ArrayBufferLike, tileKey: TileKey) {\n        const payload = new Uint8Array(data);\n        const proto = com.mapbox.pb.Tile.decode(payload);\n\n        this.m_tileKey = tileKey;\n\n        visitOmv(proto, this);\n    }\n\n    /**\n     * Visits the OMV layer.\n     *\n     * @param layer The OMV layer to process.\n     */\n    visitLayer(layer: com.mapbox.pb.Tile.ILayer): boolean {\n        this.m_layer = layer;\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = layer.name;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLayer(layerName, storageLevel)\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Visits point features.\n     *\n     * @param feature The OMV point features to process.\n     */\n    visitPointFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPointFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: Vector2[] = [];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Point\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    geometry.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"point\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPointFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the line features.\n     *\n     * @param feature The line features to process.\n     */\n    visitLineFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsLineFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: ILineGeometry[] = [];\n        let positions: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Line\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    positions = [command.position];\n                    geometry.push({ positions });\n                } else if (isLineToCommand(command)) {\n                    positions.push(command.position);\n                }\n            }\n        });\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"line\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processLineFeature(layerName, layerExtents, geometry, env, storageLevel);\n    }\n\n    /**\n     * Visits the polygon features.\n     *\n     * @param feature The polygon features to process.\n     */\n    visitPolygonFeature(feature: com.mapbox.pb.Tile.IFeature): void {\n        if (feature.geometry === undefined) {\n            return;\n        }\n\n        const storageLevel = this.m_tileKey.level;\n        const layerName = this.m_layer.name;\n        const layerExtents = this.m_layer.extent || 4096;\n\n        if (\n            this.m_dataFilter !== undefined &&\n            !this.m_dataFilter.wantsPolygonFeature(layerName, asGeometryType(feature), storageLevel)\n        ) {\n            return;\n        }\n\n        const geometry: IPolygonGeometry[] = [];\n        const currentPolygon: IPolygonGeometry = { rings: [] };\n        let currentRing: Vector2[];\n        this.m_geometryCommands.accept(feature.geometry, {\n            type: \"Polygon\",\n            visitCommand: command => {\n                if (isMoveToCommand(command)) {\n                    currentRing = [command.position];\n                } else if (isLineToCommand(command)) {\n                    currentRing.push(command.position);\n                } else if (isClosePathCommand(command)) {\n                    currentPolygon.rings.push(currentRing);\n                }\n            }\n        });\n\n        if (currentPolygon.rings.length > 0) {\n            geometry.push(currentPolygon);\n        }\n\n        if (geometry.length === 0) {\n            return;\n        }\n\n        const env = createFeatureEnv(\n            this.m_layer,\n            feature,\n            \"polygon\",\n            storageLevel,\n            this.m_processor.storageLevelOffset,\n            this.m_logger\n        );\n\n        this.m_processor.processPolygonFeature(\n            layerName,\n            layerExtents,\n            geometry,\n            env,\n            storageLevel\n        );\n    }\n}\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.com = (function() {\n\n    /**\n     * Namespace com.\n     * @exports com\n     * @namespace\n     */\n    var com = {};\n\n    com.mapbox = (function() {\n\n        /**\n         * Namespace mapbox.\n         * @memberof com\n         * @namespace\n         */\n        var mapbox = {};\n\n        mapbox.pb = (function() {\n\n            /**\n             * Namespace pb.\n             * @memberof com.mapbox\n             * @namespace\n             */\n            var pb = {};\n\n            pb.Tile = (function() {\n\n                /**\n                 * Properties of a Tile.\n                 * @memberof com.mapbox.pb\n                 * @interface ITile\n                 * @property {Array.<com.mapbox.pb.Tile.ILayer>|null} [layers] Tile layers\n                 */\n\n                /**\n                 * Constructs a new Tile.\n                 * @memberof com.mapbox.pb\n                 * @classdesc Represents a Tile.\n                 * @implements ITile\n                 * @constructor\n                 * @param {com.mapbox.pb.ITile=} [properties] Properties to set\n                 */\n                function Tile(properties) {\n                    this.layers = [];\n                    if (properties)\n                        for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                            if (properties[keys[i]] != null)\n                                this[keys[i]] = properties[keys[i]];\n                }\n\n                /**\n                 * Tile layers.\n                 * @member {Array.<com.mapbox.pb.Tile.ILayer>} layers\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 */\n                Tile.prototype.layers = $util.emptyArray;\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer.\n                 * @function decode\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @param {number} [length] Message length if known beforehand\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decode = function decode(reader, length) {\n                    if (!(reader instanceof $Reader))\n                        reader = $Reader.create(reader);\n                    var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile();\n                    while (reader.pos < end) {\n                        var tag = reader.uint32();\n                        switch (tag >>> 3) {\n                        case 3:\n                            if (!(message.layers && message.layers.length))\n                                message.layers = [];\n                            message.layers.push($root.com.mapbox.pb.Tile.Layer.decode(reader, reader.uint32()));\n                            break;\n                        default:\n                            reader.skipType(tag & 7);\n                            break;\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Decodes a Tile message from the specified reader or buffer, length delimited.\n                 * @function decodeDelimited\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 * @throws {Error} If the payload is not a reader or valid buffer\n                 * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                 */\n                Tile.decodeDelimited = function decodeDelimited(reader) {\n                    if (!(reader instanceof $Reader))\n                        reader = new $Reader(reader);\n                    return this.decode(reader, reader.uint32());\n                };\n\n                /**\n                 * Creates a Tile message from a plain object. Also converts values to their respective internal types.\n                 * @function fromObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {Object.<string,*>} object Plain object\n                 * @returns {com.mapbox.pb.Tile} Tile\n                 */\n                Tile.fromObject = function fromObject(object) {\n                    if (object instanceof $root.com.mapbox.pb.Tile)\n                        return object;\n                    var message = new $root.com.mapbox.pb.Tile();\n                    if (object.layers) {\n                        if (!Array.isArray(object.layers))\n                            throw TypeError(\".com.mapbox.pb.Tile.layers: array expected\");\n                        message.layers = [];\n                        for (var i = 0; i < object.layers.length; ++i) {\n                            if (typeof object.layers[i] !== \"object\")\n                                throw TypeError(\".com.mapbox.pb.Tile.layers: object expected\");\n                            message.layers[i] = $root.com.mapbox.pb.Tile.Layer.fromObject(object.layers[i]);\n                        }\n                    }\n                    return message;\n                };\n\n                /**\n                 * Creates a plain object from a Tile message. Also converts values to other types if specified.\n                 * @function toObject\n                 * @memberof com.mapbox.pb.Tile\n                 * @static\n                 * @param {com.mapbox.pb.Tile} message Tile\n                 * @param {$protobuf.IConversionOptions} [options] Conversion options\n                 * @returns {Object.<string,*>} Plain object\n                 */\n                Tile.toObject = function toObject(message, options) {\n                    if (!options)\n                        options = {};\n                    var object = {};\n                    if (options.arrays || options.defaults)\n                        object.layers = [];\n                    if (message.layers && message.layers.length) {\n                        object.layers = [];\n                        for (var j = 0; j < message.layers.length; ++j)\n                            object.layers[j] = $root.com.mapbox.pb.Tile.Layer.toObject(message.layers[j], options);\n                    }\n                    return object;\n                };\n\n                /**\n                 * Converts this Tile to JSON.\n                 * @function toJSON\n                 * @memberof com.mapbox.pb.Tile\n                 * @instance\n                 * @returns {Object.<string,*>} JSON object\n                 */\n                Tile.prototype.toJSON = function toJSON() {\n                    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                };\n\n                /**\n                 * GeomType enum.\n                 * @name com.mapbox.pb.Tile.GeomType\n                 * @enum {string}\n                 * @property {number} UNKNOWN=0 UNKNOWN value\n                 * @property {number} POINT=1 POINT value\n                 * @property {number} LINESTRING=2 LINESTRING value\n                 * @property {number} POLYGON=3 POLYGON value\n                 */\n                Tile.GeomType = (function() {\n                    var valuesById = {}, values = Object.create(valuesById);\n                    values[valuesById[0] = \"UNKNOWN\"] = 0;\n                    values[valuesById[1] = \"POINT\"] = 1;\n                    values[valuesById[2] = \"LINESTRING\"] = 2;\n                    values[valuesById[3] = \"POLYGON\"] = 3;\n                    return values;\n                })();\n\n                Tile.Value = (function() {\n\n                    /**\n                     * Properties of a Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IValue\n                     * @property {string|null} [stringValue] Value stringValue\n                     * @property {number|null} [floatValue] Value floatValue\n                     * @property {number|null} [doubleValue] Value doubleValue\n                     * @property {number|Long|null} [intValue] Value intValue\n                     * @property {number|Long|null} [uintValue] Value uintValue\n                     * @property {number|Long|null} [sintValue] Value sintValue\n                     * @property {boolean|null} [boolValue] Value boolValue\n                     */\n\n                    /**\n                     * Constructs a new Value.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Value.\n                     * @implements IValue\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IValue=} [properties] Properties to set\n                     */\n                    function Value(properties) {\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Value stringValue.\n                     * @member {string} stringValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.stringValue = \"\";\n\n                    /**\n                     * Value floatValue.\n                     * @member {number} floatValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.floatValue = 0;\n\n                    /**\n                     * Value doubleValue.\n                     * @member {number} doubleValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.doubleValue = 0;\n\n                    /**\n                     * Value intValue.\n                     * @member {number|Long} intValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.intValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value uintValue.\n                     * @member {number|Long} uintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.uintValue = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Value sintValue.\n                     * @member {number|Long} sintValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.sintValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n                    /**\n                     * Value boolValue.\n                     * @member {boolean} boolValue\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     */\n                    Value.prototype.boolValue = false;\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Value();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.stringValue = reader.string();\n                                break;\n                            case 2:\n                                message.floatValue = reader.float();\n                                break;\n                            case 3:\n                                message.doubleValue = reader.double();\n                                break;\n                            case 4:\n                                message.intValue = reader.int64();\n                                break;\n                            case 5:\n                                message.uintValue = reader.uint64();\n                                break;\n                            case 6:\n                                message.sintValue = reader.sint64();\n                                break;\n                            case 7:\n                                message.boolValue = reader.bool();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Value message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Value.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Value message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Value} Value\n                     */\n                    Value.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Value)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Value();\n                        if (object.stringValue != null)\n                            message.stringValue = String(object.stringValue);\n                        if (object.floatValue != null)\n                            message.floatValue = Number(object.floatValue);\n                        if (object.doubleValue != null)\n                            message.doubleValue = Number(object.doubleValue);\n                        if (object.intValue != null)\n                            if ($util.Long)\n                                (message.intValue = $util.Long.fromValue(object.intValue)).unsigned = false;\n                            else if (typeof object.intValue === \"string\")\n                                message.intValue = parseInt(object.intValue, 10);\n                            else if (typeof object.intValue === \"number\")\n                                message.intValue = object.intValue;\n                            else if (typeof object.intValue === \"object\")\n                                message.intValue = new $util.LongBits(object.intValue.low >>> 0, object.intValue.high >>> 0).toNumber();\n                        if (object.uintValue != null)\n                            if ($util.Long)\n                                (message.uintValue = $util.Long.fromValue(object.uintValue)).unsigned = true;\n                            else if (typeof object.uintValue === \"string\")\n                                message.uintValue = parseInt(object.uintValue, 10);\n                            else if (typeof object.uintValue === \"number\")\n                                message.uintValue = object.uintValue;\n                            else if (typeof object.uintValue === \"object\")\n                                message.uintValue = new $util.LongBits(object.uintValue.low >>> 0, object.uintValue.high >>> 0).toNumber(true);\n                        if (object.sintValue != null)\n                            if ($util.Long)\n                                (message.sintValue = $util.Long.fromValue(object.sintValue)).unsigned = false;\n                            else if (typeof object.sintValue === \"string\")\n                                message.sintValue = parseInt(object.sintValue, 10);\n                            else if (typeof object.sintValue === \"number\")\n                                message.sintValue = object.sintValue;\n                            else if (typeof object.sintValue === \"object\")\n                                message.sintValue = new $util.LongBits(object.sintValue.low >>> 0, object.sintValue.high >>> 0).toNumber();\n                        if (object.boolValue != null)\n                            message.boolValue = Boolean(object.boolValue);\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Value message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Value} message Value\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Value.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.defaults) {\n                            object.stringValue = \"\";\n                            object.floatValue = 0;\n                            object.doubleValue = 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.intValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.intValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.uintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.uintValue = options.longs === String ? \"0\" : 0;\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, false);\n                                object.sintValue = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.sintValue = options.longs === String ? \"0\" : 0;\n                            object.boolValue = false;\n                        }\n                        if (message.stringValue != null && message.hasOwnProperty(\"stringValue\"))\n                            object.stringValue = message.stringValue;\n                        if (message.floatValue != null && message.hasOwnProperty(\"floatValue\"))\n                            object.floatValue = options.json && !isFinite(message.floatValue) ? String(message.floatValue) : message.floatValue;\n                        if (message.doubleValue != null && message.hasOwnProperty(\"doubleValue\"))\n                            object.doubleValue = options.json && !isFinite(message.doubleValue) ? String(message.doubleValue) : message.doubleValue;\n                        if (message.intValue != null && message.hasOwnProperty(\"intValue\"))\n                            if (typeof message.intValue === \"number\")\n                                object.intValue = options.longs === String ? String(message.intValue) : message.intValue;\n                            else\n                                object.intValue = options.longs === String ? $util.Long.prototype.toString.call(message.intValue) : options.longs === Number ? new $util.LongBits(message.intValue.low >>> 0, message.intValue.high >>> 0).toNumber() : message.intValue;\n                        if (message.uintValue != null && message.hasOwnProperty(\"uintValue\"))\n                            if (typeof message.uintValue === \"number\")\n                                object.uintValue = options.longs === String ? String(message.uintValue) : message.uintValue;\n                            else\n                                object.uintValue = options.longs === String ? $util.Long.prototype.toString.call(message.uintValue) : options.longs === Number ? new $util.LongBits(message.uintValue.low >>> 0, message.uintValue.high >>> 0).toNumber(true) : message.uintValue;\n                        if (message.sintValue != null && message.hasOwnProperty(\"sintValue\"))\n                            if (typeof message.sintValue === \"number\")\n                                object.sintValue = options.longs === String ? String(message.sintValue) : message.sintValue;\n                            else\n                                object.sintValue = options.longs === String ? $util.Long.prototype.toString.call(message.sintValue) : options.longs === Number ? new $util.LongBits(message.sintValue.low >>> 0, message.sintValue.high >>> 0).toNumber() : message.sintValue;\n                        if (message.boolValue != null && message.hasOwnProperty(\"boolValue\"))\n                            object.boolValue = message.boolValue;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Value to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Value\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Value.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Value;\n                })();\n\n                Tile.Feature = (function() {\n\n                    /**\n                     * Properties of a Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface IFeature\n                     * @property {number|Long|null} [id] Feature id\n                     * @property {Array.<number>|null} [tags] Feature tags\n                     * @property {com.mapbox.pb.Tile.GeomType|null} [type] Feature type\n                     * @property {Array.<number>|null} [geometry] Feature geometry\n                     */\n\n                    /**\n                     * Constructs a new Feature.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Feature.\n                     * @implements IFeature\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.IFeature=} [properties] Properties to set\n                     */\n                    function Feature(properties) {\n                        this.tags = [];\n                        this.geometry = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Feature id.\n                     * @member {number|Long} id\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.id = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n                    /**\n                     * Feature tags.\n                     * @member {Array.<number>} tags\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.tags = $util.emptyArray;\n\n                    /**\n                     * Feature type.\n                     * @member {com.mapbox.pb.Tile.GeomType} type\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.type = 0;\n\n                    /**\n                     * Feature geometry.\n                     * @member {Array.<number>} geometry\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     */\n                    Feature.prototype.geometry = $util.emptyArray;\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Feature();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 1:\n                                message.id = reader.uint64();\n                                break;\n                            case 2:\n                                if (!(message.tags && message.tags.length))\n                                    message.tags = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.tags.push(reader.uint32());\n                                } else\n                                    message.tags.push(reader.uint32());\n                                break;\n                            case 3:\n                                message.type = reader.int32();\n                                break;\n                            case 4:\n                                if (!(message.geometry && message.geometry.length))\n                                    message.geometry = [];\n                                if ((tag & 7) === 2) {\n                                    var end2 = reader.uint32() + reader.pos;\n                                    while (reader.pos < end2)\n                                        message.geometry.push(reader.uint32());\n                                } else\n                                    message.geometry.push(reader.uint32());\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Feature message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Feature.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Feature message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Feature} Feature\n                     */\n                    Feature.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Feature)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Feature();\n                        if (object.id != null)\n                            if ($util.Long)\n                                (message.id = $util.Long.fromValue(object.id)).unsigned = true;\n                            else if (typeof object.id === \"string\")\n                                message.id = parseInt(object.id, 10);\n                            else if (typeof object.id === \"number\")\n                                message.id = object.id;\n                            else if (typeof object.id === \"object\")\n                                message.id = new $util.LongBits(object.id.low >>> 0, object.id.high >>> 0).toNumber(true);\n                        if (object.tags) {\n                            if (!Array.isArray(object.tags))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.tags: array expected\");\n                            message.tags = [];\n                            for (var i = 0; i < object.tags.length; ++i)\n                                message.tags[i] = object.tags[i] >>> 0;\n                        }\n                        switch (object.type) {\n                        case \"UNKNOWN\":\n                        case 0:\n                            message.type = 0;\n                            break;\n                        case \"POINT\":\n                        case 1:\n                            message.type = 1;\n                            break;\n                        case \"LINESTRING\":\n                        case 2:\n                            message.type = 2;\n                            break;\n                        case \"POLYGON\":\n                        case 3:\n                            message.type = 3;\n                            break;\n                        }\n                        if (object.geometry) {\n                            if (!Array.isArray(object.geometry))\n                                throw TypeError(\".com.mapbox.pb.Tile.Feature.geometry: array expected\");\n                            message.geometry = [];\n                            for (var i = 0; i < object.geometry.length; ++i)\n                                message.geometry[i] = object.geometry[i] >>> 0;\n                        }\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Feature message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Feature} message Feature\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Feature.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.tags = [];\n                            object.geometry = [];\n                        }\n                        if (options.defaults) {\n                            if ($util.Long) {\n                                var long = new $util.Long(0, 0, true);\n                                object.id = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                            } else\n                                object.id = options.longs === String ? \"0\" : 0;\n                            object.type = options.enums === String ? \"UNKNOWN\" : 0;\n                        }\n                        if (message.id != null && message.hasOwnProperty(\"id\"))\n                            if (typeof message.id === \"number\")\n                                object.id = options.longs === String ? String(message.id) : message.id;\n                            else\n                                object.id = options.longs === String ? $util.Long.prototype.toString.call(message.id) : options.longs === Number ? new $util.LongBits(message.id.low >>> 0, message.id.high >>> 0).toNumber(true) : message.id;\n                        if (message.tags && message.tags.length) {\n                            object.tags = [];\n                            for (var j = 0; j < message.tags.length; ++j)\n                                object.tags[j] = message.tags[j];\n                        }\n                        if (message.type != null && message.hasOwnProperty(\"type\"))\n                            object.type = options.enums === String ? $root.com.mapbox.pb.Tile.GeomType[message.type] : message.type;\n                        if (message.geometry && message.geometry.length) {\n                            object.geometry = [];\n                            for (var j = 0; j < message.geometry.length; ++j)\n                                object.geometry[j] = message.geometry[j];\n                        }\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Feature to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Feature\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Feature.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Feature;\n                })();\n\n                Tile.Layer = (function() {\n\n                    /**\n                     * Properties of a Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @interface ILayer\n                     * @property {number} version Layer version\n                     * @property {string} name Layer name\n                     * @property {Array.<com.mapbox.pb.Tile.IFeature>|null} [features] Layer features\n                     * @property {Array.<string>|null} [keys] Layer keys\n                     * @property {Array.<com.mapbox.pb.Tile.IValue>|null} [values] Layer values\n                     * @property {number|null} [extent] Layer extent\n                     */\n\n                    /**\n                     * Constructs a new Layer.\n                     * @memberof com.mapbox.pb.Tile\n                     * @classdesc Represents a Layer.\n                     * @implements ILayer\n                     * @constructor\n                     * @param {com.mapbox.pb.Tile.ILayer=} [properties] Properties to set\n                     */\n                    function Layer(properties) {\n                        this.features = [];\n                        this.keys = [];\n                        this.values = [];\n                        if (properties)\n                            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                                if (properties[keys[i]] != null)\n                                    this[keys[i]] = properties[keys[i]];\n                    }\n\n                    /**\n                     * Layer version.\n                     * @member {number} version\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.version = 1;\n\n                    /**\n                     * Layer name.\n                     * @member {string} name\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.name = \"\";\n\n                    /**\n                     * Layer features.\n                     * @member {Array.<com.mapbox.pb.Tile.IFeature>} features\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.features = $util.emptyArray;\n\n                    /**\n                     * Layer keys.\n                     * @member {Array.<string>} keys\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.keys = $util.emptyArray;\n\n                    /**\n                     * Layer values.\n                     * @member {Array.<com.mapbox.pb.Tile.IValue>} values\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.values = $util.emptyArray;\n\n                    /**\n                     * Layer extent.\n                     * @member {number} extent\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     */\n                    Layer.prototype.extent = 4096;\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer.\n                     * @function decode\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @param {number} [length] Message length if known beforehand\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decode = function decode(reader, length) {\n                        if (!(reader instanceof $Reader))\n                            reader = $Reader.create(reader);\n                        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.com.mapbox.pb.Tile.Layer();\n                        while (reader.pos < end) {\n                            var tag = reader.uint32();\n                            switch (tag >>> 3) {\n                            case 15:\n                                message.version = reader.uint32();\n                                break;\n                            case 1:\n                                message.name = reader.string();\n                                break;\n                            case 2:\n                                if (!(message.features && message.features.length))\n                                    message.features = [];\n                                message.features.push($root.com.mapbox.pb.Tile.Feature.decode(reader, reader.uint32()));\n                                break;\n                            case 3:\n                                if (!(message.keys && message.keys.length))\n                                    message.keys = [];\n                                message.keys.push(reader.string());\n                                break;\n                            case 4:\n                                if (!(message.values && message.values.length))\n                                    message.values = [];\n                                message.values.push($root.com.mapbox.pb.Tile.Value.decode(reader, reader.uint32()));\n                                break;\n                            case 5:\n                                message.extent = reader.uint32();\n                                break;\n                            default:\n                                reader.skipType(tag & 7);\n                                break;\n                            }\n                        }\n                        if (!message.hasOwnProperty(\"version\"))\n                            throw $util.ProtocolError(\"missing required 'version'\", { instance: message });\n                        if (!message.hasOwnProperty(\"name\"))\n                            throw $util.ProtocolError(\"missing required 'name'\", { instance: message });\n                        return message;\n                    };\n\n                    /**\n                     * Decodes a Layer message from the specified reader or buffer, length delimited.\n                     * @function decodeDelimited\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     * @throws {Error} If the payload is not a reader or valid buffer\n                     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n                     */\n                    Layer.decodeDelimited = function decodeDelimited(reader) {\n                        if (!(reader instanceof $Reader))\n                            reader = new $Reader(reader);\n                        return this.decode(reader, reader.uint32());\n                    };\n\n                    /**\n                     * Creates a Layer message from a plain object. Also converts values to their respective internal types.\n                     * @function fromObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {Object.<string,*>} object Plain object\n                     * @returns {com.mapbox.pb.Tile.Layer} Layer\n                     */\n                    Layer.fromObject = function fromObject(object) {\n                        if (object instanceof $root.com.mapbox.pb.Tile.Layer)\n                            return object;\n                        var message = new $root.com.mapbox.pb.Tile.Layer();\n                        if (object.version != null)\n                            message.version = object.version >>> 0;\n                        if (object.name != null)\n                            message.name = String(object.name);\n                        if (object.features) {\n                            if (!Array.isArray(object.features))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.features: array expected\");\n                            message.features = [];\n                            for (var i = 0; i < object.features.length; ++i) {\n                                if (typeof object.features[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.features: object expected\");\n                                message.features[i] = $root.com.mapbox.pb.Tile.Feature.fromObject(object.features[i]);\n                            }\n                        }\n                        if (object.keys) {\n                            if (!Array.isArray(object.keys))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.keys: array expected\");\n                            message.keys = [];\n                            for (var i = 0; i < object.keys.length; ++i)\n                                message.keys[i] = String(object.keys[i]);\n                        }\n                        if (object.values) {\n                            if (!Array.isArray(object.values))\n                                throw TypeError(\".com.mapbox.pb.Tile.Layer.values: array expected\");\n                            message.values = [];\n                            for (var i = 0; i < object.values.length; ++i) {\n                                if (typeof object.values[i] !== \"object\")\n                                    throw TypeError(\".com.mapbox.pb.Tile.Layer.values: object expected\");\n                                message.values[i] = $root.com.mapbox.pb.Tile.Value.fromObject(object.values[i]);\n                            }\n                        }\n                        if (object.extent != null)\n                            message.extent = object.extent >>> 0;\n                        return message;\n                    };\n\n                    /**\n                     * Creates a plain object from a Layer message. Also converts values to other types if specified.\n                     * @function toObject\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @static\n                     * @param {com.mapbox.pb.Tile.Layer} message Layer\n                     * @param {$protobuf.IConversionOptions} [options] Conversion options\n                     * @returns {Object.<string,*>} Plain object\n                     */\n                    Layer.toObject = function toObject(message, options) {\n                        if (!options)\n                            options = {};\n                        var object = {};\n                        if (options.arrays || options.defaults) {\n                            object.features = [];\n                            object.keys = [];\n                            object.values = [];\n                        }\n                        if (options.defaults) {\n                            object.name = \"\";\n                            object.extent = 4096;\n                            object.version = 1;\n                        }\n                        if (message.name != null && message.hasOwnProperty(\"name\"))\n                            object.name = message.name;\n                        if (message.features && message.features.length) {\n                            object.features = [];\n                            for (var j = 0; j < message.features.length; ++j)\n                                object.features[j] = $root.com.mapbox.pb.Tile.Feature.toObject(message.features[j], options);\n                        }\n                        if (message.keys && message.keys.length) {\n                            object.keys = [];\n                            for (var j = 0; j < message.keys.length; ++j)\n                                object.keys[j] = message.keys[j];\n                        }\n                        if (message.values && message.values.length) {\n                            object.values = [];\n                            for (var j = 0; j < message.values.length; ++j)\n                                object.values[j] = $root.com.mapbox.pb.Tile.Value.toObject(message.values[j], options);\n                        }\n                        if (message.extent != null && message.hasOwnProperty(\"extent\"))\n                            object.extent = message.extent;\n                        if (message.version != null && message.hasOwnProperty(\"version\"))\n                            object.version = message.version;\n                        return object;\n                    };\n\n                    /**\n                     * Converts this Layer to JSON.\n                     * @function toJSON\n                     * @memberof com.mapbox.pb.Tile.Layer\n                     * @instance\n                     * @returns {Object.<string,*>} JSON object\n                     */\n                    Layer.prototype.toJSON = function toJSON() {\n                        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n                    };\n\n                    return Layer;\n                })();\n\n                return Tile;\n            })();\n\n            return pb;\n        })();\n\n        return mapbox;\n    })();\n\n    return com;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n}\n\n// Set up buffer utility according to the environment\nprotobuf.Writer._configure(protobuf.BufferWriter);\nconfigure();\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\nvar Buffer = util.Buffer;\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Buffer} Buffer\n */\nBufferWriter.alloc = function alloc_buffer(size) {\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\n    ? function writeBytesBuffer_set(val, buf, pos) {\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n                           // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytesBuffer_copy(val, buf, pos) {\n        if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n        else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n    };\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else\n        buf.utf8Write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    AttributeMap,\n    BufferAttribute,\n    composeTechniqueTextureName,\n    DecodedTile,\n    ExtendedTileInfo,\n    ExtrudedPolygonTechnique,\n    FillTechnique,\n    Geometry,\n    GeometryType,\n    getFeatureId,\n    Group,\n    IndexedTechnique,\n    InterleavedBufferAttribute,\n    isExtrudedLineTechnique,\n    isExtrudedPolygonTechnique,\n    isFillTechnique,\n    isLabelRejectionLineTechnique,\n    isLineMarkerTechnique,\n    isLineTechnique,\n    isPoiTechnique,\n    isSolidLineTechnique,\n    isSpecialDashesLineTechnique,\n    isStandardTechnique,\n    isTextTechnique,\n    LineMarkerTechnique,\n    PathGeometry,\n    PoiGeometry,\n    PoiTechnique,\n    StyleColor,\n    Technique,\n    TextGeometry,\n    TextPathGeometry,\n    TextTechnique,\n    textureCoordinateType,\n    TextureCoordinateType\n} from \"@here/harp-datasource-protocol\";\nimport {\n    Env,\n    IMeshBuffers,\n    StyleSetEvaluator,\n    Value\n} from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LineGroup } from \"@here/harp-lines/lib/Lines\";\nimport { triangulateLine } from \"@here/harp-lines/lib/TriangulateLines\";\nimport { assert, getOptionValue, LoggerManager, Math2D } from \"@here/harp-utils\";\nimport earcut from \"earcut\";\nimport * as THREE from \"three\";\n\nimport {\n    normalizedEquirectangularProjection,\n    ProjectionType,\n    Vector3Like,\n    webMercatorProjection\n} from \"@here/harp-geoutils\";\n\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { LinesGeometry } from \"./OmvDataSource\";\nimport { IOmvEmitter, OmvDecoder, Ring } from \"./OmvDecoder\";\nimport {\n    tile2world,\n    webMercatorTile2TargetTile,\n    webMercatorTile2TargetWorld,\n    world2tile\n} from \"./OmvUtils\";\n\nimport {\n    AttrEvaluationContext,\n    evaluateTechniqueAttr\n} from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { clipPolygon } from \"@here/harp-geometry/lib/ClipPolygon\";\nimport {\n    EdgeLengthGeometrySubdivisionModifier,\n    SubdivisionMode\n} from \"@here/harp-geometry/lib/EdgeLengthGeometrySubdivisionModifier\";\n// tslint:disable-next-line:max-line-length\nimport { SphericalGeometrySubdivisionModifier } from \"@here/harp-geometry/lib/SphericalGeometrySubdivisionModifier\";\nimport { ExtrusionFeatureDefs } from \"@here/harp-materials/lib/MapMeshMaterialsDefs\";\n\nconst logger = LoggerManager.instance.create(\"OmvDecodedTileEmitter\");\n\nconst tempTileOrigin = new THREE.Vector3();\nconst tempVertOrigin = new THREE.Vector3();\nconst tempVertNormal = new THREE.Vector3();\nconst tempFootDisp = new THREE.Vector3();\nconst tempRoofDisp = new THREE.Vector3();\n\nconst tmpV2 = new THREE.Vector2();\nconst tmpV2r = new THREE.Vector2();\nconst tmpV3 = new THREE.Vector3();\nconst tmpV3r = new THREE.Vector3();\nconst tmpV4 = new THREE.Vector3();\n\nconst tempP0 = new THREE.Vector2();\nconst tempP1 = new THREE.Vector2();\nconst tempPreviousTangent = new THREE.Vector2();\n\nconst tmpPointA = new THREE.Vector3();\nconst tmpPointB = new THREE.Vector3();\nconst tmpPointC = new THREE.Vector3();\nconst tmpPointD = new THREE.Vector3();\nconst tmpPointE = new THREE.Vector3();\nconst tmpLine = new THREE.Line3();\n\n/**\n * Minimum number of pixels per character. Used during estimation if there is enough screen space\n * available to render a text. Based on the estimated screen size of a tile.\n */\nconst MIN_AVERAGE_CHAR_WIDTH = 5;\n\n/**\n * Estimation \"fudge factor\", tweaking the size estimation to\n *\n * a) allow room for zooming in to the tile, and\n *\n * b) allow for some tilting, where the edge of a tile closer to the camera has more space.\n *\n * Useful values are between 0 (allow all labels), 0.5 (allow labels at twice the default display\n * size of the tile) and 1.0 (skip labels that would normally not be displayed at default tile\n * size).\n */\nconst SIZE_ESTIMATION_FACTOR = 0.5;\n\n/**\n * Maximum allowed corner angle inside a label path.\n */\nconst MAX_CORNER_ANGLE = Math.PI / 8;\n\n/**\n * Used to identify an invalid (or better: unused) array index.\n */\nconst INVALID_ARRAY_INDEX = -1;\n\nfunction createIndexBufferAttribute(\n    elements: ArrayLike<number>,\n    maxValue: number,\n    name: string = \"index\"\n): BufferAttribute {\n    const type = maxValue > 65535 ? \"uint32\" : \"uint16\";\n    const storage = type === \"uint32\" ? new Uint32Array(elements) : new Uint16Array(elements);\n    const buffer = storage.buffer;\n    return {\n        itemCount: 1,\n        name,\n        buffer,\n        type\n    };\n}\n\n// for tilezen by default extrude all buildings even those without height data\nclass MeshBuffers implements IMeshBuffers {\n    readonly positions: number[] = [];\n    readonly normals: number[] = [];\n    readonly textureCoordinates: number[] = [];\n    readonly colors: number[] = [];\n    readonly extrusionAxis: number[] = [];\n    readonly indices: number[] = [];\n    readonly edgeIndices: number[] = [];\n    readonly groups: Group[] = [];\n    readonly texts: number[] = [];\n    readonly pathLengths: number[] = [];\n    readonly stringCatalog: Array<string | undefined> = [];\n    readonly imageTextures: number[] = [];\n\n    /**\n     * Optional list of feature start indices. The indices point into the index attribute.\n     */\n    readonly featureStarts: number[] = [];\n\n    /**\n     * An optional list of additional data that can be used as additional data for the object\n     * picking.\n     */\n    readonly objInfos: AttributeMap[] = [];\n\n    constructor(readonly type: GeometryType) {}\n\n    addText(text: string) {\n        let index = this.stringCatalog.indexOf(text);\n\n        if (index < 0) {\n            index = this.stringCatalog.length;\n            this.stringCatalog.push(text);\n        }\n        return index;\n    }\n}\n\nexport enum LineType {\n    Simple,\n    Complex\n}\n\ntype TexCoordsFunction = (tilePos: THREE.Vector2, tileExtents: number) => { u: number; v: number };\nconst tmpColor = new THREE.Color();\n\nexport class OmvDecodedTileEmitter implements IOmvEmitter {\n    // mapping from style index to mesh buffers\n    private readonly m_meshBuffers = new Map<number, MeshBuffers>();\n\n    private readonly m_geometries: Geometry[] = [];\n    private readonly m_textGeometries: TextGeometry[] = [];\n    private readonly m_textPathGeometries: TextPathGeometry[] = [];\n    private readonly m_pathGeometries: PathGeometry[] = [];\n    private readonly m_poiGeometries: PoiGeometry[] = [];\n    private readonly m_simpleLines: LinesGeometry[] = [];\n    private readonly m_solidLines: LinesGeometry[] = [];\n\n    private readonly m_sources: string[] = [];\n    private m_maxGeometryHeight: number = 0;\n\n    constructor(\n        private readonly m_decodeInfo: OmvDecoder.DecodeInfo,\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_gatherFeatureAttributes: boolean,\n        private readonly m_skipShortLabels: boolean,\n        private readonly m_enableElevationOverlay: boolean,\n        private readonly m_languages?: string[]\n    ) {}\n\n    get projection() {\n        return this.m_decodeInfo.targetProjection;\n    }\n\n    get center() {\n        return this.m_decodeInfo.center;\n    }\n\n    /**\n     * Creates the Point of Interest geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const techniqueIndex = technique._index;\n            const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, GeometryType.Point);\n\n            if (meshBuffers === undefined) {\n                continue;\n            }\n\n            const { positions, texts, imageTextures, objInfos } = meshBuffers;\n\n            const shouldCreateTextGeometries =\n                isTextTechnique(technique) || isPoiTechnique(technique);\n\n            let imageTexture: string | undefined;\n            const wantsPoi = isPoiTechnique(technique);\n\n            if (wantsPoi) {\n                const poiTechnique = technique as PoiTechnique;\n                imageTexture = evaluateTechniqueAttr(context, poiTechnique.imageTexture);\n\n                // TODO: Move to decoder independent parts of code.\n                if (poiTechnique.poiName !== undefined) {\n                    imageTexture = evaluateTechniqueAttr(context, poiTechnique.poiName);\n                } else if (typeof poiTechnique.poiNameField === \"string\") {\n                    const poiNameFieldValue = env.lookup(poiTechnique.poiNameField) as string;\n                    imageTexture = poiNameFieldValue;\n                } else if (typeof poiTechnique.imageTextureField === \"string\") {\n                    const imageTextureValue = env.lookup(poiTechnique.imageTextureField) as string;\n                    imageTexture = composeTechniqueTextureName(imageTextureValue, poiTechnique);\n                }\n            }\n\n            for (const pos of geometry) {\n                if (shouldCreateTextGeometries) {\n                    const textTechnique = technique as TextTechnique;\n                    const text = ExtendedTileInfo.getFeatureText(\n                        context,\n                        textTechnique,\n                        this.m_languages\n                    );\n\n                    if (text !== undefined && text.length > 0) {\n                        texts.push(meshBuffers.addText(text));\n                    } else {\n                        texts.push(INVALID_ARRAY_INDEX);\n                    }\n                }\n\n                // Always store the position, otherwise the following POIs will be\n                // misplaced.\n                if (shouldCreateTextGeometries) {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                } else {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV3);\n                }\n                positions.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                objInfos.push(\n                    this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                );\n\n                if (wantsPoi) {\n                    if (imageTexture === undefined) {\n                        imageTextures.push(INVALID_ARRAY_INDEX);\n                    } else {\n                        imageTextures.push(meshBuffers.addText(imageTexture));\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     *\n     * Creates the line geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param env The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        const localLines: number[][] = []; // lines in target tile space.\n        const worldLines: number[][] = []; // lines in world space.\n        const uvs: number[][] = [];\n        const offsets: number[][] = [];\n        const projectedBoundingBox = this.m_decodeInfo.projectedBoundingBox;\n\n        let localLineSegments: number[][]; // lines in target tile space for special dashes.\n\n        const tileWidth = projectedBoundingBox.extents.x * 2;\n        const tileHeight = projectedBoundingBox.extents.y * 2;\n        const tileSizeWorld = Math.max(tileWidth, tileHeight);\n\n        let computeTexCoords: TexCoordsFunction | undefined;\n        let texCoordinateType: TextureCoordinateType | undefined;\n\n        const hasUntiledLines = geometry[0].untiledPositions !== undefined;\n\n        // If true, special handling for dashes is required (round and diamond shaped dashes).\n        let hasIndividualLineSegments = false;\n        let hasContinuousLineSegments = false;\n\n        // Check if any of the techniques needs texture coordinates\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            if (!computeTexCoords) {\n                computeTexCoords = this.getComputeTexCoordsFunc(technique);\n                texCoordinateType = this.getTextureCoordinateType(technique);\n            } else {\n                // Support generation of only one type of texture coordinates.\n                const otherTexCoordType = this.getTextureCoordinateType(technique);\n                assert(otherTexCoordType === undefined || texCoordinateType === otherTexCoordType);\n            }\n\n            hasIndividualLineSegments =\n                hasIndividualLineSegments || isSpecialDashesLineTechnique(technique);\n\n            hasContinuousLineSegments = hasContinuousLineSegments || !hasIndividualLineSegments;\n        }\n\n        for (const polyline of geometry) {\n            // Compute the world position of the untiled line and its distance to the origin of the\n            // line to properly join lines.\n            const untiledLine: number[] = [];\n            let lineDist = 0;\n            if (hasUntiledLines) {\n                this.m_decodeInfo.targetProjection.projectPoint(\n                    polyline.untiledPositions![0],\n                    tmpV3r\n                );\n                polyline.untiledPositions!.forEach(pos => {\n                    // Calculate the distance to the next un-normalized point.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos, tmpV3);\n                    lineDist += tmpV3.distanceTo(tmpV3r);\n                    tmpV3r.copy(tmpV3);\n\n                    // Pushed the normalized point for line matching.\n                    this.m_decodeInfo.targetProjection.projectPoint(pos.normalized(), tmpV3);\n                    untiledLine.push(tmpV3.x, tmpV3.y, tmpV3.z, lineDist);\n                });\n            }\n\n            // Add continuous line as individual segments to improve special dashes by overlapping\n            // their connecting vertices. The technique/style should defined round or rectangular\n            // caps.\n            if (hasIndividualLineSegments) {\n                localLineSegments = [];\n\n                // Compute length of whole line and offsets of individual segments.\n                let lineLength = 0;\n                const pointCount = polyline.positions.length;\n                if (pointCount > 1) {\n                    let lastSegmentOffset = 0;\n\n                    for (let i = 0; i < pointCount - 1; i++) {\n                        const localLine: number[] = [];\n                        const worldLine: number[] = [];\n                        const lineUvs: number[] = [];\n                        const segmentOffsets: number[] = [];\n\n                        const pos1 = polyline.positions[i];\n                        const pos2 = polyline.positions[i + 1];\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos1, tmpV3);\n                        worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos2, tmpV4);\n                        worldLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        if (computeTexCoords) {\n                            {\n                                const { u, v } = computeTexCoords(pos1, extents);\n                                lineUvs.push(u, v);\n                            }\n                            {\n                                const { u, v } = computeTexCoords(pos2, extents);\n                                lineUvs.push(u, v);\n                            }\n                        }\n                        if (hasUntiledLines) {\n                            // Find where in the [0...1] range relative to the line our current\n                            // vertex lies.\n                            let offset =\n                                this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                            offset = this.findRelativePositionInLine(tmpV4, untiledLine) / lineDist;\n                            segmentOffsets.push(offset);\n                        } else {\n                            segmentOffsets.push(lastSegmentOffset);\n\n                            // Compute length of segment and whole line to scale down later.\n                            const segmentLength = tmpV3.distanceTo(tmpV4);\n                            lineLength += segmentLength;\n                            lastSegmentOffset += segmentLength;\n                            segmentOffsets.push(lastSegmentOffset);\n                        }\n\n                        tmpV3.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                        tmpV4.sub(this.m_decodeInfo.center);\n                        localLine.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                        localLineSegments!.push(localLine);\n                        worldLines.push(worldLine);\n                        uvs.push(lineUvs);\n                        offsets.push(segmentOffsets);\n                    }\n                }\n\n                if (!hasUntiledLines && lineLength > 0) {\n                    // Scale down each individual segment to range [0..1] for whole line.\n                    for (const segOffsets of offsets) {\n                        segOffsets.forEach((offs, index) => {\n                            segOffsets[index] = offs / lineLength;\n                        });\n                    }\n                }\n            }\n\n            // Add continuous lines\n            if (hasContinuousLineSegments) {\n                const localLine: number[] = [];\n                const worldLine: number[] = [];\n                const lineUvs: number[] = [];\n                const lineOffsets: number[] = [];\n                polyline.positions.forEach(pos => {\n                    webMercatorTile2TargetWorld(extents, this.m_decodeInfo, pos, tmpV3);\n                    worldLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                    if (computeTexCoords) {\n                        const { u, v } = computeTexCoords(pos, extents);\n                        lineUvs.push(u, v);\n                    }\n                    if (hasUntiledLines) {\n                        // Find where in the [0...1] range relative to the line our current vertex\n                        // lines.\n                        const offset =\n                            this.findRelativePositionInLine(tmpV3, untiledLine) / lineDist;\n                        lineOffsets.push(offset);\n                    }\n                    tmpV3.sub(this.m_decodeInfo.center);\n                    localLine.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                });\n                localLines.push(localLine);\n                worldLines.push(worldLine);\n                uvs.push(lineUvs);\n                offsets.push(lineOffsets);\n            }\n        }\n\n        const wantCircle = this.m_decodeInfo.tileKey.level >= 11;\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n            const techniqueIndex = technique._index;\n            const techniqueName = technique.name;\n\n            if (isLineTechnique(technique) || isSolidLineTechnique(technique)) {\n                const lineGeometry = isLineTechnique(technique)\n                    ? this.m_simpleLines\n                    : this.m_solidLines;\n\n                const lineType = isLineTechnique(technique) ? LineType.Simple : LineType.Complex;\n\n                if (hasIndividualLineSegments) {\n                    assert(\n                        localLineSegments! !== undefined,\n                        \"OmvDecodedTileEmitter#processLineFeature: \" +\n                            \"Internal error - No localLineSegments\"\n                    );\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLineSegments!,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        offsets\n                    );\n                }\n                if (localLines.length > 0) {\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        localLines,\n                        context,\n                        this.getTextureCoordinateType(technique) ? uvs : undefined,\n                        hasUntiledLines ? offsets : undefined\n                    );\n                }\n            } else if (\n                isTextTechnique(technique) ||\n                isPoiTechnique(technique) ||\n                isLineMarkerTechnique(technique)\n            ) {\n                const textTechnique = technique as TextTechnique;\n                const text = ExtendedTileInfo.getFeatureText(\n                    context,\n                    textTechnique,\n                    this.m_languages\n                );\n\n                if (text === undefined || text.length === 0) {\n                    continue;\n                }\n                let validLines: number[][] = [];\n\n                if (this.m_skipShortLabels) {\n                    // Filter the lines, keep only those that are long enough for labelling. Also,\n                    // split jagged label paths to keep processing and rendering only those that\n                    // have no sharp corners, which would not be rendered anyway.\n\n                    const worldUnitsPerPixel = tileSizeWorld / this.m_decodeInfo.tileSizeOnScreen;\n                    const minEstimatedLabelLength =\n                        MIN_AVERAGE_CHAR_WIDTH *\n                        text.length *\n                        worldUnitsPerPixel *\n                        SIZE_ESTIMATION_FACTOR;\n                    const minEstimatedLabelLengthSqr =\n                        minEstimatedLabelLength * minEstimatedLabelLength;\n\n                    validLines = this.splitJaggyLines(\n                        worldLines,\n                        minEstimatedLabelLengthSqr,\n                        MAX_CORNER_ANGLE\n                    );\n                } else {\n                    validLines = worldLines;\n                }\n\n                if (validLines.length === 0) {\n                    continue;\n                }\n\n                if (isTextTechnique(technique)) {\n                    if (text === undefined) {\n                        continue;\n                    }\n                    for (const path of validLines) {\n                        const pathLengthSqr = Math2D.computeSquaredLineLength(path);\n                        this.m_textPathGeometries.push({\n                            technique: techniqueIndex,\n                            path,\n                            pathLengthSqr,\n                            text: String(text),\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? env.entries\n                                : getFeatureId(env.entries)\n                        });\n                    }\n                } else {\n                    const lineMarkerTechnique = technique as LineMarkerTechnique;\n\n                    let imageTexture = evaluateTechniqueAttr(\n                        context,\n                        lineMarkerTechnique.imageTexture\n                    );\n\n                    // TODO: `imageTextureField` and `imageTexturePrefix` and `imageTexturePostfix`\n                    // are now deprecated\n\n                    // TODO: Move to decoder independent parts of code.\n                    if (typeof lineMarkerTechnique.imageTextureField === \"string\") {\n                        const imageTextureValue = env.lookup(lineMarkerTechnique.imageTextureField);\n                        imageTexture = imageTextureValue as string;\n                        if (typeof lineMarkerTechnique.imageTexturePrefix === \"string\") {\n                            imageTexture = lineMarkerTechnique.imageTexturePrefix + imageTexture;\n                        }\n                        if (typeof lineMarkerTechnique.imageTexturePostfix === \"string\") {\n                            imageTexture = imageTexture + lineMarkerTechnique.imageTexturePostfix;\n                        }\n                    }\n\n                    for (const aLine of validLines) {\n                        this.m_poiGeometries.push({\n                            technique: techniqueIndex,\n                            positions: {\n                                name: \"position\",\n                                type: \"float\",\n                                buffer: new Float32Array(aLine).buffer,\n                                itemCount: 3\n                            },\n                            texts: [0],\n                            stringCatalog: [text, imageTexture],\n                            imageTextures: [1],\n                            objInfos: this.m_gatherFeatureAttributes\n                                ? [env.entries]\n                                : [getFeatureId(env.entries)]\n                        });\n                    }\n                }\n            } else if (isLabelRejectionLineTechnique(technique)) {\n                for (const path of worldLines) {\n                    const worldPath: Vector3Like[] = [];\n                    for (let i = 0; i < path.length; i += 3) {\n                        worldPath.push(new THREE.Vector3().fromArray(path, i) as Vector3Like);\n                    }\n                    this.m_pathGeometries.push({\n                        path: worldPath\n                    });\n                }\n            } else if (isExtrudedLineTechnique(technique)) {\n                const meshBuffers = this.findOrCreateMeshBuffers(\n                    techniqueIndex,\n                    GeometryType.ExtrudedLine\n                );\n                if (meshBuffers === undefined) {\n                    continue;\n                }\n                const { positions, indices, groups, featureStarts, objInfos } = meshBuffers;\n                const start = indices.length;\n\n                const lineWidth = evaluateTechniqueAttr<number>(context, technique.lineWidth);\n\n                if (lineWidth === undefined) {\n                    continue;\n                }\n\n                const techniqueCaps = evaluateTechniqueAttr<string>(\n                    context,\n                    technique.caps,\n                    \"Circle\"\n                );\n\n                const addCircle = wantCircle && techniqueCaps === \"Circle\";\n\n                localLines.forEach(aLine => {\n                    triangulateLine(aLine, lineWidth, positions, indices, addCircle);\n                    featureStarts.push(start);\n                    objInfos.push(\n                        this.m_gatherFeatureAttributes ? env.entries : getFeatureId(env.entries)\n                    );\n                });\n\n                const count = indices.length - start;\n                groups.push({ start, count, technique: techniqueIndex });\n            } else {\n                logger.warn(\n                    `OmvDecodedTileEmitter#processLineFeature: Invalid line technique\n                     ${techniqueName} for layer: ${env.entries.$layer} `\n                );\n            }\n        }\n    }\n\n    /**\n     * Creates the polygons geometries for the given feature.\n     *\n     * @param layer Tile's layer to be processed.\n     * @param extents Tile's layer extents.\n     * @param geometry The current feature containing the main geometry.\n     * @param feature The [[MapEnv]] containing the environment information for the map.\n     * @param techniques The array of [[Technique]] that will be applied to the geometry.\n     * @param featureId The id of the feature.\n     */\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const env = context.env;\n        this.processFeatureCommon(env);\n\n        techniques.forEach(technique => {\n            if (technique === undefined) {\n                return;\n            }\n\n            const techniqueIndex = technique._index;\n\n            if (techniqueIndex === undefined) {\n                throw new Error(\n                    \"OmvDecodedTileEmitter#processPolygonFeature: \" +\n                        \"Internal error - No technique index\"\n                );\n            }\n\n            const polygons: Ring[][] = [];\n\n            const isExtruded = isExtrudedPolygonTechnique(technique);\n            const isFilled = isFillTechnique(technique);\n            const isStandard = isStandardTechnique(technique);\n\n            const isPolygon = isExtruded || isFilled || isStandard;\n            const computeTexCoords = this.getComputeTexCoordsFunc(technique);\n            const vertexStride = computeTexCoords !== undefined ? 4 : 2;\n\n            let clipRing: THREE.Vector2[] | undefined;\n\n            for (const polygon of geometry) {\n                const rings: Ring[] = [];\n\n                for (const outline of polygon.rings) {\n                    const ringContour: number[] = [];\n\n                    let coords = outline;\n\n                    if (isFilled || isStandard) {\n                        const shouldClipPolygon = coords.some(\n                            p => p.x < 0 || p.x > extents || p.y < 0 || p.y > extents\n                        );\n\n                        if (shouldClipPolygon) {\n                            if (!clipRing) {\n                                clipRing = [\n                                    new THREE.Vector2(0, 0),\n                                    new THREE.Vector2(extents, 0),\n                                    new THREE.Vector2(extents, extents),\n                                    new THREE.Vector2(0, extents)\n                                ];\n                            }\n\n                            coords = clipPolygon(coords, clipRing);\n                        }\n                    }\n\n                    if (coords.length === 0) {\n                        continue;\n                    }\n\n                    for (const coord of coords) {\n                        ringContour.push(coord.x, coord.y);\n                        if (computeTexCoords !== undefined) {\n                            const { u, v } = computeTexCoords(coord, extents);\n                            ringContour.push(u, v);\n                        }\n                    }\n\n                    rings.push(new Ring(extents, vertexStride, ringContour));\n                }\n\n                if (rings.length === 0) {\n                    continue;\n                }\n\n                polygons.push(rings);\n            }\n\n            const isLine = isSolidLineTechnique(technique) || isLineTechnique(technique);\n            if (isPolygon) {\n                this.applyPolygonTechnique(\n                    polygons,\n                    technique,\n                    techniqueIndex,\n                    featureId,\n                    context,\n                    extents\n                );\n            } else if (isLine) {\n                const lineGeometry =\n                    technique.name === \"line\" ? this.m_simpleLines : this.m_solidLines;\n\n                const lineType = technique.name === \"line\" ? LineType.Simple : LineType.Complex;\n\n                // Use individual line segments instead of a continuous line in special cases (round\n                // and diamond shaped dashes).\n                const needIndividualLineSegments = isSpecialDashesLineTechnique(technique);\n\n                polygons.forEach(rings => {\n                    const lines: number[][] = [];\n                    const offsets: number[][] | undefined = needIndividualLineSegments\n                        ? []\n                        : undefined;\n                    rings.forEach(ring => {\n                        const length = ring.contour.length / ring.vertexStride;\n                        let line: number[] = [];\n\n                        // Compute length of whole line and offsets of individual segments.\n                        let ringLength = 0;\n                        let lastSegmentOffset = 0;\n                        let segmentOffsets: number[] | undefined = needIndividualLineSegments\n                            ? []\n                            : undefined;\n\n                        for (let i = 0; i < length; ++i) {\n                            if (needIndividualLineSegments && line.length > 0) {\n                                // Allocate a line for every segment.\n                                line = [];\n                                segmentOffsets = [];\n                            }\n\n                            const nextIdx = (i + 1) % length;\n                            const currX = ring.contour[i * ring.vertexStride];\n                            const currY = ring.contour[i * ring.vertexStride + 1];\n                            const nextX = ring.contour[nextIdx * ring.vertexStride];\n                            const nextY = ring.contour[nextIdx * ring.vertexStride + 1];\n\n                            const isOutline = !(\n                                (currX <= 0 && nextX <= 0) ||\n                                (currX >= ring.extents && nextX >= ring.extents) ||\n                                (currY <= 0 && nextY <= 0) ||\n                                (currY >= ring.extents && nextY >= ring.extents)\n                            );\n\n                            if (!isOutline && line.length !== 0) {\n                                lines.push(line);\n                                line = [];\n                            } else if (isOutline && line.length === 0) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(currX, currY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n\n                                if (needIndividualLineSegments) {\n                                    // Add next point as the end point of this line segment.\n                                    webMercatorTile2TargetTile(\n                                        extents,\n                                        this.m_decodeInfo,\n                                        tmpV2.set(nextX, nextY),\n                                        tmpV4\n                                    );\n                                    line.push(tmpV4.x, tmpV4.y, tmpV4.z);\n\n                                    segmentOffsets!.push(lastSegmentOffset);\n\n                                    // Compute length of segment and whole line to scale down later.\n                                    const segmentLength = tmpV3.distanceTo(tmpV4);\n                                    ringLength += segmentLength;\n                                    lastSegmentOffset += segmentLength;\n                                    segmentOffsets!.push(lastSegmentOffset);\n                                }\n                            }\n                            if (isOutline && !needIndividualLineSegments) {\n                                webMercatorTile2TargetTile(\n                                    extents,\n                                    this.m_decodeInfo,\n                                    tmpV2.set(nextX, nextY),\n                                    tmpV3\n                                );\n                                line.push(tmpV3.x, tmpV3.y, tmpV3.z);\n                            }\n\n                            if (needIndividualLineSegments && line.length > 0 && ringLength > 0) {\n                                // Scale down each individual segment to range [0..1] for the whole\n                                // line.\n                                segmentOffsets!.forEach((offs, index) => {\n                                    segmentOffsets![index] = offs / ringLength;\n                                });\n\n                                // Close the line segment as a single line.\n                                lines.push(line);\n                                offsets!.push(segmentOffsets!);\n                            }\n                        }\n\n                        if (!needIndividualLineSegments && line.length > 0) {\n                            lines.push(line);\n                        }\n                    });\n\n                    if (lines.length === 0) {\n                        return;\n                    }\n\n                    this.applyLineTechnique(\n                        lineGeometry,\n                        technique,\n                        techniqueIndex,\n                        lineType,\n                        env.entries,\n                        lines,\n                        context,\n                        undefined,\n                        offsets!\n                    );\n                });\n            }\n        });\n    }\n\n    /**\n     * Creates the geometries that belongs to the [[Tile].\n     *\n     * @returns The [[DecodedTile]]\n     */\n    getDecodedTile(): DecodedTile {\n        this.createGeometries();\n        this.processSimpleLines(this.m_simpleLines);\n        this.processLines(this.m_solidLines);\n\n        const decodedTile: DecodedTile = {\n            techniques: this.m_styleSetEvaluator.decodedTechniques,\n            geometries: this.m_geometries,\n            decodeTime: undefined\n        };\n        if (this.m_textGeometries.length > 0) {\n            decodedTile.textGeometries = this.m_textGeometries;\n        }\n        if (this.m_poiGeometries.length > 0) {\n            decodedTile.poiGeometries = this.m_poiGeometries;\n        }\n        if (this.m_textPathGeometries.length > 0) {\n            decodedTile.textPathGeometries = this.m_textPathGeometries;\n        }\n        if (this.m_pathGeometries.length > 0) {\n            decodedTile.pathGeometries = this.m_pathGeometries;\n        }\n        if (this.m_sources.length !== 0) {\n            decodedTile.copyrightHolderIds = this.m_sources;\n        }\n        decodedTile.maxGeometryHeight = this.m_maxGeometryHeight;\n        return decodedTile;\n    }\n\n    /**\n     * Split the lines array into multiple parts if there are sharp corners. Reject parts that are\n     * too short to display the label text.\n     *\n     * @param {number[][]} lines Array containing the points of the paths.\n     * @param {number} minEstimatedLabelLengthSqr Minimum label size squared.\n     * @param {number} maxCornerAngle Maximum angle between consecutive path segments in radians.\n     * @returns The split and filtered lines array.\n     */\n    protected splitJaggyLines(\n        lines: number[][],\n        minEstimatedLabelLengthSqr: number,\n        maxCornerAngle: number\n    ): number[][] {\n        const validLines: number[][] = [];\n\n        const computeBoundingBoxSizeSqr = (\n            aLine: number[],\n            startIndex: number,\n            endIndex: number\n        ): number => {\n            let minX = Number.MAX_SAFE_INTEGER;\n            let maxX = Number.MIN_SAFE_INTEGER;\n            let minY = Number.MAX_SAFE_INTEGER;\n            let maxY = Number.MIN_SAFE_INTEGER;\n            for (let i = startIndex; i < endIndex; i += 3) {\n                const x = aLine[i];\n                const y = aLine[i + 1];\n                if (x < minX) {\n                    minX = x;\n                }\n                if (x > maxX) {\n                    maxX = x;\n                }\n                if (y < minY) {\n                    minY = y;\n                }\n                if (y > maxY) {\n                    maxY = y;\n                }\n            }\n\n            return (maxX - minX) * (maxX - minX) + (maxY - minY) * (maxY - minY);\n        };\n\n        // Work on a copy of the path.\n        const pathsToCheck = lines.slice();\n\n        while (pathsToCheck.length > 0) {\n            const path = pathsToCheck.pop();\n\n            if (path === undefined || path.length < 6) {\n                continue;\n            }\n\n            let splitIndex = -1;\n\n            for (let i = 0; i < path.length - 3; i += 3) {\n                tempP0.set(path[i], path[i + 1]);\n                tempP1.set(path[i + 3], path[i + 4]);\n                const tangent = tempP1.sub(tempP0).normalize();\n\n                if (i > 0) {\n                    const theta = Math.atan2(\n                        tempPreviousTangent.x * tangent.y - tangent.x * tempPreviousTangent.y,\n                        tangent.dot(tempPreviousTangent)\n                    );\n\n                    if (Math.abs(theta) > maxCornerAngle) {\n                        splitIndex = i;\n                        break;\n                    }\n                }\n                tempPreviousTangent.set(tangent.x, tangent.y);\n            }\n\n            if (splitIndex > 0) {\n                // Estimate if the first part of the path is long enough for the label.\n                const firstPathLengthSqr = computeBoundingBoxSizeSqr(path, 0, splitIndex + 3);\n                // Estimate if the second part of the path is long enough for the label.\n                const secondPathLengthSqr = computeBoundingBoxSizeSqr(\n                    path,\n                    splitIndex,\n                    path.length\n                );\n\n                if (firstPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Split off the valid first path points with a clone of the path.\n                    validLines.push(path.slice(0, splitIndex + 3));\n                }\n\n                if (secondPathLengthSqr > minEstimatedLabelLengthSqr) {\n                    // Now process the second part of the path, it may have to be split\n                    // again.\n                    pathsToCheck.push(path.slice(splitIndex));\n                }\n            } else {\n                // Estimate if the path is long enough for the label, otherwise ignore\n                // it for rendering text. First, compute the bounding box in world\n                // coordinates.\n                const pathLengthSqr = computeBoundingBoxSizeSqr(path, 0, path.length);\n\n                if (pathLengthSqr > minEstimatedLabelLengthSqr) {\n                    validLines.push(path);\n                }\n            }\n        }\n\n        return validLines;\n    }\n\n    private getTextureCoordinateType(technique: Technique): TextureCoordinateType | undefined {\n        // Set TileSpace coordinate type to generate texture coordinates for the displacement map\n        // used in elevation overlay.\n        if (\n            (isFillTechnique(technique) ||\n                isSolidLineTechnique(technique) ||\n                isExtrudedPolygonTechnique(technique)) &&\n            this.m_enableElevationOverlay\n        ) {\n            return TextureCoordinateType.TileSpace;\n        }\n\n        return textureCoordinateType(technique);\n    }\n\n    private getComputeTexCoordsFunc(technique: Technique): TexCoordsFunction | undefined {\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        return texCoordType === TextureCoordinateType.TileSpace\n            ? (tilePos: THREE.Vector2, tileExtents: number) => {\n                  const { x: u, y: v } = new THREE.Vector2()\n                      .copy(tilePos)\n                      .divideScalar(tileExtents);\n                  return { u, v: 1 - v };\n              }\n            : texCoordType === TextureCoordinateType.EquirectangularSpace\n            ? (tilePos: THREE.Vector2, extents: number) => {\n                  const worldPos = tile2world(extents, this.m_decodeInfo, tilePos, false, tmpV2r);\n                  const { x: u, y: v } = normalizedEquirectangularProjection.reprojectPoint(\n                      webMercatorProjection,\n                      new THREE.Vector3(worldPos.x, worldPos.y, 0)\n                  );\n                  return { u, v };\n              }\n            : undefined;\n    }\n\n    private applyLineTechnique(\n        linesGeometry: LinesGeometry[],\n        technique: IndexedTechnique,\n        techniqueIndex: number,\n        lineType = LineType.Complex,\n        featureAttributes: AttributeMap,\n        lines: number[][],\n        context: AttrEvaluationContext,\n        uvs?: number[][],\n        offsets?: number[][]\n    ): void {\n        let lineGroup: LineGroup;\n        const lineGroupGeometries = linesGeometry.find(aLine => aLine.technique === techniqueIndex);\n        const hasNormalsAndUvs = uvs !== undefined;\n        if (lineGroupGeometries === undefined) {\n            lineGroup = new LineGroup(hasNormalsAndUvs, undefined, lineType === LineType.Simple);\n            const aLine: LinesGeometry = {\n                type: lineType === LineType.Complex ? GeometryType.SolidLine : GeometryType.Line,\n                technique: techniqueIndex,\n                lines: lineGroup\n            };\n\n            const techniqueTransient = evaluateTechniqueAttr<boolean>(\n                context,\n                technique.transient,\n                false\n            );\n            if (!techniqueTransient && this.m_gatherFeatureAttributes) {\n                // if this technique is transient, do not save the featureIds with the geometry\n                aLine.objInfos = [featureAttributes];\n                aLine.featureStarts = [0];\n            }\n\n            linesGeometry.push(aLine);\n        } else {\n            lineGroup = lineGroupGeometries.lines;\n\n            if (\n                this.m_gatherFeatureAttributes &&\n                lineGroupGeometries.objInfos &&\n                lineGroupGeometries.featureStarts\n            ) {\n                // Add ID to tag the geometry, also provide the current length of the index\n                // attribute\n                lineGroupGeometries.objInfos.push(featureAttributes);\n                lineGroupGeometries.featureStarts.push(lineGroup.indices.length);\n            }\n        }\n        let i = 0;\n        lines.forEach(aLine => {\n            lineGroup.add(\n                this.m_decodeInfo.center,\n                aLine,\n                this.projection,\n                offsets ? offsets[i] : undefined,\n                uvs ? uvs[i] : undefined\n            );\n            i++;\n        });\n    }\n\n    private applyPolygonTechnique(\n        polygons: Ring[][],\n        technique: Technique,\n        techniqueIndex: number,\n        featureId: number | undefined,\n        context: AttrEvaluationContext,\n        extents: number\n    ): void {\n        const isExtruded = isExtrudedPolygonTechnique(technique);\n\n        const geometryType = isExtruded ? GeometryType.ExtrudedPolygon : GeometryType.Polygon;\n        const meshBuffers = this.findOrCreateMeshBuffers(techniqueIndex, geometryType);\n\n        if (meshBuffers === undefined) {\n            return;\n        }\n\n        const extrudedPolygonTechnique = technique as ExtrudedPolygonTechnique;\n        const fillTechnique = technique as FillTechnique;\n        const boundaryWalls = extrudedPolygonTechnique.boundaryWalls !== false;\n\n        const isFilled = isFillTechnique(technique);\n        const texCoordType = this.getTextureCoordinateType(technique);\n\n        let height = evaluateTechniqueAttr<number>(context, extrudedPolygonTechnique.height);\n\n        let floorHeight = evaluateTechniqueAttr<number>(\n            context,\n            extrudedPolygonTechnique.floorHeight\n        );\n\n        if (height === undefined) {\n            // Get the height values for the footprint and extrusion.\n            const featureHeight = context.env.lookup(\"height\") as number;\n            const styleSetDefaultHeight = evaluateTechniqueAttr<number>(\n                context,\n                // tslint:disable-next-line: deprecation\n                extrudedPolygonTechnique.defaultHeight\n            );\n            height =\n                featureHeight !== undefined\n                    ? featureHeight\n                    : styleSetDefaultHeight !== undefined\n                    ? styleSetDefaultHeight\n                    : 0;\n        }\n\n        if (floorHeight === undefined) {\n            const featureMinHeight = context.env.lookup(\"min_height\") as number;\n            floorHeight = featureMinHeight !== undefined && !isFilled ? featureMinHeight : 0;\n        }\n\n        // Prevent that extruded buildings are completely flat (can introduce errors in normal\n        // computation and extrusion).\n        height = Math.max(floorHeight + ExtrusionFeatureDefs.MIN_BUILDING_HEIGHT, height);\n\n        const styleSetConstantHeight = getOptionValue(\n            extrudedPolygonTechnique.constantHeight,\n            false\n        );\n\n        this.m_decodeInfo.tileBounds.getCenter(tempTileOrigin);\n\n        const {\n            positions,\n            normals,\n            textureCoordinates,\n            colors,\n            extrusionAxis,\n            indices,\n            edgeIndices,\n            groups\n        } = meshBuffers;\n\n        const featureStride = texCoordType !== undefined ? 4 : 2;\n        const vertexStride = featureStride + 2;\n        const isSpherical = this.m_decodeInfo.targetProjection.type === ProjectionType.Spherical;\n\n        const edgeWidth = isExtruded\n            ? extrudedPolygonTechnique.lineWidth || 0.0\n            : isFilled\n            ? fillTechnique.lineWidth || 0.0\n            : 0.0;\n        const hasEdges = edgeWidth > 0.0;\n\n        let color: THREE.Color | undefined;\n        if (isExtrudedPolygonTechnique(technique)) {\n            if (getOptionValue(technique.vertexColors, false)) {\n                let colorValue = evaluateTechniqueAttr<StyleColor>(context, technique.color);\n                if (colorValue === undefined) {\n                    const featureColor = context.env.lookup(\"color\");\n                    if (this.isColorStringValid(featureColor)) {\n                        colorValue = String(featureColor);\n                    }\n                }\n                if (colorValue === undefined) {\n                    colorValue = evaluateTechniqueAttr<number | string>(\n                        context,\n                        technique.defaultColor,\n                        0x000000\n                    );\n                }\n\n                if (colorValue === undefined) {\n                    colorValue = 0x000000;\n                }\n                tmpColor.set(colorValue as any);\n\n                color = tmpColor;\n            }\n        }\n\n        for (const polygon of polygons) {\n            const startIndexCount = indices.length;\n\n            for (let ringIndex = 0; ringIndex < polygon.length; ) {\n                const vertices: number[] = [];\n                const polygonBaseVertex = positions.length / 3;\n\n                const { contour, winding } = polygon[ringIndex++];\n                for (let i = 0; i < contour.length / featureStride; ++i) {\n                    // Invert the Y component to preserve the correct winding without transforming\n                    // from webMercator's local to global space.\n                    for (let j = 0; j < featureStride; ++j) {\n                        vertices.push((j === 1 ? -1 : 1) * contour[i * featureStride + j]);\n                    }\n\n                    // Calculate nextEdge and nextWall.\n                    const nextIdx = (i + 1) % (contour.length / featureStride);\n                    const currX = contour[i * featureStride];\n                    const currY = contour[i * featureStride + 1];\n                    const nextX = contour[nextIdx * featureStride];\n                    const nextY = contour[nextIdx * featureStride + 1];\n                    const insideExtents = !(\n                        (currX <= 0 && nextX <= 0) ||\n                        (currX >= extents && nextX >= extents) ||\n                        (currY <= 0 && nextY <= 0) ||\n                        (currY >= extents && nextY >= extents)\n                    );\n\n                    vertices.push(\n                        insideExtents ? nextIdx : -1,\n                        boundaryWalls || insideExtents ? nextIdx : -1\n                    );\n                }\n\n                // Iterate over the inner rings. The inner rings have the opposite winding\n                // of the outer rings.\n                const holes: number[] = [];\n                while (ringIndex < polygon.length && polygon[ringIndex].winding !== winding) {\n                    const vertexOffset = vertices.length / vertexStride;\n                    holes.push(vertexOffset);\n\n                    const hole = polygon[ringIndex++].contour;\n                    for (let i = 0; i < hole.length / featureStride; ++i) {\n                        // Invert the Y component to preserve the correct winding without\n                        // transforming from webMercator's local to global space.\n                        for (let j = 0; j < featureStride; ++j) {\n                            vertices.push((j === 1 ? -1 : 1) * hole[i * featureStride + j]);\n                        }\n\n                        // Calculate nextEdge and nextWall.\n                        const nextIdx = (i + 1) % (hole.length / featureStride);\n                        const currX = hole[i * featureStride];\n                        const currY = hole[i * featureStride + 1];\n                        const nextX = hole[nextIdx * featureStride];\n                        const nextY = hole[nextIdx * featureStride + 1];\n                        const insideExtents = !(\n                            (currX <= 0 && nextX <= 0) ||\n                            (currX >= extents && nextX >= extents) ||\n                            (currY <= 0 && nextY <= 0) ||\n                            (currY >= extents && nextY >= extents)\n                        );\n\n                        vertices.push(\n                            insideExtents ? vertexOffset + nextIdx : -1,\n                            boundaryWalls || insideExtents ? vertexOffset + nextIdx : -1\n                        );\n                    }\n                }\n\n                try {\n                    // Triangulate the footprint polyline.\n                    const triangles = earcut(vertices, holes, vertexStride);\n                    const originalVertexCount = vertices.length / vertexStride;\n\n                    // Subdivide for spherical projections if needed.\n                    if (isSpherical) {\n                        const geom = new THREE.BufferGeometry();\n\n                        const positionArray = [];\n                        const uvArray = [];\n                        const edgeArray = [];\n                        const wallArray = [];\n\n                        // Transform to global webMercator coordinates to be able to reproject to\n                        // sphere.\n                        for (let i = 0; i < vertices.length; i += vertexStride) {\n                            const worldPos = tile2world(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(vertices[i], vertices[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            positionArray.push(worldPos.x, worldPos.y, 0);\n                            if (texCoordType !== undefined) {\n                                uvArray.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            edgeArray.push(vertices[i + featureStride]);\n                            wallArray.push(vertices[i + featureStride + 1]);\n                        }\n\n                        // Create the temporary geometry used for subdivision.\n                        const posAttr = new THREE.BufferAttribute(\n                            new Float32Array(positionArray),\n                            3\n                        );\n                        geom.setAttribute(\"position\", posAttr);\n                        let uvAttr: THREE.BufferAttribute | undefined;\n                        if (texCoordType !== undefined) {\n                            uvAttr = new THREE.BufferAttribute(new Float32Array(uvArray), 2);\n                            geom.setAttribute(\"uv\", uvAttr);\n                        }\n                        const edgeAttr = new THREE.BufferAttribute(new Float32Array(edgeArray), 1);\n                        geom.setAttribute(\"edge\", edgeAttr);\n                        const wallAttr = new THREE.BufferAttribute(new Float32Array(wallArray), 1);\n                        geom.setAttribute(\"wall\", edgeAttr);\n                        const index = createIndexBufferAttribute(triangles, posAttr.count - 1);\n                        const indexAttr =\n                            index.type === \"uint32\"\n                                ? new THREE.Uint32BufferAttribute(index.buffer, 1)\n                                : new THREE.Uint16BufferAttribute(index.buffer, 1);\n                        geom.setIndex(indexAttr);\n\n                        // Increase tesselation of polygons for certain zoom levels\n                        // to remove mixed LOD cracks\n                        const zoomLevel = this.m_decodeInfo.tileKey.level;\n                        if (zoomLevel >= 3 && zoomLevel < 9) {\n                            const subdivision = Math.pow(2, 9 - zoomLevel);\n                            const { geoBox } = this.m_decodeInfo;\n                            const edgeModifier = new EdgeLengthGeometrySubdivisionModifier(\n                                subdivision,\n                                geoBox,\n                                SubdivisionMode.NoDiagonals,\n                                webMercatorProjection\n                            );\n                            edgeModifier.modify(geom);\n                        }\n\n                        // FIXME(HARP-5700): Subdivision modifier ignores texture coordinates.\n                        const modifier = new SphericalGeometrySubdivisionModifier(\n                            THREE.MathUtils.degToRad(10),\n                            webMercatorProjection\n                        );\n                        modifier.modify(geom);\n\n                        // Reassemble the vertex buffer, transforming the subdivided global\n                        // webMercator points back to local space.\n                        vertices.length = 0;\n                        triangles.length = 0;\n                        for (let i = 0; i < posAttr.array.length; i += 3) {\n                            const tilePos = world2tile(\n                                extents,\n                                this.m_decodeInfo,\n                                tmpV2.set(posAttr.array[i], posAttr.array[i + 1]),\n                                true,\n                                tmpV2r\n                            );\n                            vertices.push(tilePos.x, tilePos.y);\n                            if (texCoordType !== undefined) {\n                                vertices.push(uvAttr!.array[(i / 3) * 2]);\n                                vertices.push(uvAttr!.array[(i / 3) * 2 + 1]);\n                            }\n                            vertices.push(edgeAttr.array[i / 3]);\n                            vertices.push(wallAttr.array[i / 3]);\n                        }\n\n                        const geomIndex = geom.getIndex();\n                        if (geomIndex !== null) {\n                            triangles.push(...(geomIndex.array as Float32Array));\n                        }\n                    }\n\n                    // Add the footprint/roof vertices to the position buffer.\n                    tempVertNormal.set(0, 0, 1);\n\n                    // Assemble the vertex buffer.\n                    for (let i = 0; i < vertices.length; i += vertexStride) {\n                        webMercatorTile2TargetTile(\n                            extents,\n                            this.m_decodeInfo,\n                            tmpV2.set(vertices[i], vertices[i + 1]),\n                            tmpV3,\n                            true\n                        );\n\n                        let scaleFactor = 1.0;\n                        if (isExtruded && styleSetConstantHeight !== true) {\n                            tempVertOrigin.set(\n                                tempTileOrigin.x + tmpV3.x,\n                                tempTileOrigin.y + tmpV3.y,\n                                tempTileOrigin.z + tmpV3.z\n                            );\n                            scaleFactor = this.m_decodeInfo.targetProjection.getScaleFactor(\n                                tempVertOrigin\n                            );\n                        }\n                        this.m_maxGeometryHeight = Math.max(\n                            this.m_maxGeometryHeight,\n                            scaleFactor * height\n                        );\n\n                        if (isSpherical) {\n                            tempVertNormal\n                                .set(tmpV3.x, tmpV3.y, tmpV3.z)\n                                .add(this.center)\n                                .normalize();\n                        }\n\n                        tempFootDisp.copy(tempVertNormal).multiplyScalar(floorHeight * scaleFactor);\n                        tempRoofDisp.copy(tempVertNormal).multiplyScalar(height * scaleFactor);\n                        positions.push(\n                            tmpV3.x + tempFootDisp.x,\n                            tmpV3.y + tempFootDisp.y,\n                            tmpV3.z + tempFootDisp.z\n                        );\n                        if (texCoordType !== undefined) {\n                            textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                        }\n                        if (this.m_enableElevationOverlay) {\n                            normals.push(...tempVertNormal.toArray());\n                        }\n                        if (isExtruded) {\n                            positions.push(\n                                tmpV3.x + tempRoofDisp.x,\n                                tmpV3.y + tempRoofDisp.y,\n                                tmpV3.z + tempRoofDisp.z\n                            );\n                            extrusionAxis.push(\n                                0.0,\n                                0.0,\n                                0.0,\n                                0.0,\n                                tempRoofDisp.x - tempFootDisp.x,\n                                tempRoofDisp.y - tempFootDisp.y,\n                                tempRoofDisp.z - tempFootDisp.z,\n                                1.0\n                            );\n                            if (texCoordType !== undefined) {\n                                textureCoordinates.push(vertices[i + 2], vertices[i + 3]);\n                            }\n                            if (this.m_enableElevationOverlay) {\n                                normals.push(...tempVertNormal.toArray());\n                            }\n                            if (color !== undefined) {\n                                colors.push(color.r, color.g, color.b, color.r, color.g, color.b);\n                            }\n                        }\n                    }\n\n                    // Add the footprint/roof indices to the index buffer.\n                    for (let i = 0; i < triangles.length; i += 3) {\n                        if (isExtruded) {\n                            // When extruding we duplicate the vertices, so that all even vertices\n                            // belong to the bottom and all odd vertices belong to the top.\n                            const i0 = polygonBaseVertex + triangles[i + 0] * 2 + 1;\n                            const i1 = polygonBaseVertex + triangles[i + 1] * 2 + 1;\n                            const i2 = polygonBaseVertex + triangles[i + 2] * 2 + 1;\n                            indices.push(i0, i1, i2);\n                        } else {\n                            const i0 = polygonBaseVertex + triangles[i + 0];\n                            const i1 = polygonBaseVertex + triangles[i + 1];\n                            const i2 = polygonBaseVertex + triangles[i + 2];\n                            indices.push(i0, i1, i2);\n                        }\n                    }\n\n                    // Assemble the index buffer for edges (follow vertices as linked list).\n                    if (hasEdges) {\n                        this.addEdges(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            positions,\n                            vertices,\n                            edgeIndices,\n                            isExtruded,\n                            extrudedPolygonTechnique.footprint,\n                            extrudedPolygonTechnique.maxSlope\n                        );\n                    }\n                    if (isExtruded) {\n                        this.addWalls(\n                            polygonBaseVertex,\n                            originalVertexCount,\n                            vertexStride,\n                            featureStride,\n                            vertices,\n                            indices\n                        );\n                    }\n                } catch (err) {\n                    logger.error(`cannot triangulate geometry`, err);\n                }\n            }\n\n            if (this.m_gatherFeatureAttributes) {\n                meshBuffers.objInfos.push(context.env.entries);\n                meshBuffers.featureStarts.push(startIndexCount);\n            }\n\n            const count = indices.length - startIndexCount;\n            if (count > 0) {\n                groups.push({\n                    start: startIndexCount,\n                    count,\n                    technique: techniqueIndex\n                });\n            }\n        }\n    }\n\n    private createGeometries() {\n        this.m_meshBuffers.forEach((meshBuffers, techniqueIdx) => {\n            if (meshBuffers.positions.length === 0) {\n                return;\n            } // nothing to do\n\n            if (\n                !this.m_styleSetEvaluator.techniques ||\n                this.m_styleSetEvaluator.techniques.length <= techniqueIdx\n            ) {\n                throw new Error(\"Invalid technique index\");\n            }\n\n            const technique = this.m_styleSetEvaluator.techniques[techniqueIdx];\n            if (technique === undefined) {\n                return;\n            }\n\n            const positionElements = new Float32Array(meshBuffers.positions);\n\n            if (meshBuffers.texts.length > 0 && isTextTechnique(technique)) {\n                this.m_textGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.texts.length > 0 && isPoiTechnique(technique)) {\n                this.m_poiGeometries.push({\n                    positions: {\n                        name: \"position\",\n                        type: \"float\",\n                        buffer: positionElements.buffer as ArrayBuffer,\n                        itemCount: 3\n                    },\n                    texts: meshBuffers.texts,\n                    technique: techniqueIdx,\n                    stringCatalog: meshBuffers.stringCatalog,\n                    imageTextures: meshBuffers.imageTextures,\n                    objInfos: meshBuffers.objInfos\n                });\n                return;\n            }\n\n            if (meshBuffers.groups.length === 0) {\n                // create a default group containing all the vertices in the position attribute.\n\n                meshBuffers.groups.push({\n                    start: 0,\n                    count: positionElements.length / 3,\n                    technique: techniqueIdx\n                });\n            }\n\n            const vertexAttributes: BufferAttribute[] = [\n                {\n                    name: \"position\",\n                    buffer: positionElements.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                }\n            ];\n\n            const geometry: Geometry = {\n                type: meshBuffers.type,\n                vertexAttributes,\n                groups: meshBuffers.groups\n            };\n\n            if (meshBuffers.normals.length > 0) {\n                const normals = new Float32Array(meshBuffers.normals);\n                assert(\n                    normals.length === positionElements.length,\n                    \"length of normals buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"normal\",\n                    buffer: normals.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.colors.length > 0) {\n                const colors = new Float32Array(meshBuffers.colors);\n                assert(\n                    colors.length === positionElements.length,\n                    \"length of colors buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"color\",\n                    buffer: colors.buffer,\n                    itemCount: 3,\n                    type: \"float\"\n                });\n            }\n\n            const positionCount = meshBuffers.positions.length / 3;\n\n            if (meshBuffers.textureCoordinates.length > 0) {\n                const texCoordCount = meshBuffers.textureCoordinates.length / 2;\n                assert(\n                    texCoordCount === positionCount,\n                    \"length of textureCoordinates buffer is different than the length of the\" +\n                        \"position buffer\"\n                );\n\n                const textureCoordinates = new Float32Array(meshBuffers.textureCoordinates);\n                vertexAttributes.push({\n                    name: \"uv\",\n                    buffer: textureCoordinates.buffer as ArrayBuffer,\n                    itemCount: 2,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.extrusionAxis.length > 0) {\n                const extrusionAxis = new Float32Array(meshBuffers.extrusionAxis);\n                assert(\n                    extrusionAxis.length / 4 === positionElements.length / 3,\n                    \"length of extrusionAxis buffer is different than the length of the \" +\n                        \"position buffer\"\n                );\n\n                vertexAttributes.push({\n                    name: \"extrusionAxis\",\n                    buffer: extrusionAxis.buffer as ArrayBuffer,\n                    itemCount: 4,\n                    type: \"float\"\n                });\n            }\n\n            if (meshBuffers.indices.length > 0) {\n                geometry.index = createIndexBufferAttribute(meshBuffers.indices, positionCount - 1);\n            }\n\n            if (meshBuffers.edgeIndices.length > 0) {\n                geometry.edgeIndex = createIndexBufferAttribute(\n                    meshBuffers.edgeIndices,\n                    positionCount - 1,\n                    \"edgeIndex\"\n                );\n            }\n\n            geometry.featureStarts = meshBuffers.featureStarts;\n            geometry.objInfos = meshBuffers.objInfos;\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const index = createIndexBufferAttribute(\n                indices,\n                vertices.length / linesGeometry.lines.stride - 1\n            );\n            const attr: InterleavedBufferAttribute = {\n                type: \"float\",\n                stride: linesGeometry.lines.stride,\n                buffer,\n                attributes: linesGeometry.lines.vertexAttributes\n            };\n            const geometry: Geometry = {\n                type: GeometryType.SolidLine,\n                index,\n                interleavedVertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                vertexAttributes: [],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private processSimpleLines(linesArray: LinesGeometry[]) {\n        linesArray.forEach(linesGeometry => {\n            const { vertices, indices } = linesGeometry.lines;\n            const technique = linesGeometry.technique;\n            const buffer = new Float32Array(vertices).buffer as ArrayBuffer;\n            const attr: BufferAttribute = {\n                buffer,\n                itemCount: 3,\n                type: \"float\",\n                name: \"position\"\n            };\n            const geometry: Geometry = {\n                type: GeometryType.Line,\n                index: createIndexBufferAttribute(indices, vertices.length / attr.itemCount - 1),\n                vertexAttributes: [attr],\n                groups: [{ start: 0, count: indices.length, technique }],\n                featureStarts: linesGeometry.featureStarts,\n                objInfos: linesGeometry.objInfos\n            };\n\n            this.m_geometries.push(geometry);\n        });\n    }\n\n    private findOrCreateMeshBuffers(index: number, type: GeometryType): MeshBuffers | undefined {\n        let buffers = this.m_meshBuffers.get(index);\n\n        if (buffers !== undefined) {\n            if (buffers.type !== type) {\n                logger.error(`MeshBuffer has been created with wrong type \"${GeometryType[type]}\"\n                instead of \"${GeometryType[buffers.type]}\"`);\n                return undefined;\n            }\n            return buffers;\n        }\n        buffers = new MeshBuffers(type);\n        this.m_meshBuffers.set(index, buffers);\n        return buffers;\n    }\n\n    private processFeatureCommon(env: Env) {\n        const source = env.lookup(\"source\");\n        if (typeof source === \"string\" && source !== \"\") {\n            if (!this.m_sources.includes(source)) {\n                this.m_sources.push(source);\n            }\n        }\n    }\n\n    private isColorStringValid(color: Value | undefined): color is string {\n        return typeof color === \"string\" && color.length > 0;\n    }\n\n    private addEdges(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        positions: number[],\n        vertices: number[],\n        indices: number[],\n        isExtruded: boolean,\n        hasFootprint?: boolean,\n        maxSlope?: number\n    ) {\n        const tmpEdgeA = new THREE.Vector3();\n        const tmpEdgeB = new THREE.Vector3();\n        let firstRingVertex: number | undefined;\n        let prevRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    if (!isExtruded) {\n                        indices.push(\n                            featureBaseVertex + currRingVertex,\n                            featureBaseVertex + nextRingVertex\n                        );\n                    } else {\n                        if (hasFootprint === true) {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + nextRingVertex * 2\n                            );\n                        }\n                        indices.push(\n                            featureBaseVertex + currRingVertex * 2 + 1,\n                            featureBaseVertex + nextRingVertex * 2 + 1\n                        );\n\n                        if (maxSlope !== undefined) {\n                            if (prevRingVertex !== undefined) {\n                                const prevPos = (featureBaseVertex + prevRingVertex * 2) * 3;\n                                const currPos = (featureBaseVertex + currRingVertex * 2) * 3;\n                                const nextPos = (featureBaseVertex + nextRingVertex * 2) * 3;\n                                tmpEdgeA\n                                    .set(\n                                        positions[currPos] - positions[prevPos],\n                                        positions[currPos + 1] - positions[prevPos + 1],\n                                        positions[currPos + 2] - positions[prevPos + 2]\n                                    )\n                                    .normalize();\n                                tmpEdgeB\n                                    .set(\n                                        positions[nextPos] - positions[currPos],\n                                        positions[nextPos + 1] - positions[currPos + 1],\n                                        positions[nextPos + 2] - positions[currPos + 2]\n                                    )\n                                    .normalize();\n                                if (tmpEdgeA.dot(tmpEdgeB) <= maxSlope) {\n                                    indices.push(\n                                        featureBaseVertex + currRingVertex * 2,\n                                        featureBaseVertex + currRingVertex * 2 + 1\n                                    );\n                                }\n                            }\n                        } else {\n                            indices.push(\n                                featureBaseVertex + currRingVertex * 2,\n                                featureBaseVertex + currRingVertex * 2 + 1\n                            );\n                        }\n                    }\n                    prevRingVertex = currRingVertex;\n                    currRingVertex = nextRingVertex;\n                }\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n            prevRingVertex = undefined;\n        }\n    }\n\n    private addWalls(\n        featureBaseVertex: number,\n        featureVertexCount: number,\n        vertexStride: number,\n        featureStride: number,\n        vertices: number[],\n        indices: number[]\n    ) {\n        let firstRingVertex: number | undefined;\n        let currRingVertex = 0;\n        let maxRingVertex = 0;\n\n        while (currRingVertex < featureVertexCount) {\n            while (currRingVertex !== firstRingVertex) {\n                if (firstRingVertex === undefined) {\n                    firstRingVertex = currRingVertex;\n                }\n                if (currRingVertex < featureVertexCount) {\n                    maxRingVertex = Math.max(maxRingVertex, currRingVertex);\n                }\n\n                const nextRingVertex = vertices[currRingVertex * vertexStride + featureStride + 1];\n                if (nextRingVertex < 0) {\n                    break;\n                } else {\n                    indices.push(\n                        featureBaseVertex + currRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2 + 1,\n                        featureBaseVertex + nextRingVertex * 2,\n                        featureBaseVertex + currRingVertex * 2\n                    );\n                }\n                currRingVertex = nextRingVertex;\n            }\n            currRingVertex = maxRingVertex + 1;\n            firstRingVertex = undefined;\n        }\n    }\n\n    private findRelativePositionInLine(p: THREE.Vector3, line: number[]): number {\n        let lineDist = Infinity;\n        let lineOffset = 0;\n        for (let i = 0; i < line.length; i += 4) {\n            // Find the closest point C in segment AB to point P.\n            tmpLine.set(\n                tmpPointA.set(line[i], line[i + 1], line[i + 2]),\n                tmpPointB.set(line[i + 4], line[i + 5], line[i + 6])\n            );\n            tmpLine.closestPointToPoint(p, true, tmpPointC);\n\n            // If P is in AB (or really close), save A as anchor point and C (to estimate distance\n            // from segment origin).\n            const dist = tmpPointC.distanceTo(p);\n            if (dist < lineDist) {\n                tmpPointD.copy(tmpPointC);\n                tmpPointE.copy(tmpPointA);\n                lineDist = dist;\n                lineOffset = line[i + 3];\n            }\n        }\n        // Return the relative position of P inside the line.\n        return lineOffset + tmpPointD.distanceTo(tmpPointE);\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport * as THREE from \"three\";\n\n// Preallocate temp variables used during line generation.\nconst tmpV = new THREE.Vector3();\nconst tmpNormal = new THREE.Vector3();\nconst tmpTangent0 = new THREE.Vector3();\nconst tmpTangent1 = new THREE.Vector3();\nconst tmpBitangent = new THREE.Vector3();\nconst SEGMENT_OFFSET = 0.1;\n\n/**\n * Describes vertex attribute parameters of interleaved buffer.\n */\ninterface VertexAttributeDescriptor {\n    name: string;\n    itemSize: number;\n    offset: number;\n}\n\ninterface VertexDescriptor {\n    attributes: VertexAttributeDescriptor[];\n    stride: number;\n}\n\n/**\n * Declares all the vertex attributes used for rendering a line using the [[SolidLineMaterial]].\n */\n\n/** Base line vertex attributes. */\nconst LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        // The \"extrusionCoord\" is a vec4 which represents:\n        // xy: Extrusion coordinates\n        // sign(xy): Extrusion direction\n        // z: Line length\n        { name: \"extrusionCoord\", itemSize: 3, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 3 },\n        { name: \"tangent\", itemSize: 3, offset: 6 },\n        { name: \"bitangent\", itemSize: 4, offset: 9 }\n    ],\n    stride: 13\n};\n\n/** Optional normal and uv coordinates. */\nconst NORMAL_UV_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"uv\", itemSize: 2, offset: LINE_VERTEX_ATTRIBUTES.stride },\n        { name: \"normal\", itemSize: 3, offset: LINE_VERTEX_ATTRIBUTES.stride + 2 }\n    ],\n    stride: 5\n};\n\n/** Base line vertex attributes plus normals and uv coordinates. */\nconst LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [...LINE_VERTEX_ATTRIBUTES.attributes, ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes],\n    stride: LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Declares all the vertex attributes used for rendering a line using the\n * [[HighPrecisionLineMaterial]].\n */\nconst HP_LINE_VERTEX_ATTRIBUTES: VertexDescriptor = {\n    attributes: [\n        { name: \"extrusionCoord\", itemSize: 2, offset: 0 },\n        { name: \"position\", itemSize: 3, offset: 2 },\n        { name: \"positionLow\", itemSize: 3, offset: 5 },\n        { name: \"tangent\", itemSize: 3, offset: 8 },\n        { name: \"bitangent\", itemSize: 4, offset: 11 }\n    ],\n    stride: 15\n};\n\n/** High precision line vertex attributes plus normals and uv coordinates. */\nconst HP_LINE_VERTEX_ATTRIBUTES_NUV: VertexDescriptor = {\n    attributes: [\n        ...HP_LINE_VERTEX_ATTRIBUTES.attributes,\n        ...NORMAL_UV_VERTEX_ATTRIBUTES.attributes\n    ],\n    stride: HP_LINE_VERTEX_ATTRIBUTES.stride + NORMAL_UV_VERTEX_ATTRIBUTES.stride\n};\n\n/**\n * Class that holds the vertex and index attributes for a [[Lines]] object.\n */\nexport class LineGeometry {\n    vertices: number[] = [];\n    vertexColors: number[] = [];\n    indices: number[] = [];\n}\n\nfunction getVertexDescriptor(hasNormalsAndUvs: boolean, highPrecision: boolean): VertexDescriptor {\n    if (highPrecision) {\n        return hasNormalsAndUvs ? HP_LINE_VERTEX_ATTRIBUTES_NUV : HP_LINE_VERTEX_ATTRIBUTES;\n    } else {\n        return hasNormalsAndUvs ? LINE_VERTEX_ATTRIBUTES_NUV : LINE_VERTEX_ATTRIBUTES;\n    }\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param center Center of the polyline.\n * @param polyline Array of `numbers` describing a polyline.\n * @param offsets Array of `numbers` representing line segment offsets.\n * @param uvs Array of `numbers` representing texture coordinates.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n * @param highPrecision If `true` will create high-precision vertex information.\n */\nexport function createLineGeometry(\n    center: THREE.Vector3,\n    polyline: ArrayLike<number>,\n    projection: Projection,\n    offsets?: ArrayLike<number>,\n    uvs?: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry(),\n    highPrecision: boolean = false\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const stride = getVertexDescriptor(uvs !== undefined, highPrecision).stride;\n\n    const pointCount = polyline.length / 3;\n    const segments = new Array<number>(pointCount);\n    const tangents = new Array<number>(polyline.length - 3);\n    const baseVertex = geometry.vertices.length / stride;\n\n    const hasSegmentOffsets = offsets !== undefined && offsets.length > 0;\n    const hasTexCoords = uvs !== undefined && uvs.length > 0;\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    assert(!hasSegmentOffsets || offsets!.length === pointCount);\n    assert(!hasTexCoords || uvs!.length / 2 === pointCount);\n    assert(!vertexColors || colors!.length === polyline.length);\n\n    // Compute segments and tangents.\n    let sum = SEGMENT_OFFSET;\n    segments[0] = sum;\n    for (let i = 0; i < pointCount - 1; ++i) {\n        let sqrLength = 0;\n        for (let j = 0; j < 3; ++j) {\n            const d = polyline[(i + 1) * 3 + j] - polyline[i * 3 + j];\n            tangents[i * 3 + j] = d;\n            sqrLength += d * d;\n        }\n        const len = Math.sqrt(sqrLength);\n        sum = sum + len;\n        segments[i + 1] = sum;\n    }\n\n    const lineCoverage = hasSegmentOffsets\n        ? Math.abs(offsets![offsets!.length - 1] - offsets![0])\n        : 1.0;\n    const lineLength = segments[segments.length - 1] / lineCoverage;\n\n    // Override the segments if offsets are explicitly provided.\n    if (hasSegmentOffsets) {\n        for (let i = 0; i < pointCount; ++i) {\n            segments[i] = offsets![i] * lineLength + SEGMENT_OFFSET;\n        }\n    }\n\n    // Check if we're working with a closed line.\n    let isClosed = true;\n    for (let j = 0; j < 3; ++j) {\n        isClosed = isClosed && polyline[j] === polyline[polyline.length - 3 + j];\n    }\n\n    const tmpVertices: number[] = [];\n\n    const addVertexPair = (\n        i: number,\n        T1: number,\n        T2: number,\n        segment: number,\n        extrusionCoord: number\n    ) => {\n        tmpVertices.length = 0;\n\n        // Store the segment and extrusionCoord attributes.\n        geometry.vertices.push(segment, extrusionCoord * -1, lineLength);\n        tmpVertices.push(segment, extrusionCoord * 1, lineLength);\n\n        // Store the position attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            if (!highPrecision) {\n                geometry.vertices.push(polyline[i * 3 + j]);\n                tmpVertices.push(polyline[i * 3 + j]);\n            } else {\n                const highComp = Math.fround(polyline[i * 3 + j]);\n                const lowComp = polyline[i * 3 + j] - highComp;\n                geometry.vertices.push(highComp, lowComp);\n                tmpVertices.push(highComp, lowComp);\n            }\n            tmpNormal.setComponent(j, polyline[i * 3 + j]);\n        }\n\n        // Store the bitangent attribute (component-dependant).\n        for (let j = 0; j < 3; ++j) {\n            tmpTangent0.setComponent(j, tangents[T1 + j]);\n            tmpTangent1.setComponent(j, tangents[T2 + j]);\n        }\n        tmpTangent0.normalize();\n        geometry.vertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpVertices.push(tmpTangent0.x, tmpTangent0.y, tmpTangent0.z);\n        tmpNormal.add(center); // tmpNormal contains world position\n        projection.surfaceNormal(tmpNormal, tmpNormal);\n        const angle = computeBitangent(\n            tmpNormal,\n            tmpTangent0,\n            tmpTangent1.normalize(),\n            tmpBitangent\n        );\n        geometry.vertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n        tmpVertices.push(tmpBitangent.x, tmpBitangent.y, tmpBitangent.z, angle);\n\n        if (hasTexCoords) {\n            // uvs\n            geometry.vertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            tmpVertices.push(uvs![i * 2], uvs![i * 2 + 1]);\n            // normals\n            geometry.vertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n            tmpVertices.push(tmpNormal.x, tmpNormal.y, tmpNormal.z);\n        }\n\n        geometry.vertices.push(...tmpVertices);\n\n        // Add vertex colors (if supplied).\n        if (vertexColors) {\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n            geometry.vertexColors.push(colors![i * 3], colors![i * 3 + 1], colors![i * 3 + 2]);\n        }\n    };\n\n    for (let i = 0; i < pointCount; ++i) {\n        // Retrieve the per-point tangents.\n        const T1 = isClosed && i === 0 ? tangents.length - 3 : Math.max(0, i - 1) * 3;\n        const T2 = isClosed && i === pointCount - 1 ? 0 : Math.min(i * 3, tangents.length - 3);\n\n        // Process v0 and v1.\n        if (i > 0) {\n            addVertexPair(i, T1, T2, segments[i - 1], segments[i]);\n        }\n\n        // Process v2 and v3.\n        if (i + 1 < pointCount) {\n            addVertexPair(\n                i,\n                T1,\n                T2,\n                segments[Math.min(i, segments.length - 1)] * -1,\n                segments[Math.min(i + 1, segments.length - 1)]\n            );\n        }\n    }\n\n    // Store the triangle indices in the final index buffer.\n    for (let i = 0; i < pointCount - 1; ++i) {\n        const base = baseVertex + i * 4;\n        geometry.indices.push(base, base + 1, base + 2, base + 2, base + 1, base + 3);\n    }\n\n    return geometry;\n}\n\n/**\n * Creates a [[LineGeometry]] object out of a polyline.\n *\n * @param polyline Array of `numbers` describing a polyline.\n * @param colors Array of `numbers` describing a polyline's colors.\n * @param geometry [[LineGeometry]] object used to store the vertex and index attributes.\n */\nexport function createSimpleLineGeometry(\n    polyline: ArrayLike<number>,\n    colors?: ArrayLike<number>,\n    geometry = new LineGeometry()\n): LineGeometry {\n    if (polyline.length === 0) {\n        return geometry;\n    }\n\n    const pointCount = polyline.length / 3;\n    let index = geometry.vertices.length / 3;\n\n    const vertexColors = colors !== undefined && colors.length && polyline.length;\n\n    for (let i = 0; i < pointCount; ++i, index++) {\n        if (i > 0) {\n            geometry.indices.push(index);\n        }\n        if (i < pointCount - 1) {\n            geometry.indices.push(index);\n        }\n        for (let j = 0; j < 3; ++j) {\n            geometry.vertices.push(polyline[i * 3 + j]);\n            if (vertexColors) {\n                geometry.vertexColors.push(colors![i * 3 + j]);\n            }\n        }\n    }\n\n    return geometry;\n}\n\n/**\n * Class used to render groups (or batches) of width-variable lines (in the same tile).\n */\nexport class LineGroup {\n    /**\n     * Adds all the attribute data needed to a [[BufferGeometry]] object for rendering `Lines`.\n     *\n     * @param vertices Array of vertex attributes.\n     * @param colors Array of vertex colors.\n     * @param indices Array of vertex indices.\n     * @param geometry [[BufferGeometry]] object which will store all the `Lines` attribute data.\n     * @param hasNormalsAnUvs Whether vertices have normal and uv coordinates as attributes.\n     * @param highPrecision If `true` will create high-precision vertex information.\n     * @param isSimple `true` to create simple (nonsolid, nonextruded) lines. Defaults to `false`.\n     */\n    static createGeometry(\n        vertices: ArrayLike<number>,\n        colors: ArrayLike<number>,\n        indices: ArrayLike<number>,\n        geometry: THREE.BufferGeometry,\n        hasNormalsAndUvs: boolean = false,\n        highPrecision = false,\n        isSimple = false\n    ): THREE.BufferGeometry {\n        if (isSimple) {\n            geometry.setAttribute(\n                \"position\",\n                new THREE.BufferAttribute(new Float32Array(vertices), 3)\n            );\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n            return geometry;\n        } else {\n            const vertexDescriptor = getVertexDescriptor(hasNormalsAndUvs, highPrecision);\n\n            const buffer = new THREE.InterleavedBuffer(\n                new Float32Array(vertices),\n                vertexDescriptor.stride\n            );\n            vertexDescriptor.attributes.forEach(descr => {\n                const attribute = new THREE.InterleavedBufferAttribute(\n                    buffer,\n                    descr.itemSize,\n                    descr.offset,\n                    false\n                );\n                geometry.setAttribute(descr.name, attribute);\n            });\n            if (colors.length === vertices.length) {\n                geometry.setAttribute(\n                    \"color\",\n                    new THREE.BufferAttribute(new Float32Array(colors), 3)\n                );\n            }\n\n            geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices), 1));\n\n            return geometry;\n        }\n    }\n\n    private readonly m_geometry: LineGeometry;\n\n    constructor(\n        readonly hasNormalsAndUvs: boolean = false,\n        readonly highPrecision: boolean = false,\n        readonly isSimple: boolean = false\n    ) {\n        this.m_geometry = new LineGeometry();\n    }\n\n    /**\n     * Clears the list of line strips.\n     */\n    clear() {\n        this.m_geometry.vertices = [];\n        this.m_geometry.vertexColors = [];\n        this.m_geometry.indices = [];\n    }\n\n    /**\n     * Add the given points to this line group.\n     *\n     * @param center World center of the provided points.\n     * @param points Sequence of (x,y,z) coordinates.\n     * @param offsets Sequence of line segment offsets.\n     * @param uvs Sequence of (u,v) texture coordinates.\n     * @param colors Sequence of (r,g,b) color components.\n     */\n    add(\n        center: THREE.Vector3,\n        points: ArrayLike<number>,\n        projection: Projection,\n        offsets?: ArrayLike<number>,\n        uvs?: ArrayLike<number>,\n        colors?: ArrayLike<number>\n    ): this {\n        if (!this.isSimple) {\n            assert(!this.hasNormalsAndUvs || uvs !== undefined);\n            createLineGeometry(\n                center,\n                points,\n                projection,\n                offsets,\n                uvs,\n                colors,\n                this.m_geometry,\n                this.highPrecision\n            );\n        } else {\n            createSimpleLineGeometry(points, colors, this.m_geometry);\n        }\n        return this;\n    }\n\n    /**\n     * Returns the list of vertices.\n     */\n    get vertices(): number[] {\n        return this.m_geometry.vertices;\n    }\n\n    /**\n     * Returns the list of vertex colors.\n     */\n    get vertexColors(): number[] {\n        return this.m_geometry.vertexColors;\n    }\n\n    /**\n     * Returns the list of indices.\n     */\n    get indices(): number[] {\n        return this.m_geometry.indices;\n    }\n\n    /**\n     * Returns the list of [[VertexAttributeDescriptor]]s.\n     */\n    get vertexAttributes(): VertexAttributeDescriptor[] {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).attributes;\n    }\n\n    /**\n     * Returns the vertex attribute stride.\n     */\n    get stride(): number {\n        return getVertexDescriptor(this.hasNormalsAndUvs, this.highPrecision).stride;\n    }\n\n    /**\n     * Creates a three.js geometry.\n     */\n    createGeometry(geometry?: THREE.BufferGeometry): THREE.BufferGeometry {\n        if (geometry === undefined) {\n            geometry = new THREE.BufferGeometry();\n        }\n        return LineGroup.createGeometry(\n            this.m_geometry.vertices,\n            this.m_geometry.vertexColors,\n            this.m_geometry.indices,\n            geometry,\n            this.hasNormalsAndUvs,\n            this.highPrecision\n        );\n    }\n}\n\nfunction computeBitangent(\n    n: THREE.Vector3,\n    t0: THREE.Vector3,\n    t1: THREE.Vector3,\n    bt: THREE.Vector3\n): number {\n    let angle = 0;\n    if (!t0.equals(t1)) {\n        angle = Math.acos(t0.dot(t1)) * Math.sign(n.dot(tmpV.copy(t0).cross(t1)));\n        if (Number.isNaN(angle)) {\n            angle = 0;\n        }\n    }\n    bt.copy(t0)\n        .add(t1)\n        .normalize()\n        .cross(n)\n        .normalize();\n    return angle;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport * as THREE from \"three\";\n\nconst UNIT_Z = new THREE.Vector3(0, 0, 1);\nconst POINTS = [0, 1, 2, 1, 3, 2];\nconst BEVEL_POINTS = [0, 1, 3, 3, 1, 2, 0, 3, 4, 5, 4, 3];\n\nconst SECTORS_IN_CIRCLE = 8;\nconst STEP = Math.PI / SECTORS_IN_CIRCLE;\n\n/**\n * Adds a half-circle geometry to original line\n *\n * @param x The line end X (used as circle center X)\n * @param y The line end Y (used as circle center Y)\n * @param lineAngle The cap incline angle\n * @param radius The cap (circle) radius\n * @param vertices The input vertex buffer (cap vertices are added there)\n * @param indices The input index buffer (cap indices are is added there)\n */\nfunction addCircle(\n    x: number,\n    y: number,\n    lineAngle: number,\n    radius: number,\n    vertices: number[],\n    indices: number[]\n) {\n    const baseVertex = vertices.length / 3;\n\n    // Add cap center to vertices directly (it doesn't need rotation)\n    vertices.push(x, y, 0);\n\n    for (let i = 0; i < SECTORS_IN_CIRCLE + 1; ++i) {\n        const angle = STEP * i + Math.PI / 2 + lineAngle; // Start angle is -90deg\n        vertices.push(x + radius * Math.cos(angle), y + radius * Math.sin(angle), 0);\n\n        indices.push(\n            baseVertex,\n            baseVertex + i + 1,\n            baseVertex + ((i + 1) % (SECTORS_IN_CIRCLE + 1)) + 1\n        );\n    }\n}\n\n/**\n * Returns the number of points in circle used for caps.\n *\n * @param lineWidth Width of line.\n */\n// tslint:disable-next-line:no-unused-variable\nexport function numCirclePoints(lineWidth: number): number {\n    return SECTORS_IN_CIRCLE + 1;\n}\n\n/**\n * Create a triangle mesh from the given polyline.\n *\n * @param points Sequence of (x,y,z) coordinates.\n * @param width The width of the extruded line.\n * @param vertices The output vertex buffer.\n * @param indices The output index buffer.\n * @param startWithCircle `true` if the line should start will a circle.\n * @param endWithCircle `true` if the line should end with a circle.\n */\nexport function triangulateLine(\n    points: ArrayLike<number>,\n    width: number,\n    vertices: number[],\n    indices: number[],\n    startWithCircle = true,\n    endWithCircle = startWithCircle\n) {\n    if (points.length < 3) {\n        return;\n    }\n\n    // This vector is used for computing cap angle\n    const angleVec = new THREE.Vector2();\n\n    if (startWithCircle) {\n        // Define lineAngle as (direction - origin) vector angle to X axis\n        const lineAngle =\n            points.length !== 3\n                ? angleVec.set(points[3] - points[0], points[4] - points[1]).angle()\n                : 0;\n\n        addCircle(points[0], points[1], lineAngle, width, vertices, indices);\n    }\n\n    const baseVertex = vertices.length / 3;\n\n    // bt = Bitangent (i.e. extrusion vector)\n    const prevBt = new THREE.Vector3();\n    const p = new THREE.Vector3(); // current point\n    const n = new THREE.Vector3(); // next point\n    const bt = new THREE.Vector3();\n    const averageBt = new THREE.Vector3();\n    const p0 = new THREE.Vector3();\n    const p1 = new THREE.Vector3();\n    const p2 = new THREE.Vector3();\n    const p3 = new THREE.Vector3();\n\n    const N = points.length / 3;\n\n    let vertexOffset = 0;\n    for (let i = 0; i < N; ++i) {\n        let useBevel = false;\n        p.set(points[i * 3], points[i * 3 + 1], points[i * 3 + 2]);\n\n        if (i + 1 < N) {\n            n.set(points[(i + 1) * 3], points[(i + 1) * 3 + 1], points[(i + 1) * 3 + 2]);\n\n            bt.copy(n)\n                .sub(p)\n                .normalize()\n                .cross(UNIT_Z);\n\n            averageBt.copy(bt);\n\n            if (i > 0) {\n                averageBt.add(prevBt).multiplyScalar(1.0 - 0.5 * bt.dot(prevBt));\n\n                useBevel = prevBt.angleTo(bt) > Math.PI / 2;\n\n                if (useBevel) {\n                    const inclineWidth = width / Math.cos(bt.angleTo(prevBt) / 2);\n\n                    p0.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(-inclineWidth)\n                        .add(p);\n\n                    p1.copy(prevBt)\n                        .multiplyScalar(width)\n                        .add(p);\n\n                    // p2 is used for \"miter\" connections\n                    p2.copy(bt)\n                        .add(prevBt)\n                        .normalize()\n                        .multiplyScalar(inclineWidth)\n                        .add(p);\n\n                    p3.copy(bt)\n                        .multiplyScalar(width)\n                        .add(p);\n                }\n            }\n\n            if (useBevel) {\n                vertices.push(\n                    p0.x,\n                    p0.y,\n                    p0.z,\n                    p1.x,\n                    p1.y,\n                    p1.z,\n                    p2.x,\n                    p2.y,\n                    p2.z,\n                    p3.x,\n                    p3.y,\n                    p3.z\n                );\n            } else {\n                p0.copy(averageBt)\n                    .multiplyScalar(-width)\n                    .add(p);\n\n                p1.copy(averageBt)\n                    .multiplyScalar(width)\n                    .add(p);\n\n                vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n            }\n\n            prevBt.copy(bt);\n        } else {\n            p0.copy(prevBt)\n                .multiplyScalar(-width)\n                .add(p);\n\n            p1.copy(prevBt)\n                .multiplyScalar(width)\n                .add(p);\n\n            vertices.push(p0.x, p0.y, p0.z, p1.x, p1.y, p1.z);\n        }\n\n        if (i !== N - 1) {\n            (useBevel ? BEVEL_POINTS : POINTS).forEach(o =>\n                indices.push(baseVertex + vertexOffset + o)\n            );\n            vertexOffset += useBevel ? 4 : 2;\n        }\n    }\n\n    if (endWithCircle) {\n        const lineAngle =\n            points.length !== 2\n                ? angleVec\n                      .set(\n                          points[(N - 3) * 3] - points[(N - 2) * 3],\n                          points[(N - 3) * 3 + 1] - points[(N - 2) * 3 + 1]\n                      )\n                      .angle()\n                : Math.PI;\n\n        addCircle(\n            points[(N - 2) * 3],\n            points[(N - 2) * 3 + 1],\n            lineAngle,\n            width,\n            vertices,\n            indices\n        );\n    }\n}\n\n/**\n * Reconstruct the original points of a line from the vertices of the triangulated line.\n *\n * @param inBuffer Buffer with vertices.\n * @param startOffset Start index, will differ from `0` if the line has caps.\n * @returns Buffer containing the original points of the triangulated line.\n */\nexport function reconstructLine(inBuffer: Float32Array, startOffset: number): Float32Array {\n    const outBuffer = new Float32Array(inBuffer.length / 2);\n\n    for (let i = startOffset * 3, i2 = i * 2; i < outBuffer.length; i += 3, i2 += 6) {\n        outBuffer[i] = inBuffer[i2] + (inBuffer[i2 + 3] - inBuffer[i2]) * 0.5;\n        outBuffer[i + 1] = inBuffer[i2 + 1] + (inBuffer[i2 + 3 + 1] - inBuffer[i2 + 1]) * 0.5;\n        outBuffer[i + 2] = inBuffer[i2 + 2] + (inBuffer[i2 + 3 + 2] - inBuffer[i2 + 2]) * 0.5;\n    }\n    return outBuffer;\n}\n\n/**\n * Extract the line width from a triangulated line.\n *\n * @param inBuffer Array of vertex elements of a triangulated line.\n * @param startIndex Start index, will differ from `0` if the line has caps.\n */\nexport function reconstructLineWidth(inBuffer: Float32Array, startIndex: number): number {\n    const xd = inBuffer[startIndex * 2 + 3] - inBuffer[startIndex * 2];\n    const yd = inBuffer[startIndex * 2 + 3 + 1] - inBuffer[startIndex * 2 + 1];\n    const zd = inBuffer[startIndex * 2 + 3 + 2] - inBuffer[startIndex * 2 + 2];\n\n    return Math.sqrt(xd * xd + yd * yd + zd * zd) * 0.5;\n}\n","'use strict';\n\nmodule.exports = earcut;\nmodule.exports.default = earcut;\n\nfunction earcut(data, holeIndices, dim) {\n\n    dim = dim || 2;\n\n    var hasHoles = holeIndices && holeIndices.length,\n        outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n        outerNode = linkedList(data, 0, outerLen, dim, true),\n        triangles = [];\n\n    if (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\n    var minX, minY, maxX, maxY, x, y, invSize;\n\n    if (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n\n    // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n    if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n            x = data[i];\n            y = data[i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n        }\n\n        // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n    }\n\n    earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\n    return triangles;\n}\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === (signedArea(data, start, end, dim) > 0)) {\n        for (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n    } else {\n        for (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n    }\n\n    if (last && equals(last, last.next)) {\n        removeNode(last);\n        last = last.next;\n    }\n\n    return last;\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints(start, end) {\n    if (!start) return start;\n    if (!end) end = start;\n\n    var p = start,\n        again;\n    do {\n        again = false;\n\n        if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n            removeNode(p);\n            p = end = p.prev;\n            if (p === p.next) break;\n            again = true;\n\n        } else {\n            p = p.next;\n        }\n    } while (again || p !== end);\n\n    return end;\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) return;\n\n    // interlink polygon nodes in z-order\n    if (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\n    var stop = ear,\n        prev, next;\n\n    // iterate through ears, slicing them one by one\n    while (ear.prev !== ear.next) {\n        prev = ear.prev;\n        next = ear.next;\n\n        if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n            // cut off the triangle\n            triangles.push(prev.i / dim);\n            triangles.push(ear.i / dim);\n            triangles.push(next.i / dim);\n\n            removeNode(ear);\n\n            // skipping the next vertex leads to less sliver triangles\n            ear = next.next;\n            stop = next.next;\n\n            continue;\n        }\n\n        ear = next;\n\n        // if we looped through the whole remaining polygon and can't find any more ears\n        if (ear === stop) {\n            // try filtering points and slicing again\n            if (!pass) {\n                earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1);\n\n            // if this didn't work, try curing all small self-intersections locally\n            } else if (pass === 1) {\n                ear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n                earcutLinked(ear, triangles, dim, minX, minY, invSize, 2);\n\n            // as a last resort, try splitting the remaining polygon into two\n            } else if (pass === 2) {\n                splitEarcut(ear, triangles, dim, minX, minY, invSize);\n            }\n\n            break;\n        }\n    }\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // now make sure we don't have other points inside the potential ear\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n        if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.next;\n    }\n\n    return true;\n}\n\nfunction isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\n    // triangle bbox; min & max are calculated like this for speed\n    var minTX = a.x < b.x ? (a.x < c.x ? a.x : c.x) : (b.x < c.x ? b.x : c.x),\n        minTY = a.y < b.y ? (a.y < c.y ? a.y : c.y) : (b.y < c.y ? b.y : c.y),\n        maxTX = a.x > b.x ? (a.x > c.x ? a.x : c.x) : (b.x > c.x ? b.x : c.x),\n        maxTY = a.y > b.y ? (a.y > c.y ? a.y : c.y) : (b.y > c.y ? b.y : c.y);\n\n    // z-order range for the current triangle bbox;\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\n    var p = ear.prevZ,\n        n = ear.nextZ;\n\n    // look for points inside the triangle in both directions\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    // look for remaining points in decreasing z-order\n    while (p && p.z >= minZ) {\n        if (p !== ear.prev && p !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) &&\n            area(p.prev, p, p.next) >= 0) return false;\n        p = p.prevZ;\n    }\n\n    // look for remaining points in increasing z-order\n    while (n && n.z <= maxZ) {\n        if (n !== ear.prev && n !== ear.next &&\n            pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) &&\n            area(n.prev, n, n.next) >= 0) return false;\n        n = n.nextZ;\n    }\n\n    return true;\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n    do {\n        var a = p.prev,\n            b = p.next.next;\n\n        if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\n            triangles.push(a.i / dim);\n            triangles.push(p.i / dim);\n            triangles.push(b.i / dim);\n\n            // remove two nodes involved\n            removeNode(p);\n            removeNode(p.next);\n\n            p = start = b;\n        }\n        p = p.next;\n    } while (p !== start);\n\n    return filterPoints(p);\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n    do {\n        var b = a.next.next;\n        while (b !== a.prev) {\n            if (a.i !== b.i && isValidDiagonal(a, b)) {\n                // split the polygon in two by the diagonal\n                var c = splitPolygon(a, b);\n\n                // filter colinear points around the cuts\n                a = filterPoints(a, a.next);\n                c = filterPoints(c, c.next);\n\n                // run earcut on each half\n                earcutLinked(a, triangles, dim, minX, minY, invSize);\n                earcutLinked(c, triangles, dim, minX, minY, invSize);\n                return;\n            }\n            b = b.next;\n        }\n        a = a.next;\n    } while (a !== start);\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i, len, start, end, list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n        start = holeIndices[i] * dim;\n        end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n        list = linkedList(data, start, end, dim, false);\n        if (list === list.next) list.steiner = true;\n        queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX);\n\n    // process holes from left to right\n    for (i = 0; i < queue.length; i++) {\n        eliminateHole(queue[i], outerNode);\n        outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n}\n\nfunction compareX(a, b) {\n    return a.x - b.x;\n}\n\n// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n    if (outerNode) {\n        var b = splitPolygon(outerNode, hole);\n\n        // filter collinear points around the cuts\n        filterPoints(outerNode, outerNode.next);\n        filterPoints(b, b.next);\n    }\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m;\n\n    // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n    do {\n        if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n            var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n            if (x <= hx && x > qx) {\n                qx = x;\n                if (x === hx) {\n                    if (hy === p.y) return p;\n                    if (hy === p.next.y) return p.next;\n                }\n                m = p.x < p.next.x ? p : p.next;\n            }\n        }\n        p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) return null;\n\n    if (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n\n    p = m;\n\n    do {\n        if (hx >= p.x && p.x >= mx && hx !== p.x &&\n                pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\n            tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n            if (locallyInside(p, hole) &&\n                (tan < tanMin || (tan === tanMin && (p.x > m.x || (p.x === m.x && sectorContainsSector(m, p)))))) {\n                m = p;\n                tanMin = tan;\n            }\n        }\n\n        p = p.next;\n    } while (p !== stop);\n\n    return m;\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m, p) {\n    return area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve(start, minX, minY, invSize) {\n    var p = start;\n    do {\n        if (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n        p.prevZ = p.prev;\n        p.nextZ = p.next;\n        p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n\n    sortLinked(p);\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list) {\n    var i, p, q, e, tail, numMerges, pSize, qSize,\n        inSize = 1;\n\n    do {\n        p = list;\n        list = null;\n        tail = null;\n        numMerges = 0;\n\n        while (p) {\n            numMerges++;\n            q = p;\n            pSize = 0;\n            for (i = 0; i < inSize; i++) {\n                pSize++;\n                q = q.nextZ;\n                if (!q) break;\n            }\n            qSize = inSize;\n\n            while (pSize > 0 || (qSize > 0 && q)) {\n\n                if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n                    e = p;\n                    p = p.nextZ;\n                    pSize--;\n                } else {\n                    e = q;\n                    q = q.nextZ;\n                    qSize--;\n                }\n\n                if (tail) tail.nextZ = e;\n                else list = e;\n\n                e.prevZ = tail;\n                tail = e;\n            }\n\n            p = q;\n        }\n\n        tail.nextZ = null;\n        inSize *= 2;\n\n    } while (numMerges > 1);\n\n    return list;\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n\n    x = (x | (x << 8)) & 0x00FF00FF;\n    x = (x | (x << 4)) & 0x0F0F0F0F;\n    x = (x | (x << 2)) & 0x33333333;\n    x = (x | (x << 1)) & 0x55555555;\n\n    y = (y | (y << 8)) & 0x00FF00FF;\n    y = (y | (y << 4)) & 0x0F0F0F0F;\n    y = (y | (y << 2)) & 0x33333333;\n    y = (y | (y << 1)) & 0x55555555;\n\n    return x | (y << 1);\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n    do {\n        if (p.x < leftmost.x || (p.x === leftmost.x && p.y < leftmost.y)) leftmost = p;\n        p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 &&\n           (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 &&\n           (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && // dones't intersect other edges\n           (locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && // locally visible\n            (area(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n            equals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n}\n\n// signed area of a triangle\nfunction area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n}\n\n// check if two points are equal\nfunction equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n}\n\n// check if two segments intersect\nfunction intersects(p1, q1, p2, q2) {\n    var o1 = sign(area(p1, q1, p2));\n    var o2 = sign(area(p1, q1, q2));\n    var o3 = sign(area(p2, q2, p1));\n    var o4 = sign(area(p2, q2, q1));\n\n    if (o1 !== o2 && o3 !== o4) return true; // general case\n\n    if (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n    if (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n    if (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n    if (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n    return false;\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p, q, r) {\n    return q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n}\n\nfunction sign(num) {\n    return num > 0 ? 1 : num < 0 ? -1 : 0;\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a, b) {\n    var p = a;\n    do {\n        if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n                intersects(p, p.next, a, b)) return true;\n        p = p.next;\n    } while (p !== a);\n\n    return false;\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ?\n        area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 :\n        area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n    do {\n        if (((p.y > py) !== (p.next.y > py)) && p.next.y !== p.y &&\n                (px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x))\n            inside = !inside;\n        p = p.next;\n    } while (p !== a);\n\n    return inside;\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n\n    a.next = b;\n    b.prev = a;\n\n    a2.next = an;\n    an.prev = a2;\n\n    b2.next = a2;\n    a2.prev = b2;\n\n    bp.next = b2;\n    b2.prev = bp;\n\n    return b2;\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n        p.prev = p;\n        p.next = p;\n\n    } else {\n        p.next = last.next;\n        p.prev = last;\n        last.next.prev = p;\n        last.next = p;\n    }\n    return p;\n}\n\nfunction removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) p.prevZ.nextZ = p.nextZ;\n    if (p.nextZ) p.nextZ.prevZ = p.prevZ;\n}\n\nfunction Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i;\n\n    // vertex coordinates\n    this.x = x;\n    this.y = y;\n\n    // previous and next vertex nodes in a polygon ring\n    this.prev = null;\n    this.next = null;\n\n    // z-order curve value\n    this.z = null;\n\n    // previous and next nodes in z-order\n    this.prevZ = null;\n    this.nextZ = null;\n\n    // indicates whether this is a steiner point\n    this.steiner = false;\n}\n\n// return a percentage difference between the polygon area and its triangulation area;\n// used to verify correctness of triangulation\nearcut.deviation = function (data, holeIndices, dim, triangles) {\n    var hasHoles = holeIndices && holeIndices.length;\n    var outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\n    var polygonArea = Math.abs(signedArea(data, 0, outerLen, dim));\n    if (hasHoles) {\n        for (var i = 0, len = holeIndices.length; i < len; i++) {\n            var start = holeIndices[i] * dim;\n            var end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n            polygonArea -= Math.abs(signedArea(data, start, end, dim));\n        }\n    }\n\n    var trianglesArea = 0;\n    for (i = 0; i < triangles.length; i += 3) {\n        var a = triangles[i] * dim;\n        var b = triangles[i + 1] * dim;\n        var c = triangles[i + 2] * dim;\n        trianglesArea += Math.abs(\n            (data[a] - data[c]) * (data[b + 1] - data[a + 1]) -\n            (data[a] - data[b]) * (data[c + 1] - data[a + 1]));\n    }\n\n    return polygonArea === 0 && trianglesArea === 0 ? 0 :\n        Math.abs((trianglesArea - polygonArea) / polygonArea);\n};\n\nfunction signedArea(data, start, end, dim) {\n    var sum = 0;\n    for (var i = start, j = end - dim; i < end; i += dim) {\n        sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n        j = i;\n    }\n    return sum;\n}\n\n// turn a polygon in a multi-dimensional array form (e.g. as in GeoJSON) into a form Earcut accepts\nearcut.flatten = function (data) {\n    var dim = data[0][0].length,\n        result = {vertices: [], holes: [], dimensions: dim},\n        holeIndex = 0;\n\n    for (var i = 0; i < data.length; i++) {\n        for (var j = 0; j < data[i].length; j++) {\n            for (var d = 0; d < dim; d++) result.vertices.push(data[i][j][d]);\n        }\n        if (i > 0) {\n            holeIndex += data[i - 1].length;\n            result.holes.push(holeIndex);\n        }\n    }\n    return result;\n};\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Vector2 } from \"three\";\n\nconst tmpBA = new Vector2();\nconst tmpQP = new Vector2();\nconst tmpA = new Vector2();\nconst tmpB = new Vector2();\n\n/**\n * Clip the given polygon using the Sutherland-Hodgman algorithm.\n */\nexport function clipPolygon(polygon: Vector2[], clip: Vector2[]): Vector2[] {\n    if (polygon.length === 0) {\n        return polygon;\n    }\n    if (!polygon[0].equals(polygon[polygon.length - 1])) {\n        // close the polygon if needed.\n        polygon = [...polygon, polygon[0]];\n    }\n    let outputList = polygon;\n    for (let e = 0; e < clip.length; ++e) {\n        const p = clip[e];\n        const q = clip[(e + 1) % clip.length];\n        const inputList = outputList;\n        outputList = [];\n        for (let i = 0; i < inputList.length; ++i) {\n            const currentPoint = inputList[i];\n            const prevPoint = inputList[(i + inputList.length - 1) % inputList.length];\n            if (inside(currentPoint, p, q)) {\n                if (!inside(prevPoint, p, q)) {\n                    outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n                }\n                outputList.push(currentPoint);\n            } else if (inside(prevPoint, p, q)) {\n                outputList.push(computeIntersection(prevPoint, currentPoint, p, q));\n            }\n        }\n    }\n    return outputList;\n}\n\nfunction computeIntersection(\n    a: Vector2,\n    b: Vector2,\n    p: Vector2,\n    q: Vector2,\n    result = new Vector2()\n): Vector2 {\n    tmpBA.subVectors(b, a);\n    tmpQP.subVectors(q, p);\n    const c1 = a.cross(tmpBA);\n    const c2 = p.cross(tmpQP);\n    const D = tmpBA.cross(tmpQP);\n    const x = (tmpBA.x * c2 - tmpQP.x * c1) / D;\n    const y = (tmpBA.y * c2 - tmpQP.y * c1) / D;\n    return result.set(x, y).round();\n}\n\nfunction inside(point: Vector2, p: Vector2, q: Vector2) {\n    tmpA.subVectors(q, p);\n    tmpB.subVectors(point, p);\n    return tmpA.cross(tmpB) > 0;\n}\n","/*\n * Copyright (C) 2017-2020 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Box3Like, GeoBox, Projection, ProjectionType } from \"@here/harp-geoutils\";\nimport { assert } from \"@here/harp-utils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3()];\n\nexport enum SubdivisionMode {\n    /**\n     * Subdivide all edges\n     */\n    All,\n    /**\n     * Only subdivide horizontal and vertical edges\n     */\n    NoDiagonals\n}\n\n/**\n * The [[EdgeLengthGeometrySubdivisionModifier]] subdivides triangle mesh depending on\n * length of edges.\n */\nexport class EdgeLengthGeometrySubdivisionModifier extends SubdivisionModifier {\n    private m_projectedBox: Box3Like;\n    private m_maxLength: number;\n    private m_maxLengthX: number;\n    private m_maxLengthY: number;\n\n    /**\n     * Constructs a new [[EdgeLengthGeometrySubdivisionModifier]].\n     *\n     * @param subdivision The subdivision factor\n     * @param geoBox The geo bounding box of a tile\n     * @param subdivisionMode Configures what edges to divide\n     * @param projection The projection that defines the world space of this geometry.\n     */\n    constructor(\n        readonly subdivision: number,\n        readonly geoBox: GeoBox,\n        readonly subdivisionMode: SubdivisionMode = SubdivisionMode.All,\n        readonly projection: Projection\n    ) {\n        super();\n\n        assert(\n            projection.type === ProjectionType.Planar,\n            \"EdgeLengthGeometrySubdivisionModifier only supports planar projections\"\n        );\n\n        const northEast = projection.projectPoint(geoBox.northEast, VERTEX_POSITION_CACHE[0]);\n        const southWest = projection.projectPoint(geoBox.southWest, VERTEX_POSITION_CACHE[1]);\n        this.m_projectedBox = {\n            min: {\n                x: Math.min(northEast.x, southWest.x),\n                y: Math.min(northEast.y, southWest.y),\n                z: Math.min(northEast.z, southWest.z)\n            },\n            max: {\n                x: Math.max(northEast.x, southWest.x),\n                y: Math.max(northEast.y, southWest.y),\n                z: Math.max(northEast.z, southWest.z)\n            }\n        };\n        this.m_maxLengthX = (this.m_projectedBox.max.x - this.m_projectedBox.min.x) / subdivision;\n        this.m_maxLengthY = (this.m_projectedBox.max.y - this.m_projectedBox.min.y) / subdivision;\n\n        // Increase max length slightly to account for precision errors\n        if (this.subdivisionMode === SubdivisionMode.All) {\n            this.m_maxLengthX *= 1.1;\n            this.m_maxLengthY *= 1.1;\n        }\n        this.m_maxLength = Math.sqrt(\n            this.m_maxLengthX * this.m_maxLengthX + this.m_maxLengthY * this.m_maxLengthY\n        );\n    }\n\n    /**\n     * Return upper bound for length of diagonal edges\n     */\n    get maxLength() {\n        return this.m_maxLength;\n    }\n\n    /**\n     * Return upper bound for edge length in x direction\n     */\n    get maxLengthX() {\n        return this.m_maxLengthX;\n    }\n\n    /**\n     * Return upper bound for edge length in y direction\n     */\n    get maxLengthY() {\n        return this.m_maxLengthY;\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const shouldSplitAB = this.shouldSplitEdge(a, b);\n        const shouldSplitBC = this.shouldSplitEdge(b, c);\n        const shouldSplitCA = this.shouldSplitEdge(c, a);\n        const shouldSplit = shouldSplitAB || shouldSplitBC || shouldSplitCA;\n\n        if (!shouldSplit) {\n            return;\n        }\n\n        const ab = a.distanceTo(b);\n        const bc = b.distanceTo(c);\n        const ca = c.distanceTo(a);\n        const maxDistance = Math.max(\n            shouldSplitAB ? ab : 0,\n            shouldSplitBC ? bc : 0,\n            shouldSplitCA ? ca : 0\n        );\n        if (ab === maxDistance) {\n            return 0;\n        } else if (bc === maxDistance) {\n            return 1;\n        } else if (ca === maxDistance) {\n            return 2;\n        }\n\n        throw new Error(\"Could not split triangle.\");\n    }\n\n    private shouldSplitEdge(a: Vector3, b: Vector3): boolean {\n        switch (this.subdivisionMode) {\n            case SubdivisionMode.All:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY) ||\n                    a.distanceTo(b) > this.m_maxLength\n                );\n            case SubdivisionMode.NoDiagonals:\n                return (\n                    (a.y === b.y && Math.abs(a.x - b.x) > this.m_maxLengthX) ||\n                    (a.x === b.x && Math.abs(a.y - b.y) > this.m_maxLengthY)\n                );\n        }\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { Projection, sphereProjection } from \"@here/harp-geoutils\";\nimport { Vector3 } from \"three\";\nimport { SubdivisionModifier } from \"./SubdivisionModifier\";\n\nconst VERTEX_POSITION_CACHE = [new Vector3(), new Vector3(), new Vector3()];\n\n/**\n * The [[SphericalGeometrySubdivisionModifier]] subdivides triangle mesh geometries positioned\n * on the surface of a sphere centered at `(0, 0, 0)`.\n */\nexport class SphericalGeometrySubdivisionModifier extends SubdivisionModifier {\n    /**\n     * Constructs a new [[SphericalGeometrySubdivisionModifier]].\n     *\n     * @param angle The maximum angle in radians between two vertices and the origin.\n     * @param projection The projection that defines the world space of this geometry.\n     */\n    constructor(readonly angle: number, readonly projection: Projection = sphereProjection) {\n        super();\n    }\n\n    /** @override */\n    protected shouldSplitTriangle(a: Vector3, b: Vector3, c: Vector3): number | undefined {\n        const aa = sphereProjection.reprojectPoint(this.projection, a, VERTEX_POSITION_CACHE[0]);\n        const bb = sphereProjection.reprojectPoint(this.projection, b, VERTEX_POSITION_CACHE[1]);\n        const cc = sphereProjection.reprojectPoint(this.projection, c, VERTEX_POSITION_CACHE[2]);\n\n        const alpha = aa.angleTo(bb);\n        const beta = bb.angleTo(cc);\n        const gamma = cc.angleTo(aa);\n\n        // find the maximum angle\n        const m = Math.max(alpha, Math.max(beta, gamma));\n\n        // split the triangle if needed.\n        if (m < this.angle) {\n            return undefined;\n        }\n\n        if (m === alpha) {\n            return 0;\n        } else if (m === beta) {\n            return 1;\n        } else if (m === gamma) {\n            return 2;\n        }\n\n        throw new Error(\"failed to split triangle\");\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nexport namespace ExtrusionFeatureDefs {\n    /**\n     * Minimum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MIN: number = 0.0;\n    /**\n     * Maximum ratio value for extrusion effect\n     */\n    export const DEFAULT_RATIO_MAX: number = 1;\n\n    /**\n     * Buildings height used whenever no height-data is present or height is very small.\n     *\n     * Used to avoid z-fighting between ground plane and building.\n     */\n    export const MIN_BUILDING_HEIGHT = 0.01;\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport {\n    ExtendedTileInfo,\n    ExtendedTileInfoWriter,\n    FeatureGroupType,\n    IndexedTechnique\n} from \"@here/harp-datasource-protocol\";\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport * as THREE from \"three\";\n\nimport { AttrEvaluationContext } from \"@here/harp-datasource-protocol/lib/TechniqueAttr\";\nimport { ILineGeometry, IPolygonGeometry } from \"./IGeometryProcessor\";\nimport { IOmvEmitter, OmvDecoder, Ring } from \"./OmvDecoder\";\nimport { webMercatorTile2TargetTile } from \"./OmvUtils\";\n\nexport class OmvTileInfoEmitter implements IOmvEmitter {\n    private readonly m_tileInfo: ExtendedTileInfo;\n    private readonly m_tileInfoWriter: ExtendedTileInfoWriter;\n\n    /**\n     * Create OmvTileInfoEmitter object\n     *\n     * @param m_decodeInfo\n     * @param m_styleSetEvaluator\n     * @param m_storeExtendedTags\n     * @param m_gatherRoadSegments\n     */\n    constructor(\n        private readonly m_decodeInfo: OmvDecoder.DecodeInfo,\n        // tslint:disable-next-line:no-unused-variable\n        private readonly m_styleSetEvaluator: StyleSetEvaluator,\n        private readonly m_storeExtendedTags: boolean,\n        private readonly m_gatherRoadSegments: boolean,\n        private readonly m_languages?: string[]\n    ) {\n        this.m_tileInfo = new ExtendedTileInfo(m_decodeInfo.tileKey, this.m_storeExtendedTags);\n        this.m_tileInfoWriter = new ExtendedTileInfoWriter(\n            this.m_tileInfo,\n            this.m_storeExtendedTags\n        );\n    }\n\n    processPointFeature(\n        layer: string,\n        extents: number,\n        geometry: THREE.Vector2[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const tileInfoWriter = this.m_tileInfoWriter;\n        const tmpV = new THREE.Vector3();\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            for (const pos of geometry) {\n                webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                tileInfoWriter.addFeature(\n                    this.m_tileInfo.pointGroup,\n                    context.env,\n                    featureId,\n                    featureText,\n                    infoTileTechniqueIndex,\n                    FeatureGroupType.Point\n                );\n                tileInfoWriter.addFeaturePoint(this.m_tileInfo.pointGroup, tmpV.x, tmpV.y);\n            }\n        }\n    }\n\n    processLineFeature(\n        layer: string,\n        extents: number,\n        geometry: ILineGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        const tileInfoWriter = this.m_tileInfoWriter;\n        const env = context.env;\n\n        const tmpV = new THREE.Vector3();\n\n        const lines: number[][] = [];\n\n        for (const polyline of geometry) {\n            const line: number[] = [];\n            for (const pos of polyline.positions) {\n                webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                line.push(tmpV.x, tmpV.y);\n            }\n            lines.push(line);\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            for (const aLine of lines) {\n                tileInfoWriter.addFeature(\n                    this.m_tileInfo.lineGroup,\n                    env,\n                    featureId,\n                    featureText,\n                    infoTileTechniqueIndex,\n                    FeatureGroupType.Line\n                );\n\n                tileInfoWriter.addFeaturePoints(this.m_tileInfo.lineGroup, aLine);\n            }\n        }\n\n        if (this.m_gatherRoadSegments) {\n            const segmentId = env.lookup(\"segmentId\") as number;\n            if (segmentId !== undefined) {\n                const startOffset = env.lookup(\"startOffset\");\n                const endOffset = env.lookup(\"endOffset\");\n                tileInfoWriter.addRoadSegments(\n                    this.m_tileInfo.lineGroup,\n                    segmentId,\n                    startOffset !== undefined ? (startOffset as number) : 0,\n                    endOffset !== undefined ? (endOffset as number) : 1\n                );\n            }\n        }\n    }\n\n    processPolygonFeature(\n        layer: string,\n        extents: number,\n        geometry: IPolygonGeometry[],\n        context: AttrEvaluationContext,\n        techniques: IndexedTechnique[],\n        featureId: number | undefined\n    ): void {\n        if (techniques.length === 0) {\n            throw new Error(\n                \"OmvTileInfoEmitter#processPolygonFeature: Internal error - No technique index\"\n            );\n        }\n\n        const tileInfoWriter = this.m_tileInfoWriter;\n\n        const tmpV = new THREE.Vector3();\n\n        const polygons: Ring[][] = [];\n\n        for (const polygon of geometry) {\n            const rings: Ring[] = [];\n            for (const outline of polygon.rings) {\n                const contour: number[] = [];\n                for (const pos of outline) {\n                    webMercatorTile2TargetTile(extents, this.m_decodeInfo, pos, tmpV);\n                    contour.push(tmpV.x, tmpV.y, tmpV.z);\n                }\n                rings.push(new Ring(extents, 3, contour));\n            }\n            polygons.push(rings);\n        }\n\n        for (const technique of techniques) {\n            if (technique === undefined) {\n                continue;\n            }\n\n            const infoTileTechniqueIndex = tileInfoWriter.addTechnique(technique);\n\n            const featureText = ExtendedTileInfo.getFeatureText(\n                context,\n                technique,\n                this.m_languages\n            );\n            tileInfoWriter.addFeature(\n                this.m_tileInfo.polygonGroup,\n                context.env,\n                featureId,\n                featureText,\n                infoTileTechniqueIndex,\n                FeatureGroupType.Polygon\n            );\n        }\n\n        for (const rings of polygons) {\n            // rings are shared between techniques\n            if (rings.length === 0) {\n                continue;\n            }\n            const outerRingWinding = rings[0].winding;\n            for (const aRing of rings) {\n                tileInfoWriter.addRingPoints(\n                    this.m_tileInfo.polygonGroup,\n                    aRing.contour,\n                    aRing.winding === outerRingWinding\n                );\n            }\n        }\n    }\n\n    getTileInfo(): ExtendedTileInfo {\n        this.m_tileInfoWriter.finish();\n        return this.m_tileInfo;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { MapEnv } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { LoggerManager } from \"@here/harp-utils\";\nimport { OmvGenericFeatureModifier } from \"./OmvDataFilter\";\nimport { OmvFeatureFilterDescription, OmvFilterDescription } from \"./OmvDecoderDefs\";\n\nconst logger = LoggerManager.instance.create(\"OmvTomTomFeatureModifier\");\n\nconst DEFAULT_BUILDING_COLOR = \"#AAAAAA\";\nconst DEFAULT_DO_EXTRUDE_BUILDINGS = \"true\";\nconst DEFAULT_BUILDING_MIN_HEIGHT = \"2\";\nconst DEFAULT_BUILDING_HEIGHT = \"20\";\n\n/**\n * Modifies the MapEnv of the TomTom Vector Tiles to be similar to the OMV format, so that the same\n * theme files can be used.\n */\nexport class OmvTomTomFeatureModifier extends OmvGenericFeatureModifier {\n    constructor(description: OmvFeatureFilterDescription) {\n        super(description);\n    }\n\n    /** @override */\n    protected doProcessFeature(\n        itemsToProcess: OmvFilterDescription[],\n        itemsToIgnore: OmvFilterDescription[],\n        layer: string,\n        env: MapEnv,\n        defaultResult: boolean\n    ): boolean {\n        this.rewriteEnvironment(layer, env);\n        return super.doProcessFeature(itemsToProcess, itemsToIgnore, layer, env, defaultResult);\n    }\n\n    /**\n     * Rewrites the Environment to match the environment naming used in OMV.\n     *\n     * Does not cover roadlabels, as the roadlabels in the Tomtom format are delivered in a\n     * different format combined in the environment with the road line geometry, which is\n     * represented as two separate environment in the default format.\n     *\n     * @param layer\n     * @param env\n     */\n    private rewriteEnvironment(layer: string, env: MapEnv) {\n        // Rewriting landuse layers\n        if (this.isWood(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"wood\");\n        } else if (this.isHospital(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"hospital\");\n        } else if (this.isCemetery(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"cemetery\");\n        } else if (this.isIndustrial(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"industrial\");\n        } else if (this.isPark(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"park\");\n        } else if (this.isBuiltup(layer)) {\n            this.updateEnvironment(env, \"landuse\", \"builtup\");\n            // Rewriting the water layer\n        } else if (this.isWater(layer)) {\n            this.updateEnvironment(env, \"water\");\n            // Rewriting the road label layer\n        } else if (this.isRoadLabel(layer)) {\n            this.updateEnvironment(env, \"road_label\");\n            // Rewriting road layers with category classes\n        } else if (this.isRoadPath(layer)) {\n            this.updateEnvironment(env, \"road\", \"path\");\n        } else if (this.isRoadStreet(layer)) {\n            this.updateEnvironment(env, \"road\", \"street\");\n        } else if (this.isRoadPrimary(layer)) {\n            this.updateEnvironment(env, \"road\", \"primary\");\n        } else if (this.isRoadSecondary(layer)) {\n            this.updateEnvironment(env, \"road\", \"secondary\");\n        } else if (this.isRailway(layer)) {\n            this.updateEnvironment(env, \"road\", \"major_rail\");\n        } else if (this.isFerry(layer)) {\n            this.updateEnvironment(env, \"road\", \"ferry\");\n            // Rewriting aeroway layer\n        } else if (this.isAeroway(layer)) {\n            this.updateEnvironment(env, \"aeroway\");\n            // Rewriting border layer\n        } else if (this.isBorder(layer)) {\n            this.updateEnvironment(env, \"admin\");\n            // Rewriting label layers\n        } else if (this.isCountryLabel(layer)) {\n            this.updateEnvironment(env, \"country_label\");\n        } else if (this.isCountyLabel(layer)) {\n            this.updateEnvironment(env, \"county_label\");\n        } else if (this.isRegionLabel(layer)) {\n            this.updateEnvironment(env, \"region_label\");\n        } else if (this.isStateLabel(layer)) {\n            this.updateEnvironment(env, \"state_label\");\n        } else if (this.isPlaceLabel(layer)) {\n            this.updateEnvironment(env, \"place_label\");\n        } else if (this.isWaterLabel(layer)) {\n            this.updateEnvironment(env, \"water_label\");\n        } else if (this.isMarineLabel(layer)) {\n            this.updateEnvironment(env, \"marine_label\");\n        } else if (this.isPoiLabel(layer)) {\n            this.updateEnvironment(env, \"poi_label\");\n            // Rewriting building layer\n        } else if (this.isBuilding(layer)) {\n            this.updateEnvironment(env, \"building\");\n            env.entries.color = DEFAULT_BUILDING_COLOR;\n            env.entries.extrude = DEFAULT_DO_EXTRUDE_BUILDINGS;\n            env.entries.min_height = DEFAULT_BUILDING_MIN_HEIGHT;\n            env.entries.height = DEFAULT_BUILDING_HEIGHT;\n        } else {\n            logger.info(`Not yet rewritten layer: ##${env.entries.$layer}## `);\n        }\n\n        // Add tunnel structure if its a tunnel\n        if (this.isTunnel(layer)) {\n            env.entries.structure = \"tunnel\";\n        }\n\n        //Add bridge structure if its a bridge\n        if (this.isBridge(layer)) {\n            env.entries.structure = \"bridge\";\n        }\n    }\n\n    private updateEnvironment(\n        env: MapEnv,\n        layer: string,\n        newClass?: string,\n        structure?: string\n    ): void {\n        env.entries.$layer = layer;\n        if (newClass !== undefined) {\n            env.entries.class = newClass;\n        }\n        if (structure !== undefined) {\n            env.entries.structure = structure;\n        }\n    }\n\n    private isWood(layer: string): boolean {\n        return layer === \"Woodland\" || layer === \"Moor or heathland\";\n    }\n\n    private isHospital(layer: string): boolean {\n        return layer === \"Hospital\";\n    }\n\n    private isCemetery(layer: string): boolean {\n        return layer === \"Cemetery\";\n    }\n\n    private isIndustrial(layer: string): boolean {\n        return layer.indexOf(\"Industrial\") >= 0 || layer === \"Airport\";\n    }\n\n    private isPark(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"City park\" ||\n            layer === \"National park\" ||\n            layer === \"Regional park\" ||\n            layer.indexOf(\"grass\") >= 0 ||\n            layer.indexOf(\"greens\") >= 0\n        );\n    }\n\n    private isBuiltup(layer: string): boolean {\n        return (\n            layer === \"Built-up area\" ||\n            layer === \"Town paved area\" ||\n            layer === \"Shopping\" ||\n            layer === \"University\" ||\n            layer === \"Stadium\" ||\n            layer.indexOf(\"ground\") > 0\n        );\n    }\n\n    private isWater(layer: string): boolean {\n        return (\n            layer === \"Other water\" ||\n            layer === \"Ocean or sea\" ||\n            layer === \"Ocean\" ||\n            layer === \"Lake\" ||\n            layer === \"Sea\" ||\n            layer === \"Town swimming pool\" ||\n            layer === \"River\"\n        );\n    }\n\n    private isRoadLabel(layer: string): boolean {\n        return layer.indexOf(\"road label\") >= 0;\n    }\n\n    private isRoadPath(layer: string): boolean {\n        return (\n            layer.indexOf(\"path\") > 0 ||\n            layer === \"Parking road\" ||\n            layer === \"Town walkway\" ||\n            layer === \"Pedestrian road\" ||\n            layer === \"Walkway road\" ||\n            layer === \"Town carriageway divider\" ||\n            layer === \"Runway\" ||\n            layer === \"Non public road\"\n        );\n    }\n\n    private isRoadStreet(layer: string): boolean {\n        return (\n            layer.indexOf(\"Minor local road\") >= 0 ||\n            layer.indexOf(\"minor local road\") >= 0 ||\n            layer.indexOf(\"Toll local road\") >= 0 ||\n            layer.indexOf(\"Local road\") >= 0\n        );\n    }\n    private isRoadPrimary(layer: string): boolean {\n        return (\n            layer.indexOf(\"Major local road\") >= 0 ||\n            layer.indexOf(\"Major road\") >= 0 ||\n            layer.indexOf(\"major road\") >= 0 ||\n            layer.indexOf(\"Motorway\") >= 0 ||\n            layer.indexOf(\"motorway\") >= 0 ||\n            layer.indexOf(\"International road\") >= 0 ||\n            layer.indexOf(\"international road\") >= 0\n        );\n    }\n\n    private isRoadSecondary(layer: string): boolean {\n        return (\n            layer.indexOf(\"connecting road\") >= 0 ||\n            layer.indexOf(\"Connecting road\") >= 0 ||\n            layer.indexOf(\"secondary road\") >= 0 ||\n            layer.indexOf(\"Secondary road\") >= 0\n        );\n    }\n\n    private isRailway(layer: string): boolean {\n        return layer === \"Railway\";\n    }\n\n    private isFerry(layer: string): boolean {\n        return layer === \"Ferry road\";\n    }\n\n    private isBorder(layer: string): boolean {\n        return layer.indexOf(\"border\") > 0;\n    }\n\n    private isCountryLabel(layer: string): boolean {\n        return layer === \"Country name\" || layer === \"Country label\";\n    }\n\n    private isStateLabel(layer: string): boolean {\n        return layer === \"City\" || layer.indexOf(\"city\") > 0;\n    }\n\n    private isRegionLabel(layer: string): boolean {\n        return layer === \"Town\";\n    }\n\n    private isCountyLabel(layer: string): boolean {\n        return layer === \"Village\";\n    }\n\n    private isPlaceLabel(layer: string): boolean {\n        return (\n            layer === \"Park\" ||\n            layer === \"Railway station\" ||\n            layer === \"Airport POI\" ||\n            layer === \"Town greens\"\n        );\n    }\n\n    private isWaterLabel(layer: string): boolean {\n        return (\n            layer === \"Ocean name\" || layer === \"River label\" || layer.indexOf(\"water label\") > 0\n        );\n    }\n\n    private isMarineLabel(layer: string): boolean {\n        return layer.indexOf(\"water label\") > 0;\n    }\n\n    private isPoiLabel(layer: string): boolean {\n        return (\n            layer === \"National park name\" ||\n            layer === \"Landmark label\" ||\n            layer.indexOf(\"label\") >= 0\n        );\n    }\n\n    private isAeroway(layer: string): boolean {\n        return layer === \"Airport\";\n    }\n\n    private isBuilding(layer: string): boolean {\n        return layer.indexOf(\"building\") >= 0;\n    }\n\n    private isTunnel(layer: string): boolean {\n        return layer.indexOf(\"tunnel\") >= 0;\n    }\n\n    private isBridge(layer: string): boolean {\n        return layer.indexOf(\"bridge\") >= 0;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { StyleSetEvaluator } from \"@here/harp-datasource-protocol/index-decoder\";\nimport { OmvFeatureFilter } from \"./OmvDataFilter\";\n\n/**\n * An [[OmvFeatureFilter]] implementation that queries [[StyleSetEvaluator]]\n * if given layers/features should be processed.\n *\n * Used in [[OmvDecoder]] to skip processing of layers/features that doesn't\n * have associated rules in style.\n *\n * @see [[StyleSetEvaluator.wantsFeature]]\n * @see [[StyleSetEvaluator.wantsLayer]]\n */\nexport class StyleSetDataFilter implements OmvFeatureFilter {\n    hasKindFilter: boolean = false;\n\n    constructor(readonly styleSetEvaluator: StyleSetEvaluator) {}\n\n    wantsLayer(layer: string, level: number): boolean {\n        return this.styleSetEvaluator.wantsLayer(layer);\n    }\n\n    wantsPointFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"point\");\n    }\n    wantsLineFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"line\");\n    }\n    wantsPolygonFeature(layer: string): boolean {\n        return this.styleSetEvaluator.wantsFeature(layer, \"polygon\");\n    }\n    wantsKind(): boolean {\n        return true;\n    }\n}\n","/*\n * Copyright (C) 2017-2019 HERE Europe B.V.\n * Licensed under Apache 2.0, see full license in LICENSE\n * SPDX-License-Identifier: Apache-2.0\n */\n\nimport { TilerService, WorkerServiceManager } from \"@here/harp-mapview-decoder/index-worker\";\nimport { OMV_TILER_SERVICE_TYPE } from \"./OmvDecoderDefs\";\n\n/**\n * OMV tile decoder service.\n */\nexport class OmvTilerService {\n    /**\n     * Register[[OmvTiler]] service class in [[WorkerServiceManager]].\n     *\n     * Has to be called during initialization of decoder bundle.\n     */\n    static start() {\n        WorkerServiceManager.getInstance().register({\n            serviceType: OMV_TILER_SERVICE_TYPE,\n            factory: (serviceId: string) => TilerService.start(serviceId)\n        });\n    }\n}\n","\n// calculate simplification data using optimized Douglas-Peucker algorithm\n\nexport default function simplify(coords, first, last, sqTolerance) {\n    var maxSqDist = sqTolerance;\n    var mid = (last - first) >> 1;\n    var minPosToMid = last - first;\n    var index;\n\n    var ax = coords[first];\n    var ay = coords[first + 1];\n    var bx = coords[last];\n    var by = coords[last + 1];\n\n    for (var i = first + 3; i < last; i += 3) {\n        var d = getSqSegDist(coords[i], coords[i + 1], ax, ay, bx, by);\n\n        if (d > maxSqDist) {\n            index = i;\n            maxSqDist = d;\n\n        } else if (d === maxSqDist) {\n            // a workaround to ensure we choose a pivot close to the middle of the list,\n            // reducing recursion depth, for certain degenerate inputs\n            // https://github.com/mapbox/geojson-vt/issues/104\n            var posToMid = Math.abs(i - mid);\n            if (posToMid < minPosToMid) {\n                index = i;\n                minPosToMid = posToMid;\n            }\n        }\n    }\n\n    if (maxSqDist > sqTolerance) {\n        if (index - first > 3) simplify(coords, first, index, sqTolerance);\n        coords[index + 2] = maxSqDist;\n        if (last - index > 3) simplify(coords, index, last, sqTolerance);\n    }\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(px, py, x, y, bx, by) {\n\n    var dx = bx - x;\n    var dy = by - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = bx;\n            y = by;\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default function createFeature(id, type, geom, tags) {\n    var feature = {\n        id: typeof id === 'undefined' ? null : id,\n        type: type,\n        geometry: geom,\n        tags: tags,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n    calcBBox(feature);\n    return feature;\n}\n\nfunction calcBBox(feature) {\n    var geom = feature.geometry;\n    var type = feature.type;\n\n    if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n        calcLineBBox(feature, geom);\n\n    } else if (type === 'Polygon' || type === 'MultiLineString') {\n        for (var i = 0; i < geom.length; i++) {\n            calcLineBBox(feature, geom[i]);\n        }\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < geom.length; i++) {\n            for (var j = 0; j < geom[i].length; j++) {\n                calcLineBBox(feature, geom[i][j]);\n            }\n        }\n    }\n}\n\nfunction calcLineBBox(feature, geom) {\n    for (var i = 0; i < geom.length; i += 3) {\n        feature.minX = Math.min(feature.minX, geom[i]);\n        feature.minY = Math.min(feature.minY, geom[i + 1]);\n        feature.maxX = Math.max(feature.maxX, geom[i]);\n        feature.maxY = Math.max(feature.maxY, geom[i + 1]);\n    }\n}\n","\nimport simplify from './simplify';\nimport createFeature from './feature';\n\n// converts GeoJSON feature into an intermediate projected JSON vector format with simplification data\n\nexport default function convert(data, options) {\n    var features = [];\n    if (data.type === 'FeatureCollection') {\n        for (var i = 0; i < data.features.length; i++) {\n            convertFeature(features, data.features[i], options, i);\n        }\n\n    } else if (data.type === 'Feature') {\n        convertFeature(features, data, options);\n\n    } else {\n        // single geometry or a geometry collection\n        convertFeature(features, {geometry: data}, options);\n    }\n\n    return features;\n}\n\nfunction convertFeature(features, geojson, options, index) {\n    if (!geojson.geometry) return;\n\n    var coords = geojson.geometry.coordinates;\n    var type = geojson.geometry.type;\n    var tolerance = Math.pow(options.tolerance / ((1 << options.maxZoom) * options.extent), 2);\n    var geometry = [];\n    var id = geojson.id;\n    if (options.promoteId) {\n        id = geojson.properties[options.promoteId];\n    } else if (options.generateId) {\n        id = index || 0;\n    }\n    if (type === 'Point') {\n        convertPoint(coords, geometry);\n\n    } else if (type === 'MultiPoint') {\n        for (var i = 0; i < coords.length; i++) {\n            convertPoint(coords[i], geometry);\n        }\n\n    } else if (type === 'LineString') {\n        convertLine(coords, geometry, tolerance, false);\n\n    } else if (type === 'MultiLineString') {\n        if (options.lineMetrics) {\n            // explode into linestrings to be able to track metrics\n            for (i = 0; i < coords.length; i++) {\n                geometry = [];\n                convertLine(coords[i], geometry, tolerance, false);\n                features.push(createFeature(id, 'LineString', geometry, geojson.properties));\n            }\n            return;\n        } else {\n            convertLines(coords, geometry, tolerance, false);\n        }\n\n    } else if (type === 'Polygon') {\n        convertLines(coords, geometry, tolerance, true);\n\n    } else if (type === 'MultiPolygon') {\n        for (i = 0; i < coords.length; i++) {\n            var polygon = [];\n            convertLines(coords[i], polygon, tolerance, true);\n            geometry.push(polygon);\n        }\n    } else if (type === 'GeometryCollection') {\n        for (i = 0; i < geojson.geometry.geometries.length; i++) {\n            convertFeature(features, {\n                id: id,\n                geometry: geojson.geometry.geometries[i],\n                properties: geojson.properties\n            }, options, index);\n        }\n        return;\n    } else {\n        throw new Error('Input data is not a valid GeoJSON object.');\n    }\n\n    features.push(createFeature(id, type, geometry, geojson.properties));\n}\n\nfunction convertPoint(coords, out) {\n    out.push(projectX(coords[0]));\n    out.push(projectY(coords[1]));\n    out.push(0);\n}\n\nfunction convertLine(ring, out, tolerance, isPolygon) {\n    var x0, y0;\n    var size = 0;\n\n    for (var j = 0; j < ring.length; j++) {\n        var x = projectX(ring[j][0]);\n        var y = projectY(ring[j][1]);\n\n        out.push(x);\n        out.push(y);\n        out.push(0);\n\n        if (j > 0) {\n            if (isPolygon) {\n                size += (x0 * y - x * y0) / 2; // area\n            } else {\n                size += Math.sqrt(Math.pow(x - x0, 2) + Math.pow(y - y0, 2)); // length\n            }\n        }\n        x0 = x;\n        y0 = y;\n    }\n\n    var last = out.length - 3;\n    out[2] = 1;\n    simplify(out, 0, last, tolerance);\n    out[last + 2] = 1;\n\n    out.size = Math.abs(size);\n    out.start = 0;\n    out.end = out.size;\n}\n\nfunction convertLines(rings, out, tolerance, isPolygon) {\n    for (var i = 0; i < rings.length; i++) {\n        var geom = [];\n        convertLine(rings[i], geom, tolerance, isPolygon);\n        out.push(geom);\n    }\n}\n\nfunction projectX(x) {\n    return x / 360 + 0.5;\n}\n\nfunction projectY(y) {\n    var sin = Math.sin(y * Math.PI / 180);\n    var y2 = 0.5 - 0.25 * Math.log((1 + sin) / (1 - sin)) / Math.PI;\n    return y2 < 0 ? 0 : y2 > 1 ? 1 : y2;\n}\n","\nimport createFeature from './feature';\n\n/* clip features between two axis-parallel lines:\n *     |        |\n *  ___|___     |     /\n * /   |   \\____|____/\n *     |        |\n */\n\nexport default function clip(features, scale, k1, k2, axis, minAll, maxAll, options) {\n\n    k1 /= scale;\n    k2 /= scale;\n\n    if (minAll >= k1 && maxAll < k2) return features; // trivial accept\n    else if (maxAll < k1 || minAll >= k2) return null; // trivial reject\n\n    var clipped = [];\n\n    for (var i = 0; i < features.length; i++) {\n\n        var feature = features[i];\n        var geometry = feature.geometry;\n        var type = feature.type;\n\n        var min = axis === 0 ? feature.minX : feature.minY;\n        var max = axis === 0 ? feature.maxX : feature.maxY;\n\n        if (min >= k1 && max < k2) { // trivial accept\n            clipped.push(feature);\n            continue;\n        } else if (max < k1 || min >= k2) { // trivial reject\n            continue;\n        }\n\n        var newGeometry = [];\n\n        if (type === 'Point' || type === 'MultiPoint') {\n            clipPoints(geometry, newGeometry, k1, k2, axis);\n\n        } else if (type === 'LineString') {\n            clipLine(geometry, newGeometry, k1, k2, axis, false, options.lineMetrics);\n\n        } else if (type === 'MultiLineString') {\n            clipLines(geometry, newGeometry, k1, k2, axis, false);\n\n        } else if (type === 'Polygon') {\n            clipLines(geometry, newGeometry, k1, k2, axis, true);\n\n        } else if (type === 'MultiPolygon') {\n            for (var j = 0; j < geometry.length; j++) {\n                var polygon = [];\n                clipLines(geometry[j], polygon, k1, k2, axis, true);\n                if (polygon.length) {\n                    newGeometry.push(polygon);\n                }\n            }\n        }\n\n        if (newGeometry.length) {\n            if (options.lineMetrics && type === 'LineString') {\n                for (j = 0; j < newGeometry.length; j++) {\n                    clipped.push(createFeature(feature.id, type, newGeometry[j], feature.tags));\n                }\n                continue;\n            }\n\n            if (type === 'LineString' || type === 'MultiLineString') {\n                if (newGeometry.length === 1) {\n                    type = 'LineString';\n                    newGeometry = newGeometry[0];\n                } else {\n                    type = 'MultiLineString';\n                }\n            }\n            if (type === 'Point' || type === 'MultiPoint') {\n                type = newGeometry.length === 3 ? 'Point' : 'MultiPoint';\n            }\n\n            clipped.push(createFeature(feature.id, type, newGeometry, feature.tags));\n        }\n    }\n\n    return clipped.length ? clipped : null;\n}\n\nfunction clipPoints(geom, newGeom, k1, k2, axis) {\n    for (var i = 0; i < geom.length; i += 3) {\n        var a = geom[i + axis];\n\n        if (a >= k1 && a <= k2) {\n            newGeom.push(geom[i]);\n            newGeom.push(geom[i + 1]);\n            newGeom.push(geom[i + 2]);\n        }\n    }\n}\n\nfunction clipLine(geom, newGeom, k1, k2, axis, isPolygon, trackMetrics) {\n\n    var slice = newSlice(geom);\n    var intersect = axis === 0 ? intersectX : intersectY;\n    var len = geom.start;\n    var segLen, t;\n\n    for (var i = 0; i < geom.length - 3; i += 3) {\n        var ax = geom[i];\n        var ay = geom[i + 1];\n        var az = geom[i + 2];\n        var bx = geom[i + 3];\n        var by = geom[i + 4];\n        var a = axis === 0 ? ax : ay;\n        var b = axis === 0 ? bx : by;\n        var exited = false;\n\n        if (trackMetrics) segLen = Math.sqrt(Math.pow(ax - bx, 2) + Math.pow(ay - by, 2));\n\n        if (a < k1) {\n            // ---|-->  | (line enters the clip region from the left)\n            if (b > k1) {\n                t = intersect(slice, ax, ay, bx, by, k1);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else if (a > k2) {\n            // |  <--|--- (line enters the clip region from the right)\n            if (b < k2) {\n                t = intersect(slice, ax, ay, bx, by, k2);\n                if (trackMetrics) slice.start = len + segLen * t;\n            }\n        } else {\n            addPoint(slice, ax, ay, az);\n        }\n        if (b < k1 && a >= k1) {\n            // <--|---  | or <--|-----|--- (line exits the clip region on the left)\n            t = intersect(slice, ax, ay, bx, by, k1);\n            exited = true;\n        }\n        if (b > k2 && a <= k2) {\n            // |  ---|--> or ---|-----|--> (line exits the clip region on the right)\n            t = intersect(slice, ax, ay, bx, by, k2);\n            exited = true;\n        }\n\n        if (!isPolygon && exited) {\n            if (trackMetrics) slice.end = len + segLen * t;\n            newGeom.push(slice);\n            slice = newSlice(geom);\n        }\n\n        if (trackMetrics) len += segLen;\n    }\n\n    // add the last point\n    var last = geom.length - 3;\n    ax = geom[last];\n    ay = geom[last + 1];\n    az = geom[last + 2];\n    a = axis === 0 ? ax : ay;\n    if (a >= k1 && a <= k2) addPoint(slice, ax, ay, az);\n\n    // close the polygon if its endpoints are not the same after clipping\n    last = slice.length - 3;\n    if (isPolygon && last >= 3 && (slice[last] !== slice[0] || slice[last + 1] !== slice[1])) {\n        addPoint(slice, slice[0], slice[1], slice[2]);\n    }\n\n    // add the final slice\n    if (slice.length) {\n        newGeom.push(slice);\n    }\n}\n\nfunction newSlice(line) {\n    var slice = [];\n    slice.size = line.size;\n    slice.start = line.start;\n    slice.end = line.end;\n    return slice;\n}\n\nfunction clipLines(geom, newGeom, k1, k2, axis, isPolygon) {\n    for (var i = 0; i < geom.length; i++) {\n        clipLine(geom[i], newGeom, k1, k2, axis, isPolygon, false);\n    }\n}\n\nfunction addPoint(out, x, y, z) {\n    out.push(x);\n    out.push(y);\n    out.push(z);\n}\n\nfunction intersectX(out, ax, ay, bx, by, x) {\n    var t = (x - ax) / (bx - ax);\n    out.push(x);\n    out.push(ay + (by - ay) * t);\n    out.push(1);\n    return t;\n}\n\nfunction intersectY(out, ax, ay, bx, by, y) {\n    var t = (y - ay) / (by - ay);\n    out.push(ax + (bx - ax) * t);\n    out.push(y);\n    out.push(1);\n    return t;\n}\n","\nimport clip from './clip';\nimport createFeature from './feature';\n\nexport default function wrap(features, options) {\n    var buffer = options.buffer / options.extent;\n    var merged = features;\n    var left  = clip(features, 1, -1 - buffer, buffer,     0, -1, 2, options); // left world copy\n    var right = clip(features, 1,  1 - buffer, 2 + buffer, 0, -1, 2, options); // right world copy\n\n    if (left || right) {\n        merged = clip(features, 1, -buffer, 1 + buffer, 0, -1, 2, options) || []; // center world copy\n\n        if (left) merged = shiftFeatureCoords(left, 1).concat(merged); // merge left into center\n        if (right) merged = merged.concat(shiftFeatureCoords(right, -1)); // merge right into center\n    }\n\n    return merged;\n}\n\nfunction shiftFeatureCoords(features, offset) {\n    var newFeatures = [];\n\n    for (var i = 0; i < features.length; i++) {\n        var feature = features[i],\n            type = feature.type;\n\n        var newGeometry;\n\n        if (type === 'Point' || type === 'MultiPoint' || type === 'LineString') {\n            newGeometry = shiftCoords(feature.geometry, offset);\n\n        } else if (type === 'MultiLineString' || type === 'Polygon') {\n            newGeometry = [];\n            for (var j = 0; j < feature.geometry.length; j++) {\n                newGeometry.push(shiftCoords(feature.geometry[j], offset));\n            }\n        } else if (type === 'MultiPolygon') {\n            newGeometry = [];\n            for (j = 0; j < feature.geometry.length; j++) {\n                var newPolygon = [];\n                for (var k = 0; k < feature.geometry[j].length; k++) {\n                    newPolygon.push(shiftCoords(feature.geometry[j][k], offset));\n                }\n                newGeometry.push(newPolygon);\n            }\n        }\n\n        newFeatures.push(createFeature(feature.id, type, newGeometry, feature.tags));\n    }\n\n    return newFeatures;\n}\n\nfunction shiftCoords(points, offset) {\n    var newPoints = [];\n    newPoints.size = points.size;\n\n    if (points.start !== undefined) {\n        newPoints.start = points.start;\n        newPoints.end = points.end;\n    }\n\n    for (var i = 0; i < points.length; i += 3) {\n        newPoints.push(points[i] + offset, points[i + 1], points[i + 2]);\n    }\n    return newPoints;\n}\n","\n// Transforms the coordinates of each feature in the given tile from\n// mercator-projected space into (extent x extent) tile space.\nexport default function transformTile(tile, extent) {\n    if (tile.transformed) return tile;\n\n    var z2 = 1 << tile.z,\n        tx = tile.x,\n        ty = tile.y,\n        i, j, k;\n\n    for (i = 0; i < tile.features.length; i++) {\n        var feature = tile.features[i],\n            geom = feature.geometry,\n            type = feature.type;\n\n        feature.geometry = [];\n\n        if (type === 1) {\n            for (j = 0; j < geom.length; j += 2) {\n                feature.geometry.push(transformPoint(geom[j], geom[j + 1], extent, z2, tx, ty));\n            }\n        } else {\n            for (j = 0; j < geom.length; j++) {\n                var ring = [];\n                for (k = 0; k < geom[j].length; k += 2) {\n                    ring.push(transformPoint(geom[j][k], geom[j][k + 1], extent, z2, tx, ty));\n                }\n                feature.geometry.push(ring);\n            }\n        }\n    }\n\n    tile.transformed = true;\n\n    return tile;\n}\n\nfunction transformPoint(x, y, extent, z2, tx, ty) {\n    return [\n        Math.round(extent * (x * z2 - tx)),\n        Math.round(extent * (y * z2 - ty))];\n}\n","\nexport default function createTile(features, z, tx, ty, options) {\n    var tolerance = z === options.maxZoom ? 0 : options.tolerance / ((1 << z) * options.extent);\n    var tile = {\n        features: [],\n        numPoints: 0,\n        numSimplified: 0,\n        numFeatures: 0,\n        source: null,\n        x: tx,\n        y: ty,\n        z: z,\n        transformed: false,\n        minX: 2,\n        minY: 1,\n        maxX: -1,\n        maxY: 0\n    };\n    for (var i = 0; i < features.length; i++) {\n        tile.numFeatures++;\n        addFeature(tile, features[i], tolerance, options);\n\n        var minX = features[i].minX;\n        var minY = features[i].minY;\n        var maxX = features[i].maxX;\n        var maxY = features[i].maxY;\n\n        if (minX < tile.minX) tile.minX = minX;\n        if (minY < tile.minY) tile.minY = minY;\n        if (maxX > tile.maxX) tile.maxX = maxX;\n        if (maxY > tile.maxY) tile.maxY = maxY;\n    }\n    return tile;\n}\n\nfunction addFeature(tile, feature, tolerance, options) {\n\n    var geom = feature.geometry,\n        type = feature.type,\n        simplified = [];\n\n    if (type === 'Point' || type === 'MultiPoint') {\n        for (var i = 0; i < geom.length; i += 3) {\n            simplified.push(geom[i]);\n            simplified.push(geom[i + 1]);\n            tile.numPoints++;\n            tile.numSimplified++;\n        }\n\n    } else if (type === 'LineString') {\n        addLine(simplified, geom, tile, tolerance, false, false);\n\n    } else if (type === 'MultiLineString' || type === 'Polygon') {\n        for (i = 0; i < geom.length; i++) {\n            addLine(simplified, geom[i], tile, tolerance, type === 'Polygon', i === 0);\n        }\n\n    } else if (type === 'MultiPolygon') {\n\n        for (var k = 0; k < geom.length; k++) {\n            var polygon = geom[k];\n            for (i = 0; i < polygon.length; i++) {\n                addLine(simplified, polygon[i], tile, tolerance, true, i === 0);\n            }\n        }\n    }\n\n    if (simplified.length) {\n        var tags = feature.tags || null;\n        if (type === 'LineString' && options.lineMetrics) {\n            tags = {};\n            for (var key in feature.tags) tags[key] = feature.tags[key];\n            tags['mapbox_clip_start'] = geom.start / geom.size;\n            tags['mapbox_clip_end'] = geom.end / geom.size;\n        }\n        var tileFeature = {\n            geometry: simplified,\n            type: type === 'Polygon' || type === 'MultiPolygon' ? 3 :\n                type === 'LineString' || type === 'MultiLineString' ? 2 : 1,\n            tags: tags\n        };\n        if (feature.id !== null) {\n            tileFeature.id = feature.id;\n        }\n        tile.features.push(tileFeature);\n    }\n}\n\nfunction addLine(result, geom, tile, tolerance, isPolygon, isOuter) {\n    var sqTolerance = tolerance * tolerance;\n\n    if (tolerance > 0 && (geom.size < (isPolygon ? sqTolerance : tolerance))) {\n        tile.numPoints += geom.length / 3;\n        return;\n    }\n\n    var ring = [];\n\n    for (var i = 0; i < geom.length; i += 3) {\n        if (tolerance === 0 || geom[i + 2] > sqTolerance) {\n            tile.numSimplified++;\n            ring.push(geom[i]);\n            ring.push(geom[i + 1]);\n        }\n        tile.numPoints++;\n    }\n\n    if (isPolygon) rewind(ring, isOuter);\n\n    result.push(ring);\n}\n\nfunction rewind(ring, clockwise) {\n    var area = 0;\n    for (var i = 0, len = ring.length, j = len - 2; i < len; j = i, i += 2) {\n        area += (ring[i] - ring[j]) * (ring[i + 1] + ring[j + 1]);\n    }\n    if (area > 0 === clockwise) {\n        for (i = 0, len = ring.length; i < len / 2; i += 2) {\n            var x = ring[i];\n            var y = ring[i + 1];\n            ring[i] = ring[len - 2 - i];\n            ring[i + 1] = ring[len - 1 - i];\n            ring[len - 2 - i] = x;\n            ring[len - 1 - i] = y;\n        }\n    }\n}\n","\nimport convert from './convert';     // GeoJSON conversion and preprocessing\nimport clip from './clip';           // stripe clipping algorithm\nimport wrap from './wrap';           // date line processing\nimport transform from './transform'; // coordinate transformation\nimport createTile from './tile';     // final simplified tile generation\n\nexport default function geojsonvt(data, options) {\n    return new GeoJSONVT(data, options);\n}\n\nfunction GeoJSONVT(data, options) {\n    options = this.options = extend(Object.create(this.options), options);\n\n    var debug = options.debug;\n\n    if (debug) console.time('preprocess data');\n\n    if (options.maxZoom < 0 || options.maxZoom > 24) throw new Error('maxZoom should be in the 0-24 range');\n    if (options.promoteId && options.generateId) throw new Error('promoteId and generateId cannot be used together.');\n\n    var features = convert(data, options);\n\n    this.tiles = {};\n    this.tileCoords = [];\n\n    if (debug) {\n        console.timeEnd('preprocess data');\n        console.log('index: maxZoom: %d, maxPoints: %d', options.indexMaxZoom, options.indexMaxPoints);\n        console.time('generate tiles');\n        this.stats = {};\n        this.total = 0;\n    }\n\n    features = wrap(features, options);\n\n    // start slicing from the top tile down\n    if (features.length) this.splitTile(features, 0, 0, 0);\n\n    if (debug) {\n        if (features.length) console.log('features: %d, points: %d', this.tiles[0].numFeatures, this.tiles[0].numPoints);\n        console.timeEnd('generate tiles');\n        console.log('tiles generated:', this.total, JSON.stringify(this.stats));\n    }\n}\n\nGeoJSONVT.prototype.options = {\n    maxZoom: 14,            // max zoom to preserve detail on\n    indexMaxZoom: 5,        // max zoom in the tile index\n    indexMaxPoints: 100000, // max number of points per tile in the tile index\n    tolerance: 3,           // simplification tolerance (higher means simpler)\n    extent: 4096,           // tile extent\n    buffer: 64,             // tile buffer on each side\n    lineMetrics: false,     // whether to calculate line metrics\n    promoteId: null,        // name of a feature property to be promoted to feature.id\n    generateId: false,      // whether to generate feature ids. Cannot be used with promoteId\n    debug: 0                // logging level (0, 1 or 2)\n};\n\nGeoJSONVT.prototype.splitTile = function (features, z, x, y, cz, cx, cy) {\n\n    var stack = [features, z, x, y],\n        options = this.options,\n        debug = options.debug;\n\n    // avoid recursion by using a processing queue\n    while (stack.length) {\n        y = stack.pop();\n        x = stack.pop();\n        z = stack.pop();\n        features = stack.pop();\n\n        var z2 = 1 << z,\n            id = toID(z, x, y),\n            tile = this.tiles[id];\n\n        if (!tile) {\n            if (debug > 1) console.time('creation');\n\n            tile = this.tiles[id] = createTile(features, z, x, y, options);\n            this.tileCoords.push({z: z, x: x, y: y});\n\n            if (debug) {\n                if (debug > 1) {\n                    console.log('tile z%d-%d-%d (features: %d, points: %d, simplified: %d)',\n                        z, x, y, tile.numFeatures, tile.numPoints, tile.numSimplified);\n                    console.timeEnd('creation');\n                }\n                var key = 'z' + z;\n                this.stats[key] = (this.stats[key] || 0) + 1;\n                this.total++;\n            }\n        }\n\n        // save reference to original geometry in tile so that we can drill down later if we stop now\n        tile.source = features;\n\n        // if it's the first-pass tiling\n        if (!cz) {\n            // stop tiling if we reached max zoom, or if the tile is too simple\n            if (z === options.indexMaxZoom || tile.numPoints <= options.indexMaxPoints) continue;\n\n        // if a drilldown to a specific tile\n        } else {\n            // stop tiling if we reached base zoom or our target tile zoom\n            if (z === options.maxZoom || z === cz) continue;\n\n            // stop tiling if it's not an ancestor of the target tile\n            var m = 1 << (cz - z);\n            if (x !== Math.floor(cx / m) || y !== Math.floor(cy / m)) continue;\n        }\n\n        // if we slice further down, no need to keep source geometry\n        tile.source = null;\n\n        if (features.length === 0) continue;\n\n        if (debug > 1) console.time('clipping');\n\n        // values we'll use for clipping\n        var k1 = 0.5 * options.buffer / options.extent,\n            k2 = 0.5 - k1,\n            k3 = 0.5 + k1,\n            k4 = 1 + k1,\n            tl, bl, tr, br, left, right;\n\n        tl = bl = tr = br = null;\n\n        left  = clip(features, z2, x - k1, x + k3, 0, tile.minX, tile.maxX, options);\n        right = clip(features, z2, x + k2, x + k4, 0, tile.minX, tile.maxX, options);\n        features = null;\n\n        if (left) {\n            tl = clip(left, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            bl = clip(left, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            left = null;\n        }\n\n        if (right) {\n            tr = clip(right, z2, y - k1, y + k3, 1, tile.minY, tile.maxY, options);\n            br = clip(right, z2, y + k2, y + k4, 1, tile.minY, tile.maxY, options);\n            right = null;\n        }\n\n        if (debug > 1) console.timeEnd('clipping');\n\n        stack.push(tl || [], z + 1, x * 2,     y * 2);\n        stack.push(bl || [], z + 1, x * 2,     y * 2 + 1);\n        stack.push(tr || [], z + 1, x * 2 + 1, y * 2);\n        stack.push(br || [], z + 1, x * 2 + 1, y * 2 + 1);\n    }\n};\n\nGeoJSONVT.prototype.getTile = function (z, x, y) {\n    var options = this.options,\n        extent = options.extent,\n        debug = options.debug;\n\n    if (z < 0 || z > 24) return null;\n\n    var z2 = 1 << z;\n    x = ((x % z2) + z2) % z2; // wrap tile x coordinate\n\n    var id = toID(z, x, y);\n    if (this.tiles[id]) return transform(this.tiles[id], extent);\n\n    if (debug > 1) console.log('drilling down to z%d-%d-%d', z, x, y);\n\n    var z0 = z,\n        x0 = x,\n        y0 = y,\n        parent;\n\n    while (!parent && z0 > 0) {\n        z0--;\n        x0 = Math.floor(x0 / 2);\n        y0 = Math.floor(y0 / 2);\n        parent = this.tiles[toID(z0, x0, y0)];\n    }\n\n    if (!parent || !parent.source) return null;\n\n    // if we found a parent tile containing the original geometry, we can drill down from it\n    if (debug > 1) console.log('found parent tile z%d-%d-%d', z0, x0, y0);\n\n    if (debug > 1) console.time('drilling down');\n    this.splitTile(parent.source, z0, x0, y0, z, x, y);\n    if (debug > 1) console.timeEnd('drilling down');\n\n    return this.tiles[id] ? transform(this.tiles[id], extent) : null;\n};\n\nfunction toID(z, x, y) {\n    return (((1 << z) * y + x) * 32) + z;\n}\n\nfunction extend(dest, src) {\n    for (var i in src) dest[i] = src[i];\n    return dest;\n}\n"],"sourceRoot":""}